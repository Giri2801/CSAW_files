   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f3_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_NVIC_SetPriority
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_NVIC_SetPriority:
  25              	.LVL0:
  26              	.LFB126:
  27              		.file 1 ".././hal/stm32f3/stm32f3_hal_lowlevel.c"
   1:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    
   6:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** */
   8:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
   9:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /*
  10:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
  12:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
  23:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
  34:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** */ 
  36:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  37:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  38:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3_hal.h"
  39:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3_hal_lowlevel.h"
  40:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_rcc.h"
  41:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_gpio.h"
  42:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_dma.h"
  43:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_uart.h"
  44:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_flash.h"
  45:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_cortex.h"
  46:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  47:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  48:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t hal_sys_tick = 0;
  49:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t uwTick = 0;
  50:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000U;
  51:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  52:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
  53:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
  28              		.loc 1 53 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  54:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t prioritygroup = 0x00U;
  32              		.loc 1 54 3 view .LVU1
  55:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
  56:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
  57:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  33              		.loc 1 57 3 view .LVU2
  58:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  34              		.loc 1 58 3 view .LVU3
  59:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
  60:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   prioritygroup = NVIC_GetPriorityGrouping();
  35              		.loc 1 60 3 view .LVU4
  36              	.LBB168:
  37              	.LBI168:
  38              		.file 2 ".././hal/stm32f3/CMSIS/core/core_cm4.h"
   1:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**************************************************************************//**
   2:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  * @file     core_cm4.h
   3:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  * @version  V4.30
   5:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  * @date     20. October 2015
   6:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
   7:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
   9:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    All rights reserved.
  10:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      specific prior written permission.
  20:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    *
  21:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  34:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  35:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
  40:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  41:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  44:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #include <stdint.h>
  45:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  46:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
  47:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  extern "C" {
  48:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
  49:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  50:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
  51:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  54:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  57:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  60:.././hal/stm32f3/CMSIS/core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:.././hal/stm32f3/CMSIS/core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
  63:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  64:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  65:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
  66:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  *                 CMSIS definitions
  67:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
  68:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
  69:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup Cortex_M4
  70:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
  71:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
  72:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  73:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:.././hal/stm32f3/CMSIS/core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  79:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  81:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  82:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if   defined ( __CC_ARM )
  83:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  87:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  92:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
  93:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  97:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 102:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TMS470__ )
 103:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 106:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 107:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 111:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 112:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __packed
 113:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 117:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #else
 118:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #error Unknown compiler
 119:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 120:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 121:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
 124:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if defined ( __CC_ARM )
 125:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 128:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 129:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 131:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 132:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 133:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 134:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 135:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 136:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 140:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 141:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 143:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 144:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 145:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 146:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 147:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 148:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
 149:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 152:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 153:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 155:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 156:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 157:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 158:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 159:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 160:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined __ARMVFP__
 162:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 164:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 165:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 167:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 168:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 169:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 170:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 171:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 172:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TMS470__ )
 173:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 176:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 177:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 179:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 180:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 181:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 182:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 183:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 184:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 185:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if defined __FPU_VFP__
 186:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 188:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 189:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 191:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 192:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 193:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 194:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 195:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 196:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 197:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 200:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #else
 201:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:.././hal/stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 203:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #endif
 204:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #else
 205:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 206:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 207:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 208:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 209:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 210:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 214:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 215:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
 216:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 217:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 218:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 220:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 222:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 225:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 226:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  extern "C" {
 227:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 228:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 229:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* check device defines and use defaults */
 230:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __CM4_REV
 232:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 235:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 236:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 240:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 241:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 245:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 246:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 250:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 251:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #endif
 255:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 256:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 257:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 259:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 261:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
 265:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 266:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #else
 268:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
 270:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 273:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* following defines should be used for structure members */
 274:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 278:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 280:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 281:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 282:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
 283:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  *                 Register Abstraction
 284:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   Core Register contain:
 285:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core Register
 286:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core NVIC Register
 287:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core SCB Register
 288:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core SysTick Register
 289:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core Debug Register
 290:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core MPU Register
 291:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core FPU Register
 292:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
 293:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 294:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
 297:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 298:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 299:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief      Core Register type definitions.
 302:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 303:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 304:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 305:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 306:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 308:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef union
 309:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 310:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   struct
 311:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 312:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } APSR_Type;
 323:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 324:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* APSR Register Definitions */
 325:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 328:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 331:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 334:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 337:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 340:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 343:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 344:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 345:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 347:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef union
 348:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 349:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   struct
 350:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 351:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } IPSR_Type;
 356:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 357:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* IPSR Register Definitions */
 358:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 361:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 362:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 363:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 365:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef union
 366:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 367:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   struct
 368:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 369:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } xPSR_Type;
 383:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 384:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* xPSR Register Definitions */
 385:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 388:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 391:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 394:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 397:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 400:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 403:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 406:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 409:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 412:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 413:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 414:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 416:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef union
 417:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 418:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   struct
 419:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 420:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } CONTROL_Type;
 427:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 428:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* CONTROL Register Definitions */
 429:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 432:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 435:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 438:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 440:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 441:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 442:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 446:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 447:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 448:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 449:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 451:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 452:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 453:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }  NVIC_Type;
 467:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 468:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 472:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 474:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 475:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 476:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 480:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 481:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 482:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 483:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 485:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 486:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 487:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } SCB_Type;
 509:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 510:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 514:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 517:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 520:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 523:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 526:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 530:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 533:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 536:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 539:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 542:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 545:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 548:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 551:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 554:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 557:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 561:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 565:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 568:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 571:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 574:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 577:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 580:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 583:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB System Control Register Definitions */
 584:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 587:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 590:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 593:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 597:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 600:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 603:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 606:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 609:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 612:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 616:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 619:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 622:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 625:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 628:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 631:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 634:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 637:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 640:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 643:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 646:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 649:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 652:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 655:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 659:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 662:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 665:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 669:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 672:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 675:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 679:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 682:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 685:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 688:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 691:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 693:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 694:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 695:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 699:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 700:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 701:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 704:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 705:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } SCnSCB_Type;
 710:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 711:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 715:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 719:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 722:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 725:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 728:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 731:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 733:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 734:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 735:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 739:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 740:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 741:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 742:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 744:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 745:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 746:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } SysTick_Type;
 751:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 752:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 756:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 759:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 762:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 765:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 769:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Current Register Definitions */
 770:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 773:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 777:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 780:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 783:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 785:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 786:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 787:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 791:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 792:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 793:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 794:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 796:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 797:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 798:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __OM  union
 799:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 800:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } ITM_Type;
 831:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 832:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 836:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 840:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 843:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 846:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 849:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 852:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 855:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 858:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 861:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 864:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 868:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 872:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 876:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 880:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 883:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 886:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 888:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 889:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 890:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
 894:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 895:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 896:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
 897:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
 899:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 900:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 901:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } DWT_Type;
 925:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 926:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Control Register Definitions */
 927:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 930:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 933:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 936:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 939:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 942:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 945:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 948:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 951:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 954:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 957:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 960:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 963:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 966:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 969:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 972:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 975:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 978:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 981:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 985:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 989:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 993:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
 997:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1001:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1005:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1009:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1012:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1015:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1018:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1021:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1024:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1027:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1030:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1033:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1035:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1036:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1037:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1041:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1042:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1043:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1044:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1046:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1047:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1048:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } TPI_Type;
1073:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1074:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1078:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1082:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1086:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1089:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1092:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1095:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1099:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1102:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1106:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1110:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1113:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1116:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1119:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1122:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1125:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1128:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1132:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1136:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1139:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1142:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1145:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1148:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1151:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1154:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1158:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1162:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1166:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1169:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1172:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1175:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1178:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1181:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1185:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1188:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1190:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1191:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1193:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1197:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1198:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1199:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1200:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1202:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1203:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1204:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } MPU_Type;
1216:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1217:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* MPU Type Register Definitions */
1218:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1221:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1224:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1227:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* MPU Control Register Definitions */
1228:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1231:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1234:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1237:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1241:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1245:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1248:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1251:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1255:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1258:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1261:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1264:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1267:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1270:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1273:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1276:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1279:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1282:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
1284:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1285:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1286:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1288:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1292:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1293:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1294:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1295:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1297:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1298:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1299:.././hal/stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } FPU_Type;
1306:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1307:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1311:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1314:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1317:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1320:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1323:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1326:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1329:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1332:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1335:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1339:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1343:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1346:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1349:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1352:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1356:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1359:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1362:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1365:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1368:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1371:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1374:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1377:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1381:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1384:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1387:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1390:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
1392:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1393:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1394:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1395:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1399:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1400:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1401:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1402:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1404:.././hal/stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1405:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1406:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:.././hal/stm32f3/CMSIS/core/core_cm4.h **** } CoreDebug_Type;
1411:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1412:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1416:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1419:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1422:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1425:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1428:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1431:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1434:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1437:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1440:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1443:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1446:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1449:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1453:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1456:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1460:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1463:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1466:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1469:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1472:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1475:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1478:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1481:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1484:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1487:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1490:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1493:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1496:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1498:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1499:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1500:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1504:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1505:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1506:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1507:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return           Masked and shifted value.
1511:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
1512:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1514:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1515:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param[in] value  Value of register.
1518:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
1520:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1522:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1524:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1525:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1526:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1530:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1531:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1532:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1542:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1551:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
1555:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1556:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:.././hal/stm32f3/CMSIS/core/core_cm4.h **** #endif
1560:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1561:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*@} */
1562:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1563:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1564:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1565:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
1566:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  *                Hardware Abstraction Layer
1567:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   Core Function Interface contains:
1568:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core NVIC Functions
1569:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core SysTick Functions
1570:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core Debug Functions
1571:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   - Core Register Access Functions
1572:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
1573:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1574:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:.././hal/stm32f3/CMSIS/core/core_cm4.h **** */
1576:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1577:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1578:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1579:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1581:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   @{
1585:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1586:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1587:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1588:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Priority Grouping
1589:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            Only values from 0..7 are used.
1592:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1596:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1598:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t reg_value;
1599:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1601:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:.././hal/stm32f3/CMSIS/core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:.././hal/stm32f3/CMSIS/core/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1608:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1609:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1610:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1611:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Priority Grouping
1612:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1615:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
  39              		.loc 2 1615 26 view .LVU5
  40              	.LBB169:
1616:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1617:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  41              		.loc 2 1617 3 view .LVU6
  42              		.loc 2 1617 26 is_stmt 0 view .LVU7
  43 0000 164B     		ldr	r3, .L6
  44              	.LBE169:
  45              	.LBE168:
  53:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t prioritygroup = 0x00U;
  46              		.loc 1 53 1 view .LVU8
  47 0002 30B5     		push	{r4, r5, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 12
  50              		.cfi_offset 4, -12
  51              		.cfi_offset 5, -8
  52              		.cfi_offset 14, -4
  53              	.LBB171:
  54              	.LBB170:
  55              		.loc 2 1617 26 view .LVU9
  56 0004 DC68     		ldr	r4, [r3, #12]
  57              		.loc 2 1617 11 view .LVU10
  58 0006 C4F30224 		ubfx	r4, r4, #8, #3
  59              	.LVL1:
  60              		.loc 2 1617 11 view .LVU11
  61              	.LBE170:
  62              	.LBE171:
  61:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
  62:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
  63              		.loc 1 62 3 is_stmt 1 view .LVU12
  64              	.LBB172:
  65              	.LBI172:
1618:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1619:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1620:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1621:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1622:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Enable External Interrupt
1623:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1626:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1628:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1630:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1631:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1632:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1633:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Disable External Interrupt
1634:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1637:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1639:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1641:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1642:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1643:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1644:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Pending Interrupt
1645:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1650:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1652:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1654:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1655:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1656:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1657:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Pending Interrupt
1658:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1661:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1663:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1665:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1666:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1667:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1668:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1672:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1674:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1676:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1677:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1678:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1679:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Active Interrupt
1680:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is active.
1684:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1685:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1687:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1689:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1690:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1691:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1692:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Interrupt Priority
1693:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1698:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1700:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
1702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
1704:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   else
1705:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
1708:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1709:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1710:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1711:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1712:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Priority
1713:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return             Interrupt Priority.
1718:.././hal/stm32f3/CMSIS/core/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1720:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1722:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1723:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
1725:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
1727:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   else
1728:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
1729:.././hal/stm32f3/CMSIS/core/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
1731:.././hal/stm32f3/CMSIS/core/core_cm4.h **** }
1732:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1733:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1734:.././hal/stm32f3/CMSIS/core/core_cm4.h **** /**
1735:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \brief   Encode Priority
1736:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:.././hal/stm32f3/CMSIS/core/core_cm4.h ****  */
1745:.././hal/stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
  66              		.loc 2 1745 26 view .LVU13
  67              	.LBB173:
1746:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
1747:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
  68              		.loc 2 1747 3 view .LVU14
1748:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
  69              		.loc 2 1748 3 view .LVU15
1749:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   uint32_t SubPriorityBits;
  70              		.loc 2 1749 3 view .LVU16
1750:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1751:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
  71              		.loc 2 1751 3 view .LVU17
  72              		.loc 2 1751 31 is_stmt 0 view .LVU18
  73 000a C4F10703 		rsb	r3, r4, #7
1752:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  74              		.loc 2 1752 44 view .LVU19
  75 000e 251D     		adds	r5, r4, #4
1751:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  76              		.loc 2 1751 23 view .LVU20
  77 0010 042B     		cmp	r3, #4
  78 0012 28BF     		it	cs
  79 0014 0423     		movcs	r3, #4
  80              	.LVL2:
  81              		.loc 2 1752 3 is_stmt 1 view .LVU21
  82              		.loc 2 1752 109 is_stmt 0 view .LVU22
  83 0016 062D     		cmp	r5, #6
1753:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
1754:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   return (
1755:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  84              		.loc 2 1755 30 view .LVU23
  85 0018 4FF0FF35 		mov	r5, #-1
  86 001c 05FA03F3 		lsl	r3, r5, r3
  87              	.LVL3:
1752:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  88              		.loc 2 1752 109 view .LVU24
  89 0020 8CBF     		ite	hi
  90 0022 033C     		subhi	r4, r4, #3
  91              	.LVL4:
1752:.././hal/stm32f3/CMSIS/core/core_cm4.h **** 
  92              		.loc 2 1752 109 view .LVU25
  93 0024 0024     		movls	r4, #0
  94              	.LVL5:
1754:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  95              		.loc 2 1754 3 is_stmt 1 view .LVU26
1754:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  96              		.loc 2 1754 3 is_stmt 0 view .LVU27
  97              	.LBE173:
  98              	.LBE172:
  99              	.LBB176:
 100              	.LBI176:
1698:.././hal/stm32f3/CMSIS/core/core_cm4.h **** {
 101              		.loc 2 1698 22 is_stmt 1 view .LVU28
 102              	.LBB177:
1700:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 103              		.loc 2 1700 3 view .LVU29
 104              	.LBE177:
 105              	.LBE176:
 106              	.LBB180:
 107              	.LBB174:
 108              		.loc 2 1755 30 is_stmt 0 view .LVU30
 109 0026 21EA0303 		bic	r3, r1, r3
 110              		.loc 2 1755 82 view .LVU31
 111 002a A340     		lsls	r3, r3, r4
1756:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 112              		.loc 2 1756 30 view .LVU32
 113 002c 05FA04F4 		lsl	r4, r5, r4
 114              	.LVL6:
 115              		.loc 2 1756 30 view .LVU33
 116 0030 22EA0402 		bic	r2, r2, r4
 117              	.LVL7:
 118              		.loc 2 1756 30 view .LVU34
 119              	.LBE174:
 120              	.LBE180:
 121              	.LBB181:
 122              	.LBB178:
1700:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   {
 123              		.loc 2 1700 6 view .LVU35
 124 0034 0028     		cmp	r0, #0
1702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 125              		.loc 2 1702 5 is_stmt 1 view .LVU36
 126              	.LBE178:
 127              	.LBE181:
 128              	.LBB182:
 129              	.LBB175:
1755:.././hal/stm32f3/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 130              		.loc 2 1755 102 is_stmt 0 view .LVU37
 131 0036 43EA0203 		orr	r3, r3, r2
 132              	.LBE175:
 133              	.LBE182:
 134              	.LBB183:
 135              	.LBB179:
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 136              		.loc 2 1706 55 view .LVU38
 137 003a ACBF     		ite	ge
 138 003c 00F16040 		addge	r0, r0, #-536870912
 139              	.LVL8:
1702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 140              		.loc 2 1702 55 view .LVU39
 141 0040 074A     		ldrlt	r2, .L6+4
 142 0042 4FEA0313 		lsl	r3, r3, #4
1702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 143              		.loc 2 1702 41 view .LVU40
 144 0046 B8BF     		it	lt
 145 0048 00F00F00 		andlt	r0, r0, #15
 146 004c DBB2     		uxtb	r3, r3
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 147              		.loc 2 1706 55 view .LVU41
 148 004e AABF     		itet	ge
 149 0050 00F56140 		addge	r0, r0, #57600
1702:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 150              		.loc 2 1702 55 view .LVU42
 151 0054 1354     		strblt	r3, [r2, r0]
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 152              		.loc 2 1706 5 is_stmt 1 view .LVU43
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 153              		.loc 2 1706 55 is_stmt 0 view .LVU44
 154 0056 80F80033 		strbge	r3, [r0, #768]
 155              	.LVL9:
1706:.././hal/stm32f3/CMSIS/core/core_cm4.h ****   }
 156              		.loc 2 1706 55 view .LVU45
 157              	.LBE179:
 158              	.LBE183:
  63:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 159              		.loc 1 63 1 view .LVU46
 160 005a 30BD     		pop	{r4, r5, pc}
 161              	.L7:
 162              		.align	2
 163              	.L6:
 164 005c 00ED00E0 		.word	-536810240
 165 0060 14ED00E0 		.word	-536810220
 166              		.cfi_endproc
 167              	.LFE126:
 169              		.section	.text.HAL_InitTick,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_InitTick
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu softvfp
 177              	HAL_InitTick:
 178              	.LVL10:
 179              	.LFB127:
  64:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  65:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #ifndef ENABLE_TICK_TIMING
  66:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  67:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 180              		.loc 1 67 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
  68:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 	hal_sys_tick = 0;
 185              		.loc 1 68 2 view .LVU48
 186              		.loc 1 68 15 is_stmt 0 view .LVU49
 187 0000 014B     		ldr	r3, .L9
 188 0002 0020     		movs	r0, #0
 189              	.LVL11:
 190              		.loc 1 68 15 view .LVU50
 191 0004 1860     		str	r0, [r3]
  69:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 	return HAL_OK;
 192              		.loc 1 69 2 is_stmt 1 view .LVU51
  70:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 193              		.loc 1 70 1 is_stmt 0 view .LVU52
 194 0006 7047     		bx	lr
 195              	.L10:
 196              		.align	2
 197              	.L9:
 198 0008 00000000 		.word	.LANCHOR0
 199              		.cfi_endproc
 200              	.LFE127:
 202              		.section	.text.HAL_GetTick,"ax",%progbits
 203              		.align	1
 204              		.global	HAL_GetTick
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	HAL_GetTick:
 211              	.LFB128:
  71:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  72:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 212              		.loc 1 72 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
  73:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 	return hal_sys_tick++;
 217              		.loc 1 73 2 view .LVU54
 218              		.loc 1 73 21 is_stmt 0 view .LVU55
 219 0000 024B     		ldr	r3, .L12
 220 0002 1868     		ldr	r0, [r3]
 221 0004 421C     		adds	r2, r0, #1
 222 0006 1A60     		str	r2, [r3]
  74:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 223              		.loc 1 74 1 view .LVU56
 224 0008 7047     		bx	lr
 225              	.L13:
 226 000a 00BF     		.align	2
 227              	.L12:
 228 000c 00000000 		.word	.LANCHOR0
 229              		.cfi_endproc
 230              	.LFE128:
 232              		.section	.text.HAL_IncTick,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_IncTick
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu softvfp
 240              	HAL_IncTick:
 241              	.LFB129:
  75:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** void HAL_IncTick(void)
  76:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 242              		.loc 1 76 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
  77:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 247              		.loc 1 77 1 view .LVU58
 248 0000 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE129:
 252              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_RCC_GetSysClockFreq
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu softvfp
 260              	HAL_RCC_GetSysClockFreq:
 261              	.LFB130:
  78:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #else
  79:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  80:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
  81:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
  82:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   HAL_SYSTICK_Config(SystemCoreClock / 1000U);
  83:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  84:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*Configure the SysTick IRQ priority */
  85:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
  86:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  87:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    /* Return function status */
  88:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
  89:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
  90:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** __weak uint32_t HAL_GetTick(void)
  91:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
  92:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return uwTick;
  93:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
  94:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
  95:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** __weak void HAL_IncTick(void)
  96:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
  97:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uwTick++;
  98:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
  99:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif
 100:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 101:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 102:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 103:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 104:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 105:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 106:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 107:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 262              		.loc 1 107 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 108:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 	return F_CPU;
 267              		.loc 1 108 2 view .LVU60
 109:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 268              		.loc 1 109 1 is_stmt 0 view .LVU61
 269 0000 4FF4E100 		mov	r0, #7372800
 270 0004 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE130:
 274              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 275              		.align	1
 276              		.global	HAL_RCC_GetPCLK1Freq
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 282              	HAL_RCC_GetPCLK1Freq:
 283              	.LFB145:
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 4FF4E100 		mov	r0, #7372800
 289 0004 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE145:
 293              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_RCC_OscConfig
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu softvfp
 301              	HAL_RCC_OscConfig:
 302              	.LVL12:
 303              	.LFB132:
 110:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 111:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 112:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 113:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 	return F_CPU;
 114:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 115:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 116:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 117:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 118:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
 119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 120:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
 121:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
 122:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 123:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
 124:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
 125:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 126:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
 127:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
 128:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 129:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 130:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 131:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 304              		.loc 1 131 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 132:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 308              		.loc 1 132 4 view .LVU63
 133:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 134:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 135:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 309              		.loc 1 135 3 view .LVU64
 136:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 310              		.loc 1 136 3 view .LVU65
 137:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 138:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 139:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 311              		.loc 1 139 3 view .LVU66
 312              		.loc 1 139 43 is_stmt 0 view .LVU67
 313 0000 0368     		ldr	r3, [r0]
 131:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 314              		.loc 1 131 1 view .LVU68
 315 0002 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 316              	.LCFI1:
 317              		.cfi_def_cfa_offset 40
 318              		.cfi_offset 4, -28
 319              		.cfi_offset 5, -24
 320              		.cfi_offset 6, -20
 321              		.cfi_offset 7, -16
 322              		.cfi_offset 8, -12
 323              		.cfi_offset 9, -8
 324              		.cfi_offset 14, -4
 325              		.loc 1 139 5 view .LVU69
 326 0006 D907     		lsls	r1, r3, #31
 131:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 327              		.loc 1 131 1 view .LVU70
 328 0008 0446     		mov	r4, r0
 329              		.loc 1 139 5 view .LVU71
 330 000a 11D4     		bmi	.L18
 331              	.LVL13:
 332              	.L23:
 140:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 141:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 142:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 143:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 144:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 145:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 147:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 149:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 150:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 151:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 152:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 153:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 154:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 155:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 157:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 158:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 159:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the HSE predivision factor --------------------------------*/
 160:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 161:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 162:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 163:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        /* Check the HSE State */
 164:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 165:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 166:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 167:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 168:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 169:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSE is ready */
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 171:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 173:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 174:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 175:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 176:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 177:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 178:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
 179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 180:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 181:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 182:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 183:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 185:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 187:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 188:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 189:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 190:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 191:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 192:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 194:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 195:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 333              		.loc 1 195 3 is_stmt 1 view .LVU72
 334              		.loc 1 195 43 is_stmt 0 view .LVU73
 335 000c 2368     		ldr	r3, [r4]
 336              		.loc 1 195 5 view .LVU74
 337 000e 9A07     		lsls	r2, r3, #30
 338 0010 00F18680 		bmi	.L19
 339              	.L35:
 196:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 197:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 199:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 200:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 201:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 202:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 204:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 205:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 207:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 208:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 209:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 210:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 211:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
 212:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 213:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 214:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 215:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 216:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 217:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 218:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 219:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSI State */
 220:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 221:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 222:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 223:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 224:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 225:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 226:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 227:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 228:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSI is ready */
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 230:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 231:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 232:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 233:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 234:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 235:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 236:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                 
 237:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 238:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 239:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 240:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
 241:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 242:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 243:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 244:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 245:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 246:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 247:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 248:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 250:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 251:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 252:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 253:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 254:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 255:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 256:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 257:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 258:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 259:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 260:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 340              		.loc 1 260 3 is_stmt 1 view .LVU75
 341              		.loc 1 260 43 is_stmt 0 view .LVU76
 342 0014 2368     		ldr	r3, [r4]
 343              		.loc 1 260 5 view .LVU77
 344 0016 1E07     		lsls	r6, r3, #28
 345 0018 00F1F480 		bmi	.L45
 346              	.L51:
 261:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 262:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 263:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 264:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 265:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSI State */
 266:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 267:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 268:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 269:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 270:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 271:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 272:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 273:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 274:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 276:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 277:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 278:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 279:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 280:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 281:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 282:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 283:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 284:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 285:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 286:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 287:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 288:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 289:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 290:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 291:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 293:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 294:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 295:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 296:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 297:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 298:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 299:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 300:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 301:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 302:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 347              		.loc 1 302 3 is_stmt 1 view .LVU78
 348              		.loc 1 302 43 is_stmt 0 view .LVU79
 349 001c 2368     		ldr	r3, [r4]
 350              		.loc 1 302 5 view .LVU80
 351 001e 5D07     		lsls	r5, r3, #29
 352 0020 00F13B81 		bmi	.L46
 353              	.L54:
 303:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 304:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 305:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 306:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 307:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 308:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 309:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 310:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 311:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 312:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 314:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 315:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 316:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 317:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 318:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 319:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 320:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 321:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 322:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 323:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 324:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 325:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 326:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 327:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 328:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 329:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 330:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 331:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 332:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 333:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 334:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 336:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 337:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 338:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 339:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 340:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 341:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 342:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 344:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 346:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 347:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 348:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 349:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 350:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 351:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 352:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 353:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 354:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 355:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 356:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 358:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 360:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 361:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 362:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 363:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 364:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 365:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 366:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 367:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 368:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 369:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 370:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 371:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 372:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 373:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 374:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 375:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 354              		.loc 1 375 3 is_stmt 1 view .LVU81
 376:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 355              		.loc 1 376 3 view .LVU82
 356              		.loc 1 376 30 is_stmt 0 view .LVU83
 357 0024 E269     		ldr	r2, [r4, #28]
 358              		.loc 1 376 6 view .LVU84
 359 0026 002A     		cmp	r2, #0
 360 0028 40F0CE81 		bne	.L76
 361              	.LVL14:
 362              	.L82:
 377:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 378:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 379:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 380:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     { 
 381:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 382:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 383:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the parameters */
 384:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 385:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 386:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 387:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 388:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif
 389:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 390:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the main PLL. */
 391:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 392:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 393:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 394:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 395:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 396:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 398:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 400:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 401:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 402:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 403:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 404:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 405:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 406:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 407:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 408:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 409:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 410:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #else
 411:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the main PLL clock source and multiplication factor. */
 412:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 413:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 414:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 415:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Enable the main PLL. */
 416:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 417:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 418:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 419:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 420:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 421:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is ready */
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 423:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 425:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 426:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 427:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 428:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 429:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 430:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
 431:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 432:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the main PLL. */
 433:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 434:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****  
 435:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 436:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 437:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 438:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 440:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 442:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 443:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 444:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 445:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 446:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 447:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 448:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 449:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 450:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 451:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 452:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 453:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 454:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 363              		.loc 1 454 10 view .LVU85
 364 002c 0020     		movs	r0, #0
 365 002e 21E0     		b	.L24
 366              	.LVL15:
 367              	.L18:
 142:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 368              		.loc 1 142 5 is_stmt 1 view .LVU86
 145:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 369              		.loc 1 145 5 view .LVU87
 145:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 370              		.loc 1 145 9 is_stmt 0 view .LVU88
 371 0030 B749     		ldr	r1, .L111
 372 0032 4B68     		ldr	r3, [r1, #4]
 373 0034 03F00C03 		and	r3, r3, #12
 145:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 374              		.loc 1 145 7 view .LVU89
 375 0038 042B     		cmp	r3, #4
 376 003a 07D0     		beq	.L21
 146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 377              		.loc 1 146 13 view .LVU90
 378 003c 4B68     		ldr	r3, [r1, #4]
 379 003e 03F00C03 		and	r3, r3, #12
 146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 380              		.loc 1 146 8 view .LVU91
 381 0042 082B     		cmp	r3, #8
 382 0044 19D1     		bne	.L22
 146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 383              		.loc 1 146 82 discriminator 1 view .LVU92
 384 0046 4B68     		ldr	r3, [r1, #4]
 146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 385              		.loc 1 146 78 discriminator 1 view .LVU93
 386 0048 DB03     		lsls	r3, r3, #15
 387 004a 16D5     		bpl	.L22
 388              	.L21:
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 389              		.loc 1 148 7 is_stmt 1 view .LVU94
 390              	.LVL16:
 391              	.LBB184:
 392              	.LBI184:
 393              		.file 3 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h"
   1:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**************************************************************************//**
   2:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * @version  V4.30
   5:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * @date     20. October 2015
   6:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  ******************************************************************************/
   7:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
   9:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    All rights reserved.
  10:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****      specific prior written permission.
  20:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    *
  21:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  34:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  35:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  38:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
  45:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  46:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  47:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   @{
  51:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  52:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  53:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  54:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  58:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
  60:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
  62:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  63:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  64:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  65:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  69:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
  71:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
  73:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  74:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  75:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  76:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register
  77:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Control Register value
  79:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  80:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
  82:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
  83:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  84:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
  86:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
  87:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  88:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  89:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  90:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register
  91:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  94:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
  96:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
  98:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
  99:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 100:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 101:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               IPSR Register value
 104:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 105:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 107:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 108:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 109:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 111:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 112:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 113:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 114:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 115:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               APSR Register value
 118:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 119:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 121:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 122:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 123:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 125:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 126:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 127:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 128:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 129:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 132:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     \return               xPSR Register value
 133:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 134:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 136:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 137:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 138:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 140:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 141:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 142:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 143:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 144:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 147:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 148:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 150:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 151:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 152:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 154:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 155:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 156:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 157:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 158:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 162:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 164:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 166:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 167:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 168:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 169:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 172:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 173:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 175:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 176:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 177:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 179:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 180:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 181:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 182:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 183:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 186:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 188:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 190:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 192:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 193:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 194:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 195:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
 198:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 199:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 201:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 202:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 203:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 205:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 206:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 207:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 208:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 209:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 213:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 215:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 217:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 218:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 219:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 221:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 222:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 226:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 228:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 230:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 231:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 232:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 233:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 237:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 239:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 241:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 242:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 243:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 244:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 247:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 248:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 250:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 251:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 252:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 254:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 255:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 256:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 257:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 258:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 262:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 264:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 266:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 267:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 268:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 269:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 274:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 276:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 278:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 279:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 280:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 281:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 285:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 287:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 288:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 289:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 291:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 292:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 293:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 294:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 295:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 299:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 301:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 303:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 304:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 306:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 307:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 309:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 310:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 314:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 316:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 318:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 319:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 321:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 323:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 324:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 325:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    return(0);
 326:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 327:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 328:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 329:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 330:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 331:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 335:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 337:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 340:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 342:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 343:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 344:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 345:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 347:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 348:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 349:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 351:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 352:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   Access to dedicated instructions
 355:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   @{
 356:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** */
 357:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 358:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 365:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 368:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 369:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 370:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   No Operation
 371:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 373:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 375:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 377:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 378:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 379:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 380:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 383:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 385:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 387:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 388:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 389:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 390:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Event
 391:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 394:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 396:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 398:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 399:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 400:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 401:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Send Event
 402:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 404:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 406:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 408:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 409:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 410:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 411:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            after the instruction has been completed.
 415:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 416:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 418:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 420:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 421:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 422:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 423:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 427:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 429:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 431:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 432:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 433:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 434:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 438:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 440:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 442:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 443:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 444:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 445:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 449:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 450:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 452:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 455:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 456:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 457:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 459:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 460:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 461:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 462:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 463:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 464:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 468:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 469:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 471:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 472:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 473:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 475:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 476:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 477:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 478:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 479:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 483:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 484:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 486:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 489:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   int32_t result;
 490:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 491:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 493:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 494:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 495:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 496:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 497:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 498:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Rotated value
 503:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 504:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 506:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** }
 508:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 509:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 510:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 511:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Breakpoint
 512:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 517:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 519:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 520:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 521:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 525:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 394              		.loc 3 526 57 view .LVU95
 395              	.LBB185:
 527:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 396              		.loc 3 528 3 view .LVU96
 529:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 530:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 397              		.loc 3 531 4 view .LVU97
 398 004c 4FF40033 		mov	r3, #131072
 399              		.syntax unified
 400              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 401 0050 93FAA3F2 		rbit r2, r3
 402              	@ 0 "" 2
 403              	.LVL17:
 532:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 533:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 535:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   {
 538:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     result <<= 1U;
 539:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     result |= value & 1U;
 540:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****     s--;
 541:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   }
 542:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 544:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 404              		.loc 3 544 3 view .LVU98
 405              		.loc 3 544 3 is_stmt 0 view .LVU99
 406              		.thumb
 407              		.syntax unified
 408              	.LBE185:
 409              	.LBE184:
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 410              		.loc 1 148 11 view .LVU100
 411 0054 0968     		ldr	r1, [r1]
 412              	.LVL18:
 413              	.LBB186:
 414              	.LBI186:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 415              		.loc 3 526 57 is_stmt 1 view .LVU101
 416              	.LBB187:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 417              		.loc 3 528 3 view .LVU102
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 418              		.loc 3 531 4 view .LVU103
 419              		.syntax unified
 420              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 421 0056 93FAA3F3 		rbit r3, r3
 422              	@ 0 "" 2
 423              	.LVL19:
 424              		.loc 3 544 3 view .LVU104
 425              		.loc 3 544 3 is_stmt 0 view .LVU105
 426              		.thumb
 427              		.syntax unified
 428              	.LBE187:
 429              	.LBE186:
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 430              		.loc 1 148 11 view .LVU106
 431 005a B3FA83F3 		clz	r3, r3
 432 005e 03F01F03 		and	r3, r3, #31
 433 0062 0122     		movs	r2, #1
 434 0064 02FA03F3 		lsl	r3, r2, r3
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 435              		.loc 1 148 9 view .LVU107
 436 0068 0B42     		tst	r3, r1
 437 006a CFD0     		beq	.L23
 148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 438              		.loc 1 148 57 discriminator 13 view .LVU108
 439 006c 6368     		ldr	r3, [r4, #4]
 440 006e 002B     		cmp	r3, #0
 441 0070 CCD1     		bne	.L23
 442              	.LVL20:
 443              	.L39:
 150:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 444              		.loc 1 150 16 view .LVU109
 445 0072 0120     		movs	r0, #1
 446              	.LVL21:
 447              	.L24:
 455:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 448              		.loc 1 455 1 view .LVU110
 449 0074 03B0     		add	sp, sp, #12
 450              	.LCFI2:
 451              		.cfi_remember_state
 452              		.cfi_def_cfa_offset 28
 453              		@ sp needed
 454 0076 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 455              	.LVL22:
 456              	.L22:
 457              	.LCFI3:
 458              		.cfi_restore_state
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 459              		.loc 1 156 7 is_stmt 1 view .LVU111
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 460              		.loc 1 156 7 view .LVU112
 461 007a 6268     		ldr	r2, [r4, #4]
 462 007c B2F5803F 		cmp	r2, #65536
 463 0080 24D1     		bne	.L25
 464              	.L109:
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 465              		.loc 1 156 7 discriminator 7 view .LVU113
 466 0082 0B68     		ldr	r3, [r1]
 467 0084 43F48033 		orr	r3, r3, #65536
 468              	.L106:
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 469              		.loc 1 156 7 is_stmt 0 discriminator 8 view .LVU114
 470 0088 0B60     		str	r3, [r1]
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 471              		.loc 1 156 7 is_stmt 1 discriminator 8 view .LVU115
 160:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 472              		.loc 1 160 7 discriminator 8 view .LVU116
 473 008a CB6A     		ldr	r3, [r1, #44]
 474 008c A068     		ldr	r0, [r4, #8]
 475              	.LVL23:
 160:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 476              		.loc 1 160 7 is_stmt 0 discriminator 8 view .LVU117
 477 008e 23F00F03 		bic	r3, r3, #15
 478 0092 0343     		orrs	r3, r3, r0
 479 0094 CB62     		str	r3, [r1, #44]
 164:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 480              		.loc 1 164 7 is_stmt 1 discriminator 8 view .LVU118
 164:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 481              		.loc 1 164 9 is_stmt 0 discriminator 8 view .LVU119
 482 0096 4AB3     		cbz	r2, .L29
 167:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 483              		.loc 1 167 9 is_stmt 1 view .LVU120
 167:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 484              		.loc 1 167 21 is_stmt 0 view .LVU121
 485 0098 FFF7FEFF 		bl	HAL_GetTick
 486              	.LVL24:
 487              	.LBB188:
 488              	.LBB189:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 489              		.loc 3 531 4 view .LVU122
 490 009c 4FF40036 		mov	r6, #131072
 491              	.LBE189:
 492              	.LBE188:
 167:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 493              		.loc 1 167 21 view .LVU123
 494 00a0 0546     		mov	r5, r0
 495              	.LVL25:
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 496              		.loc 1 170 9 is_stmt 1 view .LVU124
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 497              		.loc 1 170 15 is_stmt 0 view .LVU125
 498 00a2 0127     		movs	r7, #1
 499              	.LVL26:
 500              	.L30:
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 501              		.loc 1 170 14 is_stmt 1 view .LVU126
 502              	.LBB191:
 503              	.LBI188:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 504              		.loc 3 526 57 view .LVU127
 505              	.LBB190:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 506              		.loc 3 528 3 view .LVU128
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 507              		.loc 3 531 4 view .LVU129
 508              		.syntax unified
 509              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 510 00a4 96FAA6F3 		rbit r3, r6
 511              	@ 0 "" 2
 512              	.LVL27:
 513              		.loc 3 544 3 view .LVU130
 514              		.loc 3 544 3 is_stmt 0 view .LVU131
 515              		.thumb
 516              		.syntax unified
 517              	.LBE190:
 518              	.LBE191:
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 519              		.loc 1 170 15 view .LVU132
 520 00a8 0A68     		ldr	r2, [r1]
 521              	.LVL28:
 522              	.LBB192:
 523              	.LBI192:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 524              		.loc 3 526 57 is_stmt 1 view .LVU133
 525              	.LBB193:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 526              		.loc 3 528 3 view .LVU134
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 527              		.loc 3 531 4 view .LVU135
 528              		.syntax unified
 529              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 530 00aa 96FAA6F3 		rbit r3, r6
 531              	@ 0 "" 2
 532              	.LVL29:
 533              		.loc 3 544 3 view .LVU136
 534              		.loc 3 544 3 is_stmt 0 view .LVU137
 535              		.thumb
 536              		.syntax unified
 537              	.LBE193:
 538              	.LBE192:
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 539              		.loc 1 170 15 view .LVU138
 540 00ae B3FA83F3 		clz	r3, r3
 541 00b2 03F01F03 		and	r3, r3, #31
 542 00b6 07FA03F3 		lsl	r3, r7, r3
 170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 543              		.loc 1 170 14 view .LVU139
 544 00ba 1342     		tst	r3, r2
 545 00bc A6D1     		bne	.L23
 172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 546              		.loc 1 172 11 is_stmt 1 view .LVU140
 172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 547              		.loc 1 172 15 is_stmt 0 view .LVU141
 548 00be FFF7FEFF 		bl	HAL_GetTick
 549              	.LVL30:
 172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 550              		.loc 1 172 29 view .LVU142
 551 00c2 401B     		subs	r0, r0, r5
 172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 552              		.loc 1 172 13 view .LVU143
 553 00c4 6428     		cmp	r0, #100
 554 00c6 EDD9     		bls	.L30
 555              	.LVL31:
 556              	.L33:
 174:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           }
 557              		.loc 1 174 20 view .LVU144
 558 00c8 0320     		movs	r0, #3
 559 00ca D3E7     		b	.L24
 560              	.LVL32:
 561              	.L25:
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 562              		.loc 1 156 7 is_stmt 1 discriminator 2 view .LVU145
 563 00cc 0B68     		ldr	r3, [r1]
 564 00ce 32B9     		cbnz	r2, .L27
 565              	.L28:
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 566              		.loc 1 156 7 discriminator 8 view .LVU146
 567 00d0 23F48033 		bic	r3, r3, #65536
 568 00d4 0B60     		str	r3, [r1]
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 569              		.loc 1 156 7 discriminator 8 view .LVU147
 570 00d6 0B68     		ldr	r3, [r1]
 571 00d8 23F48023 		bic	r3, r3, #262144
 572 00dc D4E7     		b	.L106
 573              	.L27:
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 574              		.loc 1 156 7 discriminator 5 view .LVU148
 575 00de B2F5A02F 		cmp	r2, #327680
 576 00e2 F5D1     		bne	.L28
 156:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 577              		.loc 1 156 7 discriminator 7 view .LVU149
 578 00e4 43F48023 		orr	r3, r3, #262144
 579 00e8 0B60     		str	r3, [r1]
 580 00ea CAE7     		b	.L109
 581              	.LVL33:
 582              	.L29:
 181:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 583              		.loc 1 181 9 view .LVU150
 181:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 584              		.loc 1 181 21 is_stmt 0 view .LVU151
 585 00ec FFF7FEFF 		bl	HAL_GetTick
 586              	.LVL34:
 587              	.LBB194:
 588              	.LBB195:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 589              		.loc 3 531 4 view .LVU152
 590 00f0 4FF40036 		mov	r6, #131072
 591              	.LBE195:
 592              	.LBE194:
 181:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 593              		.loc 1 181 21 view .LVU153
 594 00f4 0546     		mov	r5, r0
 595              	.LVL35:
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 596              		.loc 1 184 9 is_stmt 1 view .LVU154
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 597              		.loc 1 184 15 is_stmt 0 view .LVU155
 598 00f6 0127     		movs	r7, #1
 599              	.LVL36:
 600              	.L32:
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 601              		.loc 1 184 14 is_stmt 1 view .LVU156
 602              	.LBB197:
 603              	.LBI194:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 604              		.loc 3 526 57 view .LVU157
 605              	.LBB196:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 606              		.loc 3 528 3 view .LVU158
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 607              		.loc 3 531 4 view .LVU159
 608              		.syntax unified
 609              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 610 00f8 96FAA6F3 		rbit r3, r6
 611              	@ 0 "" 2
 612              	.LVL37:
 613              		.loc 3 544 3 view .LVU160
 614              		.loc 3 544 3 is_stmt 0 view .LVU161
 615              		.thumb
 616              		.syntax unified
 617              	.LBE196:
 618              	.LBE197:
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 619              		.loc 1 184 15 view .LVU162
 620 00fc 0A68     		ldr	r2, [r1]
 621              	.LVL38:
 622              	.LBB198:
 623              	.LBI198:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 624              		.loc 3 526 57 is_stmt 1 view .LVU163
 625              	.LBB199:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 626              		.loc 3 528 3 view .LVU164
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 627              		.loc 3 531 4 view .LVU165
 628              		.syntax unified
 629              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 630 00fe 96FAA6F3 		rbit r3, r6
 631              	@ 0 "" 2
 632              	.LVL39:
 633              		.loc 3 544 3 view .LVU166
 634              		.loc 3 544 3 is_stmt 0 view .LVU167
 635              		.thumb
 636              		.syntax unified
 637              	.LBE199:
 638              	.LBE198:
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 639              		.loc 1 184 15 view .LVU168
 640 0102 B3FA83F3 		clz	r3, r3
 641 0106 03F01F03 		and	r3, r3, #31
 642 010a 07FA03F3 		lsl	r3, r7, r3
 184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 643              		.loc 1 184 14 view .LVU169
 644 010e 1342     		tst	r3, r2
 645 0110 3FF47CAF 		beq	.L23
 186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 646              		.loc 1 186 12 is_stmt 1 view .LVU170
 186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 647              		.loc 1 186 16 is_stmt 0 view .LVU171
 648 0114 FFF7FEFF 		bl	HAL_GetTick
 649              	.LVL40:
 186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 650              		.loc 1 186 30 view .LVU172
 651 0118 401B     		subs	r0, r0, r5
 186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 652              		.loc 1 186 14 view .LVU173
 653 011a 6428     		cmp	r0, #100
 654 011c ECD9     		bls	.L32
 655 011e D3E7     		b	.L33
 656              	.LVL41:
 657              	.L19:
 198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 658              		.loc 1 198 5 is_stmt 1 view .LVU174
 199:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 659              		.loc 1 199 5 view .LVU175
 202:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 660              		.loc 1 202 5 view .LVU176
 202:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 661              		.loc 1 202 9 is_stmt 0 view .LVU177
 662 0120 7B49     		ldr	r1, .L111
 663 0122 4B68     		ldr	r3, [r1, #4]
 202:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 664              		.loc 1 202 7 view .LVU178
 665 0124 13F00C0F 		tst	r3, #12
 666 0128 07D0     		beq	.L36
 203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 667              		.loc 1 203 13 view .LVU179
 668 012a 4B68     		ldr	r3, [r1, #4]
 669 012c 03F00C03 		and	r3, r3, #12
 203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 670              		.loc 1 203 8 view .LVU180
 671 0130 082B     		cmp	r3, #8
 672 0132 21D1     		bne	.L37
 203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 673              		.loc 1 203 82 discriminator 1 view .LVU181
 674 0134 4B68     		ldr	r3, [r1, #4]
 203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 675              		.loc 1 203 78 discriminator 1 view .LVU182
 676 0136 DF03     		lsls	r7, r3, #15
 677 0138 1ED4     		bmi	.L37
 678              	.L36:
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 679              		.loc 1 206 7 is_stmt 1 view .LVU183
 680              	.LVL42:
 681              	.LBB200:
 682              	.LBI200:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 683              		.loc 3 526 57 view .LVU184
 684              	.LBB201:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 685              		.loc 3 528 3 view .LVU185
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 686              		.loc 3 531 4 view .LVU186
 687 013a 0223     		movs	r3, #2
 688              		.syntax unified
 689              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 690 013c 93FAA3F2 		rbit r2, r3
 691              	@ 0 "" 2
 692              	.LVL43:
 693              		.loc 3 544 3 view .LVU187
 694              		.loc 3 544 3 is_stmt 0 view .LVU188
 695              		.thumb
 696              		.syntax unified
 697              	.LBE201:
 698              	.LBE200:
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 699              		.loc 1 206 11 view .LVU189
 700 0140 0868     		ldr	r0, [r1]
 701              	.LVL44:
 702              	.LBB202:
 703              	.LBI202:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 704              		.loc 3 526 57 is_stmt 1 view .LVU190
 705              	.LBB203:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 706              		.loc 3 528 3 view .LVU191
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 707              		.loc 3 531 4 view .LVU192
 708              		.syntax unified
 709              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 710 0142 93FAA3F3 		rbit r3, r3
 711              	@ 0 "" 2
 712              	.LVL45:
 713              		.loc 3 544 3 view .LVU193
 714              		.loc 3 544 3 is_stmt 0 view .LVU194
 715              		.thumb
 716              		.syntax unified
 717              	.LBE203:
 718              	.LBE202:
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 719              		.loc 1 206 11 view .LVU195
 720 0146 B3FA83F3 		clz	r3, r3
 721 014a 03F01F03 		and	r3, r3, #31
 722 014e 0122     		movs	r2, #1
 723 0150 02FA03F3 		lsl	r3, r2, r3
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 724              		.loc 1 206 9 view .LVU196
 725 0154 0342     		tst	r3, r0
 726 0156 02D0     		beq	.L107
 206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 727              		.loc 1 206 57 discriminator 13 view .LVU197
 728 0158 2369     		ldr	r3, [r4, #16]
 729 015a 9342     		cmp	r3, r2
 730 015c 89D1     		bne	.L39
 731              	.L107:
 238:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 732              		.loc 1 238 9 is_stmt 1 view .LVU198
 733 015e 0868     		ldr	r0, [r1]
 734              	.LVL46:
 735              	.LBB204:
 736              	.LBI204:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 737              		.loc 3 526 57 view .LVU199
 738              	.LBB205:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 739              		.loc 3 528 3 view .LVU200
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 740              		.loc 3 531 4 view .LVU201
 741 0160 F823     		movs	r3, #248
 742              		.syntax unified
 743              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 744 0162 93FAA3F3 		rbit r3, r3
 745              	@ 0 "" 2
 746              	.LVL47:
 747              		.loc 3 544 3 view .LVU202
 748              		.loc 3 544 3 is_stmt 0 view .LVU203
 749              		.thumb
 750              		.syntax unified
 751              	.LBE205:
 752              	.LBE204:
 238:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 753              		.loc 1 238 9 view .LVU204
 754 0166 B3FA83F2 		clz	r2, r3
 755 016a 6369     		ldr	r3, [r4, #20]
 756 016c 9340     		lsls	r3, r3, r2
 757 016e 20F0F802 		bic	r2, r0, #248
 758 0172 1343     		orrs	r3, r3, r2
 759 0174 0B60     		str	r3, [r1]
 760 0176 4DE7     		b	.L35
 761              	.L37:
 220:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 762              		.loc 1 220 7 is_stmt 1 view .LVU205
 220:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 763              		.loc 1 220 9 is_stmt 0 view .LVU206
 764 0178 2269     		ldr	r2, [r4, #16]
 765 017a 0125     		movs	r5, #1
 766 017c 02B3     		cbz	r2, .L40
 223:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 767              		.loc 1 223 9 is_stmt 1 view .LVU207
 768              	.LVL48:
 769              	.LBB206:
 770              	.LBI206:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 771              		.loc 3 526 57 view .LVU208
 772              	.LBB207:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 773              		.loc 3 528 3 view .LVU209
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 774              		.loc 3 531 4 view .LVU210
 775              		.syntax unified
 776              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 777 017e 95FAA5F3 		rbit r3, r5
 778              	@ 0 "" 2
 779              	.LVL49:
 780              		.loc 3 544 3 view .LVU211
 781              		.loc 3 544 3 is_stmt 0 view .LVU212
 782              		.thumb
 783              		.syntax unified
 784              	.LBE207:
 785              	.LBE206:
 223:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 786              		.loc 1 223 9 view .LVU213
 787 0182 B3FA83F3 		clz	r3, r3
 788 0186 03F18453 		add	r3, r3, #276824064
 789 018a 03F58413 		add	r3, r3, #1081344
 790 018e 9B00     		lsls	r3, r3, #2
 791              	.LBB208:
 792              	.LBB209:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 793              		.loc 3 531 4 view .LVU214
 794 0190 0227     		movs	r7, #2
 795              	.LBE209:
 796              	.LBE208:
 223:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 797              		.loc 1 223 9 view .LVU215
 798 0192 1D60     		str	r5, [r3]
 226:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 799              		.loc 1 226 9 is_stmt 1 view .LVU216
 226:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 800              		.loc 1 226 21 is_stmt 0 view .LVU217
 801 0194 FFF7FEFF 		bl	HAL_GetTick
 802              	.LVL50:
 803 0198 0646     		mov	r6, r0
 804              	.LVL51:
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 805              		.loc 1 229 9 is_stmt 1 view .LVU218
 806              	.L41:
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 807              		.loc 1 229 14 view .LVU219
 808              	.LBB211:
 809              	.LBI208:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 810              		.loc 3 526 57 view .LVU220
 811              	.LBB210:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 812              		.loc 3 528 3 view .LVU221
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 813              		.loc 3 531 4 view .LVU222
 814              		.syntax unified
 815              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 816 019a 97FAA7F3 		rbit r3, r7
 817              	@ 0 "" 2
 818              	.LVL52:
 819              		.loc 3 544 3 view .LVU223
 820              		.loc 3 544 3 is_stmt 0 view .LVU224
 821              		.thumb
 822              		.syntax unified
 823              	.LBE210:
 824              	.LBE211:
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 825              		.loc 1 229 15 view .LVU225
 826 019e 0A68     		ldr	r2, [r1]
 827              	.LVL53:
 828              	.LBB212:
 829              	.LBI212:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 830              		.loc 3 526 57 is_stmt 1 view .LVU226
 831              	.LBB213:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 832              		.loc 3 528 3 view .LVU227
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 833              		.loc 3 531 4 view .LVU228
 834              		.syntax unified
 835              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 836 01a0 97FAA7F3 		rbit r3, r7
 837              	@ 0 "" 2
 838              	.LVL54:
 839              		.loc 3 544 3 view .LVU229
 840              		.loc 3 544 3 is_stmt 0 view .LVU230
 841              		.thumb
 842              		.syntax unified
 843              	.LBE213:
 844              	.LBE212:
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 845              		.loc 1 229 15 view .LVU231
 846 01a4 B3FA83F3 		clz	r3, r3
 847 01a8 03F01F03 		and	r3, r3, #31
 848 01ac 05FA03F3 		lsl	r3, r5, r3
 229:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 849              		.loc 1 229 14 view .LVU232
 850 01b0 1342     		tst	r3, r2
 851 01b2 D4D1     		bne	.L107
 231:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 852              		.loc 1 231 11 is_stmt 1 view .LVU233
 231:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 853              		.loc 1 231 15 is_stmt 0 view .LVU234
 854 01b4 FFF7FEFF 		bl	HAL_GetTick
 855              	.LVL55:
 231:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 856              		.loc 1 231 29 view .LVU235
 857 01b8 801B     		subs	r0, r0, r6
 231:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 858              		.loc 1 231 13 view .LVU236
 859 01ba 0228     		cmp	r0, #2
 860 01bc EDD9     		bls	.L41
 861 01be 83E7     		b	.L33
 862              	.LVL56:
 863              	.L40:
 243:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 864              		.loc 1 243 9 is_stmt 1 view .LVU237
 865              	.LBB214:
 866              	.LBI214:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 867              		.loc 3 526 57 view .LVU238
 868              	.LBB215:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 869              		.loc 3 528 3 view .LVU239
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 870              		.loc 3 531 4 view .LVU240
 871              		.syntax unified
 872              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 873 01c0 95FAA5F3 		rbit r3, r5
 874              	@ 0 "" 2
 875              	.LVL57:
 876              		.loc 3 544 3 view .LVU241
 877              		.loc 3 544 3 is_stmt 0 view .LVU242
 878              		.thumb
 879              		.syntax unified
 880              	.LBE215:
 881              	.LBE214:
 243:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 882              		.loc 1 243 9 view .LVU243
 883 01c4 B3FA83F3 		clz	r3, r3
 884 01c8 03F18453 		add	r3, r3, #276824064
 885 01cc 03F58413 		add	r3, r3, #1081344
 886 01d0 9B00     		lsls	r3, r3, #2
 887              	.LBB216:
 888              	.LBB217:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 889              		.loc 3 531 4 view .LVU244
 890 01d2 0227     		movs	r7, #2
 891              	.LBE217:
 892              	.LBE216:
 243:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 893              		.loc 1 243 9 view .LVU245
 894 01d4 1A60     		str	r2, [r3]
 246:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 895              		.loc 1 246 9 is_stmt 1 view .LVU246
 246:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 896              		.loc 1 246 21 is_stmt 0 view .LVU247
 897 01d6 FFF7FEFF 		bl	HAL_GetTick
 898              	.LVL58:
 899 01da 0646     		mov	r6, r0
 900              	.LVL59:
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 901              		.loc 1 249 9 is_stmt 1 view .LVU248
 902              	.L43:
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 903              		.loc 1 249 14 view .LVU249
 904              	.LBB219:
 905              	.LBI216:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 906              		.loc 3 526 57 view .LVU250
 907              	.LBB218:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 908              		.loc 3 528 3 view .LVU251
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 909              		.loc 3 531 4 view .LVU252
 910              		.syntax unified
 911              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 912 01dc 97FAA7F3 		rbit r3, r7
 913              	@ 0 "" 2
 914              	.LVL60:
 915              		.loc 3 544 3 view .LVU253
 916              		.loc 3 544 3 is_stmt 0 view .LVU254
 917              		.thumb
 918              		.syntax unified
 919              	.LBE218:
 920              	.LBE219:
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 921              		.loc 1 249 15 view .LVU255
 922 01e0 0A68     		ldr	r2, [r1]
 923              	.LVL61:
 924              	.LBB220:
 925              	.LBI220:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 926              		.loc 3 526 57 is_stmt 1 view .LVU256
 927              	.LBB221:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 928              		.loc 3 528 3 view .LVU257
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 929              		.loc 3 531 4 view .LVU258
 930              		.syntax unified
 931              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 932 01e2 97FAA7F3 		rbit r3, r7
 933              	@ 0 "" 2
 934              	.LVL62:
 935              		.loc 3 544 3 view .LVU259
 936              		.loc 3 544 3 is_stmt 0 view .LVU260
 937              		.thumb
 938              		.syntax unified
 939              	.LBE221:
 940              	.LBE220:
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 941              		.loc 1 249 15 view .LVU261
 942 01e6 B3FA83F3 		clz	r3, r3
 943 01ea 03F01F03 		and	r3, r3, #31
 944 01ee 05FA03F3 		lsl	r3, r5, r3
 249:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 945              		.loc 1 249 14 view .LVU262
 946 01f2 1342     		tst	r3, r2
 947 01f4 3FF40EAF 		beq	.L35
 251:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 948              		.loc 1 251 11 is_stmt 1 view .LVU263
 251:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 949              		.loc 1 251 15 is_stmt 0 view .LVU264
 950 01f8 FFF7FEFF 		bl	HAL_GetTick
 951              	.LVL63:
 251:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 952              		.loc 1 251 29 view .LVU265
 953 01fc 801B     		subs	r0, r0, r6
 251:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 954              		.loc 1 251 13 view .LVU266
 955 01fe 0228     		cmp	r0, #2
 956 0200 ECD9     		bls	.L43
 957 0202 61E7     		b	.L33
 958              	.LVL64:
 959              	.L45:
 263:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 960              		.loc 1 263 5 is_stmt 1 view .LVU267
 266:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 961              		.loc 1 266 5 view .LVU268
 266:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 962              		.loc 1 266 7 is_stmt 0 view .LVU269
 963 0204 A269     		ldr	r2, [r4, #24]
 964 0206 424D     		ldr	r5, .L111
 965 0208 4248     		ldr	r0, .L111+4
 966 020a 0121     		movs	r1, #1
 967 020c 12B3     		cbz	r2, .L48
 269:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 968              		.loc 1 269 7 is_stmt 1 view .LVU270
 969              	.LVL65:
 970              	.LBB222:
 971              	.LBI222:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 972              		.loc 3 526 57 view .LVU271
 973              	.LBB223:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 974              		.loc 3 528 3 view .LVU272
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 975              		.loc 3 531 4 view .LVU273
 976              		.syntax unified
 977              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 978 020e 91FAA1F3 		rbit r3, r1
 979              	@ 0 "" 2
 980              	.LVL66:
 981              		.loc 3 544 3 view .LVU274
 982              		.loc 3 544 3 is_stmt 0 view .LVU275
 983              		.thumb
 984              		.syntax unified
 985              	.LBE223:
 986              	.LBE222:
 269:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 987              		.loc 1 269 7 view .LVU276
 988 0212 B3FA83F3 		clz	r3, r3
 989 0216 0344     		add	r3, r3, r0
 990 0218 9B00     		lsls	r3, r3, #2
 991              	.LBB224:
 992              	.LBB225:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 993              		.loc 3 531 4 view .LVU277
 994 021a 0226     		movs	r6, #2
 995              	.LBE225:
 996              	.LBE224:
 269:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 997              		.loc 1 269 7 view .LVU278
 998 021c 1960     		str	r1, [r3]
 272:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 999              		.loc 1 272 7 is_stmt 1 view .LVU279
 272:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1000              		.loc 1 272 19 is_stmt 0 view .LVU280
 1001 021e FFF7FEFF 		bl	HAL_GetTick
 1002              	.LVL67:
 1003 0222 0746     		mov	r7, r0
 1004              	.LVL68:
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1005              		.loc 1 275 7 is_stmt 1 view .LVU281
 1006              	.L49:
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1007              		.loc 1 275 12 view .LVU282
 1008              	.LBB227:
 1009              	.LBI224:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1010              		.loc 3 526 57 view .LVU283
 1011              	.LBB226:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1012              		.loc 3 528 3 view .LVU284
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1013              		.loc 3 531 4 view .LVU285
 1014              		.syntax unified
 1015              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1016 0224 96FAA6F3 		rbit r3, r6
 1017              	@ 0 "" 2
 1018              	.LVL69:
 1019              		.loc 3 544 3 view .LVU286
 1020              		.loc 3 544 3 is_stmt 0 view .LVU287
 1021              		.thumb
 1022              		.syntax unified
 1023              	.LBE226:
 1024              	.LBE227:
 1025              	.LBB228:
 1026              	.LBI228:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1027              		.loc 3 526 57 is_stmt 1 view .LVU288
 1028              	.LBB229:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1029              		.loc 3 528 3 view .LVU289
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1030              		.loc 3 531 4 view .LVU290
 1031              		.syntax unified
 1032              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1033 0228 96FAA6F3 		rbit r3, r6
 1034              	@ 0 "" 2
 1035              	.LVL70:
 1036              		.loc 3 544 3 view .LVU291
 1037              		.loc 3 544 3 is_stmt 0 view .LVU292
 1038              		.thumb
 1039              		.syntax unified
 1040              	.LBE229:
 1041              	.LBE228:
 1042              	.LBB230:
 1043              	.LBI230:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1044              		.loc 3 526 57 is_stmt 1 view .LVU293
 1045              	.LBB231:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1046              		.loc 3 528 3 view .LVU294
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1047              		.loc 3 531 4 view .LVU295
 1048              		.syntax unified
 1049              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1050 022c 96FAA6F3 		rbit r3, r6
 1051              	@ 0 "" 2
 1052              	.LVL71:
 1053              		.loc 3 544 3 view .LVU296
 1054              		.loc 3 544 3 is_stmt 0 view .LVU297
 1055              		.thumb
 1056              		.syntax unified
 1057              	.LBE231:
 1058              	.LBE230:
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1059              		.loc 1 275 13 view .LVU298
 1060 0230 6A6A     		ldr	r2, [r5, #36]
 1061              	.LVL72:
 1062              	.LBB232:
 1063              	.LBI232:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1064              		.loc 3 526 57 is_stmt 1 view .LVU299
 1065              	.LBB233:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1066              		.loc 3 528 3 view .LVU300
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1067              		.loc 3 531 4 view .LVU301
 1068              		.syntax unified
 1069              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1070 0232 96FAA6F3 		rbit r3, r6
 1071              	@ 0 "" 2
 1072              	.LVL73:
 1073              		.loc 3 544 3 view .LVU302
 1074              		.loc 3 544 3 is_stmt 0 view .LVU303
 1075              		.thumb
 1076              		.syntax unified
 1077              	.LBE233:
 1078              	.LBE232:
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1079              		.loc 1 275 13 view .LVU304
 1080 0236 B3FA83F3 		clz	r3, r3
 1081 023a 03F01F03 		and	r3, r3, #31
 1082 023e 01FA03F3 		lsl	r3, r1, r3
 275:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1083              		.loc 1 275 12 view .LVU305
 1084 0242 1342     		tst	r3, r2
 1085 0244 7FF4EAAE 		bne	.L51
 277:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1086              		.loc 1 277 9 is_stmt 1 view .LVU306
 277:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1087              		.loc 1 277 13 is_stmt 0 view .LVU307
 1088 0248 FFF7FEFF 		bl	HAL_GetTick
 1089              	.LVL74:
 277:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1090              		.loc 1 277 27 view .LVU308
 1091 024c C01B     		subs	r0, r0, r7
 277:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1092              		.loc 1 277 11 view .LVU309
 1093 024e 0228     		cmp	r0, #2
 1094 0250 E8D9     		bls	.L49
 1095 0252 39E7     		b	.L33
 1096              	.LVL75:
 1097              	.L48:
 286:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1098              		.loc 1 286 7 is_stmt 1 view .LVU310
 1099              	.LBB234:
 1100              	.LBI234:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1101              		.loc 3 526 57 view .LVU311
 1102              	.LBB235:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1103              		.loc 3 528 3 view .LVU312
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1104              		.loc 3 531 4 view .LVU313
 1105              		.syntax unified
 1106              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1107 0254 91FAA1F3 		rbit r3, r1
 1108              	@ 0 "" 2
 1109              	.LVL76:
 1110              		.loc 3 544 3 view .LVU314
 1111              		.loc 3 544 3 is_stmt 0 view .LVU315
 1112              		.thumb
 1113              		.syntax unified
 1114              	.LBE235:
 1115              	.LBE234:
 286:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1116              		.loc 1 286 7 view .LVU316
 1117 0258 B3FA83F3 		clz	r3, r3
 1118 025c 0344     		add	r3, r3, r0
 1119 025e 9B00     		lsls	r3, r3, #2
 1120              	.LBB236:
 1121              	.LBB237:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1122              		.loc 3 531 4 view .LVU317
 1123 0260 0226     		movs	r6, #2
 1124              	.LBE237:
 1125              	.LBE236:
 286:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1126              		.loc 1 286 7 view .LVU318
 1127 0262 1A60     		str	r2, [r3]
 289:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1128              		.loc 1 289 7 is_stmt 1 view .LVU319
 289:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1129              		.loc 1 289 19 is_stmt 0 view .LVU320
 1130 0264 FFF7FEFF 		bl	HAL_GetTick
 1131              	.LVL77:
 1132 0268 0746     		mov	r7, r0
 1133              	.LVL78:
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1134              		.loc 1 292 7 is_stmt 1 view .LVU321
 1135              	.L52:
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1136              		.loc 1 292 12 view .LVU322
 1137              	.LBB239:
 1138              	.LBI236:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1139              		.loc 3 526 57 view .LVU323
 1140              	.LBB238:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1141              		.loc 3 528 3 view .LVU324
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1142              		.loc 3 531 4 view .LVU325
 1143              		.syntax unified
 1144              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1145 026a 96FAA6F3 		rbit r3, r6
 1146              	@ 0 "" 2
 1147              	.LVL79:
 1148              		.loc 3 544 3 view .LVU326
 1149              		.loc 3 544 3 is_stmt 0 view .LVU327
 1150              		.thumb
 1151              		.syntax unified
 1152              	.LBE238:
 1153              	.LBE239:
 1154              	.LBB240:
 1155              	.LBI240:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1156              		.loc 3 526 57 is_stmt 1 view .LVU328
 1157              	.LBB241:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1158              		.loc 3 528 3 view .LVU329
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1159              		.loc 3 531 4 view .LVU330
 1160              		.syntax unified
 1161              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1162 026e 96FAA6F3 		rbit r3, r6
 1163              	@ 0 "" 2
 1164              	.LVL80:
 1165              		.loc 3 544 3 view .LVU331
 1166              		.loc 3 544 3 is_stmt 0 view .LVU332
 1167              		.thumb
 1168              		.syntax unified
 1169              	.LBE241:
 1170              	.LBE240:
 1171              	.LBB242:
 1172              	.LBI242:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1173              		.loc 3 526 57 is_stmt 1 view .LVU333
 1174              	.LBB243:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1175              		.loc 3 528 3 view .LVU334
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1176              		.loc 3 531 4 view .LVU335
 1177              		.syntax unified
 1178              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1179 0272 96FAA6F3 		rbit r3, r6
 1180              	@ 0 "" 2
 1181              	.LVL81:
 1182              		.loc 3 544 3 view .LVU336
 1183              		.loc 3 544 3 is_stmt 0 view .LVU337
 1184              		.thumb
 1185              		.syntax unified
 1186              	.LBE243:
 1187              	.LBE242:
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1188              		.loc 1 292 13 view .LVU338
 1189 0276 6A6A     		ldr	r2, [r5, #36]
 1190              	.LVL82:
 1191              	.LBB244:
 1192              	.LBI244:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1193              		.loc 3 526 57 is_stmt 1 view .LVU339
 1194              	.LBB245:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1195              		.loc 3 528 3 view .LVU340
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1196              		.loc 3 531 4 view .LVU341
 1197              		.syntax unified
 1198              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1199 0278 96FAA6F3 		rbit r3, r6
 1200              	@ 0 "" 2
 1201              	.LVL83:
 1202              		.loc 3 544 3 view .LVU342
 1203              		.loc 3 544 3 is_stmt 0 view .LVU343
 1204              		.thumb
 1205              		.syntax unified
 1206              	.LBE245:
 1207              	.LBE244:
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1208              		.loc 1 292 13 view .LVU344
 1209 027c B3FA83F3 		clz	r3, r3
 1210 0280 03F01F03 		and	r3, r3, #31
 1211 0284 01FA03F3 		lsl	r3, r1, r3
 292:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1212              		.loc 1 292 12 view .LVU345
 1213 0288 1342     		tst	r3, r2
 1214 028a 3FF4C7AE 		beq	.L51
 294:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1215              		.loc 1 294 9 is_stmt 1 view .LVU346
 294:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1216              		.loc 1 294 13 is_stmt 0 view .LVU347
 1217 028e FFF7FEFF 		bl	HAL_GetTick
 1218              	.LVL84:
 294:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1219              		.loc 1 294 27 view .LVU348
 1220 0292 C01B     		subs	r0, r0, r7
 294:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1221              		.loc 1 294 11 view .LVU349
 1222 0294 0228     		cmp	r0, #2
 1223 0296 E8D9     		bls	.L52
 1224 0298 16E7     		b	.L33
 1225              	.LVL85:
 1226              	.L46:
 1227              	.LBB246:
 304:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 1228              		.loc 1 304 5 is_stmt 1 view .LVU350
 307:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 1229              		.loc 1 307 5 view .LVU351
 311:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1230              		.loc 1 311 5 view .LVU352
 311:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1231              		.loc 1 311 8 is_stmt 0 view .LVU353
 1232 029a 1D49     		ldr	r1, .L111
 1233 029c CB69     		ldr	r3, [r1, #28]
 311:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1234              		.loc 1 311 7 view .LVU354
 1235 029e D800     		lsls	r0, r3, #3
 1236 02a0 34D4     		bmi	.L85
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1237              		.loc 1 313 7 is_stmt 1 view .LVU355
 1238              	.LBB247:
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1239              		.loc 1 313 7 view .LVU356
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1240              		.loc 1 313 7 view .LVU357
 1241 02a2 CB69     		ldr	r3, [r1, #28]
 1242 02a4 43F08053 		orr	r3, r3, #268435456
 1243 02a8 CB61     		str	r3, [r1, #28]
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1244              		.loc 1 313 7 view .LVU358
 1245 02aa CB69     		ldr	r3, [r1, #28]
 1246 02ac 03F08053 		and	r3, r3, #268435456
 1247 02b0 0193     		str	r3, [sp, #4]
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1248              		.loc 1 313 7 view .LVU359
 1249 02b2 019B     		ldr	r3, [sp, #4]
 1250              	.LBE247:
 313:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1251              		.loc 1 313 7 view .LVU360
 314:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 1252              		.loc 1 314 7 view .LVU361
 1253              	.LVL86:
 314:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 1254              		.loc 1 314 21 is_stmt 0 view .LVU362
 1255 02b4 0125     		movs	r5, #1
 1256              	.LVL87:
 1257              	.L55:
 317:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1258              		.loc 1 317 5 is_stmt 1 view .LVU363
 317:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1259              		.loc 1 317 8 is_stmt 0 view .LVU364
 1260 02b6 184E     		ldr	r6, .L111+8
 1261 02b8 3368     		ldr	r3, [r6]
 317:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1262              		.loc 1 317 7 view .LVU365
 1263 02ba DA05     		lsls	r2, r3, #23
 1264 02bc 2ED5     		bpl	.L56
 1265              	.L61:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1266              		.loc 1 335 5 is_stmt 1 view .LVU366
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1267              		.loc 1 335 5 view .LVU367
 1268 02be E368     		ldr	r3, [r4, #12]
 1269 02c0 012B     		cmp	r3, #1
 1270 02c2 3BD1     		bne	.L105
 1271              	.L110:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1272              		.loc 1 335 5 discriminator 7 view .LVU368
 1273 02c4 0B6A     		ldr	r3, [r1, #32]
 1274 02c6 43F00103 		orr	r3, r3, #1
 1275              	.L108:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1276              		.loc 1 335 5 is_stmt 0 discriminator 8 view .LVU369
 1277 02ca 0B62     		str	r3, [r1, #32]
 340:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1278              		.loc 1 340 7 is_stmt 1 discriminator 8 view .LVU370
 340:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1279              		.loc 1 340 19 is_stmt 0 discriminator 8 view .LVU371
 1280 02cc FFF7FEFF 		bl	HAL_GetTick
 1281              	.LVL88:
 1282              	.LBB248:
 1283              	.LBB249:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1284              		.loc 3 531 4 discriminator 8 view .LVU372
 1285 02d0 0226     		movs	r6, #2
 1286              	.LBE249:
 1287              	.LBE248:
 340:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1288              		.loc 1 340 19 discriminator 8 view .LVU373
 1289 02d2 0746     		mov	r7, r0
 1290              	.LVL89:
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1291              		.loc 1 343 7 is_stmt 1 discriminator 8 view .LVU374
 1292 02d4 B146     		mov	r9, r6
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1293              		.loc 1 343 13 is_stmt 0 discriminator 8 view .LVU375
 1294 02d6 4FF00108 		mov	r8, #1
 1295              	.LVL90:
 1296              	.L67:
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1297              		.loc 1 343 12 is_stmt 1 view .LVU376
 1298              	.LBB251:
 1299              	.LBI248:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1300              		.loc 3 526 57 view .LVU377
 1301              	.LBB250:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1302              		.loc 3 528 3 view .LVU378
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1303              		.loc 3 531 4 view .LVU379
 1304              		.syntax unified
 1305              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1306 02da 96FAA6F3 		rbit r3, r6
 1307              	@ 0 "" 2
 1308              	.LVL91:
 1309              		.loc 3 544 3 view .LVU380
 1310              		.loc 3 544 3 is_stmt 0 view .LVU381
 1311              		.thumb
 1312              		.syntax unified
 1313              	.LBE250:
 1314              	.LBE251:
 1315              	.LBB252:
 1316              	.LBI252:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1317              		.loc 3 526 57 is_stmt 1 view .LVU382
 1318              	.LBB253:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1319              		.loc 3 528 3 view .LVU383
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1320              		.loc 3 531 4 view .LVU384
 1321              		.syntax unified
 1322              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1323 02de 96FAA6F3 		rbit r3, r6
 1324              	@ 0 "" 2
 1325              	.LVL92:
 1326              		.loc 3 544 3 view .LVU385
 1327              		.loc 3 544 3 is_stmt 0 view .LVU386
 1328              		.thumb
 1329              		.syntax unified
 1330              	.LBE253:
 1331              	.LBE252:
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1332              		.loc 1 343 13 view .LVU387
 1333 02e2 002B     		cmp	r3, #0
 1334 02e4 68D0     		beq	.L68
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1335              		.loc 1 343 13 discriminator 4 view .LVU388
 1336 02e6 0A6A     		ldr	r2, [r1, #32]
 1337              	.L69:
 1338              	.LVL93:
 1339              	.LBB254:
 1340              	.LBI254:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1341              		.loc 3 526 57 is_stmt 1 discriminator 11 view .LVU389
 1342              	.LBB255:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1343              		.loc 3 528 3 discriminator 11 view .LVU390
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1344              		.loc 3 531 4 discriminator 11 view .LVU391
 1345              		.syntax unified
 1346              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1347 02e8 99FAA9F3 		rbit r3, r9
 1348              	@ 0 "" 2
 1349              	.LVL94:
 1350              		.loc 3 544 3 discriminator 11 view .LVU392
 1351              		.loc 3 544 3 is_stmt 0 discriminator 11 view .LVU393
 1352              		.thumb
 1353              		.syntax unified
 1354              	.LBE255:
 1355              	.LBE254:
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1356              		.loc 1 343 13 discriminator 11 view .LVU394
 1357 02ec B3FA83F3 		clz	r3, r3
 1358 02f0 03F01F03 		and	r3, r3, #31
 1359 02f4 08FA03F3 		lsl	r3, r8, r3
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1360              		.loc 1 343 12 discriminator 11 view .LVU395
 1361 02f8 1342     		tst	r3, r2
 1362 02fa 55D0     		beq	.L70
 1363              	.L75:
 367:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1364              		.loc 1 367 5 is_stmt 1 view .LVU396
 367:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1365              		.loc 1 367 7 is_stmt 0 view .LVU397
 1366 02fc 002D     		cmp	r5, #0
 1367 02fe 3FF491AE 		beq	.L54
 369:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 1368              		.loc 1 369 7 is_stmt 1 view .LVU398
 1369 0302 CB69     		ldr	r3, [r1, #28]
 1370 0304 23F08053 		bic	r3, r3, #268435456
 1371 0308 CB61     		str	r3, [r1, #28]
 1372 030a 8BE6     		b	.L54
 1373              	.LVL95:
 1374              	.L85:
 304:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 1375              		.loc 1 304 22 is_stmt 0 view .LVU399
 1376 030c 0025     		movs	r5, #0
 1377 030e D2E7     		b	.L55
 1378              	.L112:
 1379              		.align	2
 1380              	.L111:
 1381 0310 00100240 		.word	1073876992
 1382 0314 20819010 		.word	277905696
 1383 0318 00700040 		.word	1073770496
 1384              	.LVL96:
 1385              	.L56:
 320:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1386              		.loc 1 320 7 is_stmt 1 view .LVU400
 1387 031c 3368     		ldr	r3, [r6]
 1388 031e 43F48073 		orr	r3, r3, #256
 1389 0322 3360     		str	r3, [r6]
 323:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 1390              		.loc 1 323 7 view .LVU401
 323:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 1391              		.loc 1 323 19 is_stmt 0 view .LVU402
 1392 0324 FFF7FEFF 		bl	HAL_GetTick
 1393              	.LVL97:
 1394 0328 0746     		mov	r7, r0
 1395              	.LVL98:
 325:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1396              		.loc 1 325 7 is_stmt 1 view .LVU403
 1397              	.L59:
 325:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1398              		.loc 1 325 12 view .LVU404
 325:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1399              		.loc 1 325 13 is_stmt 0 view .LVU405
 1400 032a 3368     		ldr	r3, [r6]
 325:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1401              		.loc 1 325 12 view .LVU406
 1402 032c DB05     		lsls	r3, r3, #23
 1403 032e C6D4     		bmi	.L61
 327:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1404              		.loc 1 327 9 is_stmt 1 view .LVU407
 327:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1405              		.loc 1 327 13 is_stmt 0 view .LVU408
 1406 0330 FFF7FEFF 		bl	HAL_GetTick
 1407              	.LVL99:
 327:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1408              		.loc 1 327 27 view .LVU409
 1409 0334 C01B     		subs	r0, r0, r7
 327:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1410              		.loc 1 327 11 view .LVU410
 1411 0336 6428     		cmp	r0, #100
 1412 0338 F7D9     		bls	.L59
 1413 033a C5E6     		b	.L33
 1414              	.LVL100:
 1415              	.L105:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1416              		.loc 1 335 5 is_stmt 1 discriminator 2 view .LVU411
 1417 033c 33BB     		cbnz	r3, .L63
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1418              		.loc 1 335 5 discriminator 4 view .LVU412
 1419 033e 0B6A     		ldr	r3, [r1, #32]
 1420 0340 23F00103 		bic	r3, r3, #1
 1421 0344 0B62     		str	r3, [r1, #32]
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1422              		.loc 1 335 5 discriminator 4 view .LVU413
 1423 0346 0B6A     		ldr	r3, [r1, #32]
 1424 0348 23F00403 		bic	r3, r3, #4
 1425 034c 0B62     		str	r3, [r1, #32]
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1426              		.loc 1 335 5 discriminator 4 view .LVU414
 337:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 1427              		.loc 1 337 5 discriminator 4 view .LVU415
 354:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1428              		.loc 1 354 7 discriminator 4 view .LVU416
 354:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1429              		.loc 1 354 19 is_stmt 0 discriminator 4 view .LVU417
 1430 034e FFF7FEFF 		bl	HAL_GetTick
 1431              	.LVL101:
 1432              	.LBB256:
 1433              	.LBB257:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1434              		.loc 3 531 4 discriminator 4 view .LVU418
 1435 0352 0226     		movs	r6, #2
 1436              	.LBE257:
 1437              	.LBE256:
 354:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       
 1438              		.loc 1 354 19 discriminator 4 view .LVU419
 1439 0354 0746     		mov	r7, r0
 1440              	.LVL102:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1441              		.loc 1 357 7 is_stmt 1 discriminator 4 view .LVU420
 1442 0356 B146     		mov	r9, r6
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1443              		.loc 1 357 13 is_stmt 0 discriminator 4 view .LVU421
 1444 0358 4FF00108 		mov	r8, #1
 1445              	.LVL103:
 1446              	.L64:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1447              		.loc 1 357 12 is_stmt 1 view .LVU422
 1448              	.LBB259:
 1449              	.LBI256:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1450              		.loc 3 526 57 view .LVU423
 1451              	.LBB258:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1452              		.loc 3 528 3 view .LVU424
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1453              		.loc 3 531 4 view .LVU425
 1454              		.syntax unified
 1455              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1456 035c 96FAA6F3 		rbit r3, r6
 1457              	@ 0 "" 2
 1458              	.LVL104:
 1459              		.loc 3 544 3 view .LVU426
 1460              		.loc 3 544 3 is_stmt 0 view .LVU427
 1461              		.thumb
 1462              		.syntax unified
 1463              	.LBE258:
 1464              	.LBE259:
 1465              	.LBB260:
 1466              	.LBI260:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1467              		.loc 3 526 57 is_stmt 1 view .LVU428
 1468              	.LBB261:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1469              		.loc 3 528 3 view .LVU429
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1470              		.loc 3 531 4 view .LVU430
 1471              		.syntax unified
 1472              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1473 0360 96FAA6F3 		rbit r3, r6
 1474              	@ 0 "" 2
 1475              	.LVL105:
 1476              		.loc 3 544 3 view .LVU431
 1477              		.loc 3 544 3 is_stmt 0 view .LVU432
 1478              		.thumb
 1479              		.syntax unified
 1480              	.LBE261:
 1481              	.LBE260:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1482              		.loc 1 357 13 view .LVU433
 1483 0364 63B3     		cbz	r3, .L72
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1484              		.loc 1 357 13 discriminator 4 view .LVU434
 1485 0366 0A6A     		ldr	r2, [r1, #32]
 1486              	.L73:
 1487              	.LVL106:
 1488              	.LBB262:
 1489              	.LBI262:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1490              		.loc 3 526 57 is_stmt 1 discriminator 11 view .LVU435
 1491              	.LBB263:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1492              		.loc 3 528 3 discriminator 11 view .LVU436
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1493              		.loc 3 531 4 discriminator 11 view .LVU437
 1494              		.syntax unified
 1495              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1496 0368 99FAA9F3 		rbit r3, r9
 1497              	@ 0 "" 2
 1498              	.LVL107:
 1499              		.loc 3 544 3 discriminator 11 view .LVU438
 1500              		.loc 3 544 3 is_stmt 0 discriminator 11 view .LVU439
 1501              		.thumb
 1502              		.syntax unified
 1503              	.LBE263:
 1504              	.LBE262:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1505              		.loc 1 357 13 discriminator 11 view .LVU440
 1506 036c B3FA83F3 		clz	r3, r3
 1507 0370 03F01F03 		and	r3, r3, #31
 1508 0374 08FA03F3 		lsl	r3, r8, r3
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1509              		.loc 1 357 12 discriminator 11 view .LVU441
 1510 0378 1342     		tst	r3, r2
 1511 037a BFD0     		beq	.L75
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1512              		.loc 1 359 9 is_stmt 1 view .LVU442
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1513              		.loc 1 359 13 is_stmt 0 view .LVU443
 1514 037c FFF7FEFF 		bl	HAL_GetTick
 1515              	.LVL108:
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1516              		.loc 1 359 11 view .LVU444
 1517 0380 41F28833 		movw	r3, #5000
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1518              		.loc 1 359 27 view .LVU445
 1519 0384 C01B     		subs	r0, r0, r7
 359:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1520              		.loc 1 359 11 view .LVU446
 1521 0386 9842     		cmp	r0, r3
 1522 0388 E8D9     		bls	.L64
 1523 038a 9DE6     		b	.L33
 1524              	.LVL109:
 1525              	.L63:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1526              		.loc 1 335 5 is_stmt 1 discriminator 5 view .LVU447
 1527 038c 052B     		cmp	r3, #5
 1528 038e 0B6A     		ldr	r3, [r1, #32]
 1529 0390 03D1     		bne	.L65
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1530              		.loc 1 335 5 discriminator 7 view .LVU448
 1531 0392 43F00403 		orr	r3, r3, #4
 1532 0396 0B62     		str	r3, [r1, #32]
 1533 0398 94E7     		b	.L110
 1534              	.L65:
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1535              		.loc 1 335 5 discriminator 8 view .LVU449
 1536 039a 23F00103 		bic	r3, r3, #1
 1537 039e 0B62     		str	r3, [r1, #32]
 335:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1538              		.loc 1 335 5 discriminator 8 view .LVU450
 1539 03a0 0B6A     		ldr	r3, [r1, #32]
 1540 03a2 23F00403 		bic	r3, r3, #4
 1541 03a6 90E7     		b	.L108
 1542              	.LVL110:
 1543              	.L70:
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1544              		.loc 1 345 9 view .LVU451
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1545              		.loc 1 345 13 is_stmt 0 view .LVU452
 1546 03a8 FFF7FEFF 		bl	HAL_GetTick
 1547              	.LVL111:
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1548              		.loc 1 345 11 view .LVU453
 1549 03ac 41F28833 		movw	r3, #5000
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1550              		.loc 1 345 27 view .LVU454
 1551 03b0 C01B     		subs	r0, r0, r7
 345:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1552              		.loc 1 345 11 view .LVU455
 1553 03b2 9842     		cmp	r0, r3
 1554 03b4 91D9     		bls	.L67
 1555 03b6 87E6     		b	.L33
 1556              	.L68:
 1557              	.LVL112:
 1558              	.LBB264:
 1559              	.LBI264:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1560              		.loc 3 526 57 is_stmt 1 view .LVU456
 1561              	.LBB265:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1562              		.loc 3 528 3 view .LVU457
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1563              		.loc 3 531 4 view .LVU458
 1564              		.syntax unified
 1565              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1566 03b8 96FAA6F3 		rbit r3, r6
 1567              	@ 0 "" 2
 1568              	.LVL113:
 1569              		.loc 3 544 3 view .LVU459
 1570              		.loc 3 544 3 is_stmt 0 view .LVU460
 1571              		.thumb
 1572              		.syntax unified
 1573              	.LBE265:
 1574              	.LBE264:
 343:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1575              		.loc 1 343 13 view .LVU461
 1576 03bc 4A6A     		ldr	r2, [r1, #36]
 1577 03be 93E7     		b	.L69
 1578              	.L72:
 1579              	.LVL114:
 1580              	.LBB266:
 1581              	.LBI266:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1582              		.loc 3 526 57 is_stmt 1 view .LVU462
 1583              	.LBB267:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1584              		.loc 3 528 3 view .LVU463
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1585              		.loc 3 531 4 view .LVU464
 1586              		.syntax unified
 1587              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1588 03c0 96FAA6F3 		rbit r3, r6
 1589              	@ 0 "" 2
 1590              	.LVL115:
 1591              		.loc 3 544 3 view .LVU465
 1592              		.loc 3 544 3 is_stmt 0 view .LVU466
 1593              		.thumb
 1594              		.syntax unified
 1595              	.LBE267:
 1596              	.LBE266:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1597              		.loc 1 357 13 view .LVU467
 1598 03c4 4A6A     		ldr	r2, [r1, #36]
 1599 03c6 CFE7     		b	.L73
 1600              	.LVL116:
 1601              	.L76:
 357:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1602              		.loc 1 357 13 view .LVU468
 1603              	.LBE246:
 379:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1604              		.loc 1 379 5 is_stmt 1 view .LVU469
 379:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1605              		.loc 1 379 8 is_stmt 0 view .LVU470
 1606 03c8 4249     		ldr	r1, .L113
 1607 03ca 4B68     		ldr	r3, [r1, #4]
 1608 03cc 03F00C03 		and	r3, r3, #12
 379:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1609              		.loc 1 379 7 view .LVU471
 1610 03d0 082B     		cmp	r3, #8
 1611 03d2 3FF44EAE 		beq	.L39
 381:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1612              		.loc 1 381 7 is_stmt 1 view .LVU472
 381:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 1613              		.loc 1 381 9 is_stmt 0 view .LVU473
 1614 03d6 022A     		cmp	r2, #2
 1615 03d8 4FF08073 		mov	r3, #16777216
 1616 03dc 54D1     		bne	.L77
 384:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1617              		.loc 1 384 9 is_stmt 1 view .LVU474
 385:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1618              		.loc 1 385 9 view .LVU475
 391:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1619              		.loc 1 391 9 view .LVU476
 1620              	.LVL117:
 1621              	.LBB268:
 1622              	.LBI268:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1623              		.loc 3 526 57 view .LVU477
 1624              	.LBB269:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1625              		.loc 3 528 3 view .LVU478
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1626              		.loc 3 531 4 view .LVU479
 1627              		.syntax unified
 1628              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1629 03de 93FAA3F3 		rbit r3, r3
 1630              	@ 0 "" 2
 1631              	.LVL118:
 1632              		.loc 3 544 3 view .LVU480
 1633              		.loc 3 544 3 is_stmt 0 view .LVU481
 1634              		.thumb
 1635              		.syntax unified
 1636              	.LBE269:
 1637              	.LBE268:
 391:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1638              		.loc 1 391 9 view .LVU482
 1639 03e2 B3FA83F3 		clz	r3, r3
 1640 03e6 03F18453 		add	r3, r3, #276824064
 1641 03ea 03F58413 		add	r3, r3, #1081344
 1642 03ee 9B00     		lsls	r3, r3, #2
 1643 03f0 0022     		movs	r2, #0
 1644 03f2 1A60     		str	r2, [r3]
 394:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1645              		.loc 1 394 9 is_stmt 1 view .LVU483
 394:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1646              		.loc 1 394 21 is_stmt 0 view .LVU484
 1647 03f4 FFF7FEFF 		bl	HAL_GetTick
 1648              	.LVL119:
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1649              		.loc 1 399 13 view .LVU485
 1650 03f8 DFF8DC80 		ldr	r8, .L113+4
 394:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1651              		.loc 1 394 21 view .LVU486
 1652 03fc 0646     		mov	r6, r0
 1653              	.LVL120:
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1654              		.loc 1 397 9 is_stmt 1 view .LVU487
 1655              	.LBB270:
 1656              	.LBB271:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1657              		.loc 3 531 4 is_stmt 0 view .LVU488
 1658 03fe 4FF00077 		mov	r7, #33554432
 1659              	.LBE271:
 1660              	.LBE270:
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1661              		.loc 1 397 15 view .LVU489
 1662 0402 0125     		movs	r5, #1
 1663              	.LVL121:
 1664              	.L78:
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1665              		.loc 1 397 14 is_stmt 1 view .LVU490
 1666              	.LBB273:
 1667              	.LBI270:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1668              		.loc 3 526 57 view .LVU491
 1669              	.LBB272:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1670              		.loc 3 528 3 view .LVU492
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1671              		.loc 3 531 4 view .LVU493
 1672              		.syntax unified
 1673              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1674 0404 97FAA7F3 		rbit r3, r7
 1675              	@ 0 "" 2
 1676              	.LVL122:
 1677              		.loc 3 544 3 view .LVU494
 1678              		.loc 3 544 3 is_stmt 0 view .LVU495
 1679              		.thumb
 1680              		.syntax unified
 1681              	.LBE272:
 1682              	.LBE273:
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1683              		.loc 1 397 15 view .LVU496
 1684 0408 0A68     		ldr	r2, [r1]
 1685              	.LVL123:
 1686              	.LBB274:
 1687              	.LBI274:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1688              		.loc 3 526 57 is_stmt 1 view .LVU497
 1689              	.LBB275:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1690              		.loc 3 528 3 view .LVU498
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1691              		.loc 3 531 4 view .LVU499
 1692              		.syntax unified
 1693              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1694 040a 97FAA7F3 		rbit r3, r7
 1695              	@ 0 "" 2
 1696              	.LVL124:
 1697              		.loc 3 544 3 view .LVU500
 1698              		.loc 3 544 3 is_stmt 0 view .LVU501
 1699              		.thumb
 1700              		.syntax unified
 1701              	.LBE275:
 1702              	.LBE274:
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1703              		.loc 1 397 15 view .LVU502
 1704 040e B3FA83F3 		clz	r3, r3
 1705 0412 03F01F03 		and	r3, r3, #31
 1706 0416 05FA03F3 		lsl	r3, r5, r3
 397:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1707              		.loc 1 397 14 view .LVU503
 1708 041a 1342     		tst	r3, r2
 1709 041c 2ED1     		bne	.L79
 412:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 1710              		.loc 1 412 7 is_stmt 1 view .LVU504
 1711 041e D4E90803 		ldrd	r0, r3, [r4, #32]
 1712 0422 4A68     		ldr	r2, [r1, #4]
 1713 0424 0343     		orrs	r3, r3, r0
 1714 0426 22F47412 		bic	r2, r2, #3997696
 1715 042a 1343     		orrs	r3, r3, r2
 1716 042c 4B60     		str	r3, [r1, #4]
 416:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1717              		.loc 1 416 9 view .LVU505
 1718              	.LVL125:
 1719              	.LBB276:
 1720              	.LBI276:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1721              		.loc 3 526 57 view .LVU506
 1722              	.LBB277:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1723              		.loc 3 528 3 view .LVU507
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1724              		.loc 3 531 4 view .LVU508
 1725 042e 4FF08073 		mov	r3, #16777216
 1726              		.syntax unified
 1727              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1728 0432 93FAA3F3 		rbit r3, r3
 1729              	@ 0 "" 2
 1730              	.LVL126:
 1731              		.loc 3 544 3 view .LVU509
 1732              		.loc 3 544 3 is_stmt 0 view .LVU510
 1733              		.thumb
 1734              		.syntax unified
 1735              	.LBE277:
 1736              	.LBE276:
 416:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1737              		.loc 1 416 9 view .LVU511
 1738 0436 B3FA83F3 		clz	r3, r3
 1739 043a 03F18453 		add	r3, r3, #276824064
 1740 043e 03F58413 		add	r3, r3, #1081344
 1741 0442 9B00     		lsls	r3, r3, #2
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1742              		.loc 1 424 13 view .LVU512
 1743 0444 244F     		ldr	r7, .L113+4
 416:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1744              		.loc 1 416 9 view .LVU513
 1745 0446 1D60     		str	r5, [r3]
 419:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1746              		.loc 1 419 9 is_stmt 1 view .LVU514
 419:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1747              		.loc 1 419 21 is_stmt 0 view .LVU515
 1748 0448 FFF7FEFF 		bl	HAL_GetTick
 1749              	.LVL127:
 1750              	.LBB278:
 1751              	.LBB279:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1752              		.loc 3 531 4 view .LVU516
 1753 044c 4FF00075 		mov	r5, #33554432
 1754              	.LBE279:
 1755              	.LBE278:
 419:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1756              		.loc 1 419 21 view .LVU517
 1757 0450 0446     		mov	r4, r0
 1758              	.LVL128:
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1759              		.loc 1 422 9 is_stmt 1 view .LVU518
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1760              		.loc 1 422 15 is_stmt 0 view .LVU519
 1761 0452 0126     		movs	r6, #1
 1762              	.LVL129:
 1763              	.L80:
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1764              		.loc 1 422 14 is_stmt 1 view .LVU520
 1765              	.LBB281:
 1766              	.LBI278:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1767              		.loc 3 526 57 view .LVU521
 1768              	.LBB280:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1769              		.loc 3 528 3 view .LVU522
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1770              		.loc 3 531 4 view .LVU523
 1771              		.syntax unified
 1772              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1773 0454 95FAA5F3 		rbit r3, r5
 1774              	@ 0 "" 2
 1775              	.LVL130:
 1776              		.loc 3 544 3 view .LVU524
 1777              		.loc 3 544 3 is_stmt 0 view .LVU525
 1778              		.thumb
 1779              		.syntax unified
 1780              	.LBE280:
 1781              	.LBE281:
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1782              		.loc 1 422 15 view .LVU526
 1783 0458 0A68     		ldr	r2, [r1]
 1784              	.LVL131:
 1785              	.LBB282:
 1786              	.LBI282:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1787              		.loc 3 526 57 is_stmt 1 view .LVU527
 1788              	.LBB283:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1789              		.loc 3 528 3 view .LVU528
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1790              		.loc 3 531 4 view .LVU529
 1791              		.syntax unified
 1792              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1793 045a 95FAA5F3 		rbit r3, r5
 1794              	@ 0 "" 2
 1795              	.LVL132:
 1796              		.loc 3 544 3 view .LVU530
 1797              		.loc 3 544 3 is_stmt 0 view .LVU531
 1798              		.thumb
 1799              		.syntax unified
 1800              	.LBE283:
 1801              	.LBE282:
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1802              		.loc 1 422 15 view .LVU532
 1803 045e B3FA83F3 		clz	r3, r3
 1804 0462 03F01F03 		and	r3, r3, #31
 1805 0466 06FA03F3 		lsl	r3, r6, r3
 422:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1806              		.loc 1 422 14 view .LVU533
 1807 046a 1342     		tst	r3, r2
 1808 046c 7FF4DEAD 		bne	.L82
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1809              		.loc 1 424 11 is_stmt 1 view .LVU534
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1810              		.loc 1 424 15 is_stmt 0 view .LVU535
 1811 0470 FFF7FEFF 		bl	HAL_GetTick
 1812              	.LVL133:
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1813              		.loc 1 424 29 view .LVU536
 1814 0474 001B     		subs	r0, r0, r4
 424:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1815              		.loc 1 424 13 view .LVU537
 1816 0476 B842     		cmp	r0, r7
 1817 0478 ECD9     		bls	.L80
 1818 047a 25E6     		b	.L33
 1819              	.LVL134:
 1820              	.L79:
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1821              		.loc 1 399 11 is_stmt 1 view .LVU538
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1822              		.loc 1 399 15 is_stmt 0 view .LVU539
 1823 047c FFF7FEFF 		bl	HAL_GetTick
 1824              	.LVL135:
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1825              		.loc 1 399 29 view .LVU540
 1826 0480 801B     		subs	r0, r0, r6
 399:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1827              		.loc 1 399 13 view .LVU541
 1828 0482 4045     		cmp	r0, r8
 1829 0484 BED9     		bls	.L78
 1830 0486 1FE6     		b	.L33
 1831              	.LVL136:
 1832              	.L77:
 433:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****  
 1833              		.loc 1 433 9 is_stmt 1 view .LVU542
 1834              	.LBB284:
 1835              	.LBI284:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1836              		.loc 3 526 57 view .LVU543
 1837              	.LBB285:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1838              		.loc 3 528 3 view .LVU544
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1839              		.loc 3 531 4 view .LVU545
 1840              		.syntax unified
 1841              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1842 0488 93FAA3F3 		rbit r3, r3
 1843              	@ 0 "" 2
 1844              	.LVL137:
 1845              		.loc 3 544 3 view .LVU546
 1846              		.loc 3 544 3 is_stmt 0 view .LVU547
 1847              		.thumb
 1848              		.syntax unified
 1849              	.LBE285:
 1850              	.LBE284:
 433:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****  
 1851              		.loc 1 433 9 view .LVU548
 1852 048c B3FA83F3 		clz	r3, r3
 1853 0490 03F18453 		add	r3, r3, #276824064
 1854 0494 03F58413 		add	r3, r3, #1081344
 1855 0498 9B00     		lsls	r3, r3, #2
 1856 049a 0022     		movs	r2, #0
 1857 049c 1A60     		str	r2, [r3]
 436:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1858              		.loc 1 436 9 is_stmt 1 view .LVU549
 436:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1859              		.loc 1 436 21 is_stmt 0 view .LVU550
 1860 049e FFF7FEFF 		bl	HAL_GetTick
 1861              	.LVL138:
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1862              		.loc 1 441 13 view .LVU551
 1863 04a2 0D4F     		ldr	r7, .L113+4
 436:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 1864              		.loc 1 436 21 view .LVU552
 1865 04a4 0446     		mov	r4, r0
 1866              	.LVL139:
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1867              		.loc 1 439 9 is_stmt 1 view .LVU553
 1868              	.LBB286:
 1869              	.LBB287:
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1870              		.loc 3 531 4 is_stmt 0 view .LVU554
 1871 04a6 4FF00075 		mov	r5, #33554432
 1872              	.LBE287:
 1873              	.LBE286:
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1874              		.loc 1 439 15 view .LVU555
 1875 04aa 0126     		movs	r6, #1
 1876              	.LVL140:
 1877              	.L83:
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1878              		.loc 1 439 14 is_stmt 1 view .LVU556
 1879              	.LBB289:
 1880              	.LBI286:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1881              		.loc 3 526 57 view .LVU557
 1882              	.LBB288:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1883              		.loc 3 528 3 view .LVU558
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1884              		.loc 3 531 4 view .LVU559
 1885              		.syntax unified
 1886              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1887 04ac 95FAA5F3 		rbit r3, r5
 1888              	@ 0 "" 2
 1889              	.LVL141:
 1890              		.loc 3 544 3 view .LVU560
 1891              		.loc 3 544 3 is_stmt 0 view .LVU561
 1892              		.thumb
 1893              		.syntax unified
 1894              	.LBE288:
 1895              	.LBE289:
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1896              		.loc 1 439 15 view .LVU562
 1897 04b0 0A68     		ldr	r2, [r1]
 1898              	.LVL142:
 1899              	.LBB290:
 1900              	.LBI290:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1901              		.loc 3 526 57 is_stmt 1 view .LVU563
 1902              	.LBB291:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1903              		.loc 3 528 3 view .LVU564
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1904              		.loc 3 531 4 view .LVU565
 1905              		.syntax unified
 1906              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1907 04b2 95FAA5F3 		rbit r3, r5
 1908              	@ 0 "" 2
 1909              	.LVL143:
 1910              		.loc 3 544 3 view .LVU566
 1911              		.loc 3 544 3 is_stmt 0 view .LVU567
 1912              		.thumb
 1913              		.syntax unified
 1914              	.LBE291:
 1915              	.LBE290:
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1916              		.loc 1 439 15 view .LVU568
 1917 04b6 B3FA83F3 		clz	r3, r3
 1918 04ba 03F01F03 		and	r3, r3, #31
 1919 04be 06FA03F3 		lsl	r3, r6, r3
 439:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 1920              		.loc 1 439 14 view .LVU569
 1921 04c2 1342     		tst	r3, r2
 1922 04c4 3FF4B2AD 		beq	.L82
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1923              		.loc 1 441 11 is_stmt 1 view .LVU570
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1924              		.loc 1 441 15 is_stmt 0 view .LVU571
 1925 04c8 FFF7FEFF 		bl	HAL_GetTick
 1926              	.LVL144:
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1927              		.loc 1 441 29 view .LVU572
 1928 04cc 001B     		subs	r0, r0, r4
 441:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           {
 1929              		.loc 1 441 13 view .LVU573
 1930 04ce B842     		cmp	r0, r7
 1931 04d0 ECD9     		bls	.L83
 1932 04d2 F9E5     		b	.L33
 1933              	.L114:
 1934              		.align	2
 1935              	.L113:
 1936 04d4 00100240 		.word	1073876992
 1937 04d8 400D0300 		.word	200000
 1938              		.cfi_endproc
 1939              	.LFE132:
 1941              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1942              		.align	1
 1943              		.global	HAL_RCC_ClockConfig
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
 1947              		.fpu softvfp
 1949              	HAL_RCC_ClockConfig:
 1950              	.LVL145:
 1951              	.LFB133:
 456:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 457:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 458:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 459:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 460:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 461:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 462:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 463:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 464:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 465:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 466:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 467:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
 468:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 469:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 470:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 471:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 472:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *           
 473:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 474:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 475:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 476:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 477:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 478:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         currently used as system clock source.
 479:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 480:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 481:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 482:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 1952              		.loc 1 482 1 is_stmt 1 view -0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 483:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1956              		.loc 1 483 3 view .LVU575
 484:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 485:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 486:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1957              		.loc 1 486 3 view .LVU576
 487:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1958              		.loc 1 487 3 view .LVU577
 488:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1959              		.loc 1 488 3 view .LVU578
 489:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 490:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 491:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 492:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     (HCLK) of the device. */
 493:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 494:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 495:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1960              		.loc 1 495 3 view .LVU579
 1961              		.loc 1 495 23 is_stmt 0 view .LVU580
 1962 0000 504A     		ldr	r2, .L158
 482:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1963              		.loc 1 482 1 view .LVU581
 1964 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1965              	.LCFI4:
 1966              		.cfi_def_cfa_offset 24
 1967              		.cfi_offset 3, -24
 1968              		.cfi_offset 4, -20
 1969              		.cfi_offset 5, -16
 1970              		.cfi_offset 6, -12
 1971              		.cfi_offset 7, -8
 1972              		.cfi_offset 14, -4
 1973              		.loc 1 495 23 view .LVU582
 1974 0004 1368     		ldr	r3, [r2]
 1975              		.loc 1 495 29 view .LVU583
 1976 0006 03F00703 		and	r3, r3, #7
 1977              		.loc 1 495 5 view .LVU584
 1978 000a 8B42     		cmp	r3, r1
 482:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1979              		.loc 1 482 1 view .LVU585
 1980 000c 0446     		mov	r4, r0
 1981              		.loc 1 495 5 view .LVU586
 1982 000e 1BD3     		bcc	.L116
 1983              	.L119:
 496:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {    
 497:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 498:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 499:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 500:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 501:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 502:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 503:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 504:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 505:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 506:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 507:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 508:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 509:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1984              		.loc 1 509 3 is_stmt 1 view .LVU587
 1985              		.loc 1 509 25 is_stmt 0 view .LVU588
 1986 0010 2268     		ldr	r2, [r4]
 1987              		.loc 1 509 5 view .LVU589
 1988 0012 9007     		lsls	r0, r2, #30
 1989              	.LVL146:
 1990              		.loc 1 509 5 view .LVU590
 1991 0014 24D4     		bmi	.L117
 1992              	.L118:
 510:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 511:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 512:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 513:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 514:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 515:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 516:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1993              		.loc 1 516 3 is_stmt 1 view .LVU591
 1994              		.loc 1 516 5 is_stmt 0 view .LVU592
 1995 0016 D207     		lsls	r2, r2, #31
 1996 0018 2AD4     		bmi	.L121
 1997              	.LVL147:
 1998              	.L131:
 517:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {    
 518:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 519:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 520:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 521:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 522:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 523:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 524:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 525:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 526:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 527:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 528:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 529:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 530:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 531:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 532:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 533:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 534:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 535:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 536:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 537:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 538:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 539:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 540:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 541:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 543:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 544:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 545:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 546:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 547:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 548:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 549:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Get Start Tick */
 550:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 551:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 552:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 553:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 554:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 555:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 557:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 558:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 559:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 560:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 561:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 562:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 563:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 564:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 565:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 566:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 567:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 568:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 569:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 570:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 571:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 572:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     else
 573:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 574:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 575:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 576:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 577:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 578:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 579:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 580:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 581:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }      
 582:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }    
 583:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 584:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1999              		.loc 1 584 3 is_stmt 1 view .LVU593
 2000              		.loc 1 584 23 is_stmt 0 view .LVU594
 2001 001a 4A4A     		ldr	r2, .L158
 2002 001c 1368     		ldr	r3, [r2]
 2003              		.loc 1 584 29 view .LVU595
 2004 001e 03F00703 		and	r3, r3, #7
 2005              		.loc 1 584 5 view .LVU596
 2006 0022 8B42     		cmp	r3, r1
 2007 0024 7AD8     		bhi	.L122
 2008              	.L123:
 585:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {    
 586:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 587:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 588:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 589:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 590:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 591:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 592:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 593:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 594:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 595:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }    
 596:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 597:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 598:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 2009              		.loc 1 598 3 is_stmt 1 view .LVU597
 2010              		.loc 1 598 25 is_stmt 0 view .LVU598
 2011 0026 2068     		ldr	r0, [r4]
 2012              		.loc 1 598 5 view .LVU599
 2013 0028 4307     		lsls	r3, r0, #29
 2014 002a 00F18280 		bmi	.L137
 2015              	.LVL148:
 2016              	.L138:
 599:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 600:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 601:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 602:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 603:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 604:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 605:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2017              		.loc 1 605 3 is_stmt 1 view .LVU600
 2018              		.loc 1 605 5 is_stmt 0 view .LVU601
 2019 002e 10F00800 		ands	r0, r0, #8
 2020 0032 14D0     		beq	.L120
 606:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 607:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 2021              		.loc 1 607 5 is_stmt 1 view .LVU602
 608:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2022              		.loc 1 608 5 view .LVU603
 2023 0034 444A     		ldr	r2, .L158+4
 2024 0036 2169     		ldr	r1, [r4, #16]
 2025 0038 5368     		ldr	r3, [r2, #4]
 2026 003a 23F46053 		bic	r3, r3, #14336
 2027 003e 43EAC103 		orr	r3, r3, r1, lsl #3
 2028 0042 5360     		str	r3, [r2, #4]
 609:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 610:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****  
 611:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 612:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 613:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 614:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 615:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 616:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   
 617:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 2029              		.loc 1 617 10 is_stmt 0 view .LVU604
 2030 0044 0020     		movs	r0, #0
 2031 0046 0AE0     		b	.L120
 2032              	.LVL149:
 2033              	.L116:
 498:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2034              		.loc 1 498 5 is_stmt 1 view .LVU605
 2035 0048 1368     		ldr	r3, [r2]
 2036 004a 23F00703 		bic	r3, r3, #7
 2037 004e 0B43     		orrs	r3, r3, r1
 2038 0050 1360     		str	r3, [r2]
 502:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2039              		.loc 1 502 5 view .LVU606
 502:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2040              		.loc 1 502 14 is_stmt 0 view .LVU607
 2041 0052 1368     		ldr	r3, [r2]
 502:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2042              		.loc 1 502 20 view .LVU608
 2043 0054 03F00703 		and	r3, r3, #7
 502:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2044              		.loc 1 502 7 view .LVU609
 2045 0058 8B42     		cmp	r3, r1
 2046 005a D9D0     		beq	.L119
 2047              	.LVL150:
 2048              	.L125:
 504:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 2049              		.loc 1 504 14 view .LVU610
 2050 005c 0120     		movs	r0, #1
 2051              	.LVL151:
 2052              	.L120:
 618:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 2053              		.loc 1 618 1 view .LVU611
 2054 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2055              	.LVL152:
 2056              	.L117:
 511:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2057              		.loc 1 511 5 is_stmt 1 view .LVU612
 512:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2058              		.loc 1 512 5 view .LVU613
 2059 0060 3948     		ldr	r0, .L158+4
 2060 0062 A568     		ldr	r5, [r4, #8]
 2061 0064 4368     		ldr	r3, [r0, #4]
 2062 0066 23F0F003 		bic	r3, r3, #240
 2063 006a 2B43     		orrs	r3, r3, r5
 2064 006c 4360     		str	r3, [r0, #4]
 2065 006e D2E7     		b	.L118
 2066              	.L121:
 518:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2067              		.loc 1 518 5 view .LVU614
 521:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2068              		.loc 1 521 5 view .LVU615
 521:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2069              		.loc 1 521 25 is_stmt 0 view .LVU616
 2070 0070 6268     		ldr	r2, [r4, #4]
 2071 0072 354D     		ldr	r5, .L158+4
 521:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2072              		.loc 1 521 7 view .LVU617
 2073 0074 012A     		cmp	r2, #1
 2074 0076 27D1     		bne	.L124
 524:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2075              		.loc 1 524 7 is_stmt 1 view .LVU618
 2076              	.LVL153:
 2077              	.LBB292:
 2078              	.LBI292:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2079              		.loc 3 526 57 view .LVU619
 2080              	.LBB293:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2081              		.loc 3 528 3 view .LVU620
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2082              		.loc 3 531 4 view .LVU621
 2083 0078 4FF40033 		mov	r3, #131072
 2084              		.syntax unified
 2085              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2086 007c 93FAA3F0 		rbit r0, r3
 2087              	@ 0 "" 2
 2088              	.LVL154:
 2089              		.loc 3 544 3 view .LVU622
 2090              		.loc 3 544 3 is_stmt 0 view .LVU623
 2091              		.thumb
 2092              		.syntax unified
 2093              	.LBE293:
 2094              	.LBE292:
 524:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2095              		.loc 1 524 10 view .LVU624
 2096 0080 2868     		ldr	r0, [r5]
 2097              	.LVL155:
 2098              	.LBB294:
 2099              	.LBI294:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2100              		.loc 3 526 57 is_stmt 1 view .LVU625
 2101              	.LBB295:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2102              		.loc 3 528 3 view .LVU626
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2103              		.loc 3 531 4 view .LVU627
 2104              		.syntax unified
 2105              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2106 0082 93FAA3F3 		rbit r3, r3
 2107              	@ 0 "" 2
 2108              	.LVL156:
 2109              		.loc 3 544 3 view .LVU628
 2110              		.loc 3 544 3 is_stmt 0 view .LVU629
 2111              		.thumb
 2112              		.syntax unified
 2113              	.LBE295:
 2114              	.LBE294:
 524:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2115              		.loc 1 524 10 view .LVU630
 2116 0086 B3FA83F3 		clz	r3, r3
 2117 008a 03F01F03 		and	r3, r3, #31
 2118 008e 02FA03F3 		lsl	r3, r2, r3
 524:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2119              		.loc 1 524 9 view .LVU631
 2120 0092 0342     		tst	r3, r0
 2121              	.L155:
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2122              		.loc 1 542 9 view .LVU632
 2123 0094 E2D0     		beq	.L125
 547:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2124              		.loc 1 547 5 is_stmt 1 view .LVU633
 2125 0096 6B68     		ldr	r3, [r5, #4]
 2126 0098 23F00303 		bic	r3, r3, #3
 2127 009c 1A43     		orrs	r2, r2, r3
 2128 009e 6A60     		str	r2, [r5, #4]
 550:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2129              		.loc 1 550 5 view .LVU634
 550:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2130              		.loc 1 550 17 is_stmt 0 view .LVU635
 2131 00a0 FFF7FEFF 		bl	HAL_GetTick
 2132              	.LVL157:
 552:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2133              		.loc 1 552 25 view .LVU636
 2134 00a4 6368     		ldr	r3, [r4, #4]
 552:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2135              		.loc 1 552 7 view .LVU637
 2136 00a6 012B     		cmp	r3, #1
 550:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2137              		.loc 1 550 17 view .LVU638
 2138 00a8 0646     		mov	r6, r0
 2139              	.LVL158:
 552:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2140              		.loc 1 552 5 is_stmt 1 view .LVU639
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2141              		.loc 1 556 11 is_stmt 0 view .LVU640
 2142 00aa 41F28837 		movw	r7, #5000
 552:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2143              		.loc 1 552 7 view .LVU641
 2144 00ae 1ED1     		bne	.L152
 2145              	.LVL159:
 2146              	.L128:
 554:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2147              		.loc 1 554 13 is_stmt 1 view .LVU642
 554:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2148              		.loc 1 554 14 is_stmt 0 view .LVU643
 2149 00b0 6B68     		ldr	r3, [r5, #4]
 2150 00b2 03F00C03 		and	r3, r3, #12
 554:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2151              		.loc 1 554 13 view .LVU644
 2152 00b6 042B     		cmp	r3, #4
 2153 00b8 AFD0     		beq	.L131
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2154              		.loc 1 556 9 is_stmt 1 view .LVU645
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2155              		.loc 1 556 13 is_stmt 0 view .LVU646
 2156 00ba FFF7FEFF 		bl	HAL_GetTick
 2157              	.LVL160:
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2158              		.loc 1 556 27 view .LVU647
 2159 00be 801B     		subs	r0, r0, r6
 556:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2160              		.loc 1 556 11 view .LVU648
 2161 00c0 B842     		cmp	r0, r7
 2162 00c2 F5D9     		bls	.L128
 2163              	.L134:
 558:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2164              		.loc 1 558 18 view .LVU649
 2165 00c4 0320     		movs	r0, #3
 2166 00c6 CAE7     		b	.L120
 2167              	.LVL161:
 2168              	.L124:
 530:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2169              		.loc 1 530 10 is_stmt 1 view .LVU650
 530:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2170              		.loc 1 530 12 is_stmt 0 view .LVU651
 2171 00c8 022A     		cmp	r2, #2
 533:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2172              		.loc 1 533 7 is_stmt 1 view .LVU652
 2173              	.LVL162:
 2174              	.LBB296:
 2175              	.LBI296:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2176              		.loc 3 526 57 view .LVU653
 2177              	.LBB297:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2178              		.loc 3 528 3 view .LVU654
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2179              		.loc 3 531 4 view .LVU655
 2180 00ca 0CBF     		ite	eq
 2181 00cc 4FF00073 		moveq	r3, #33554432
 2182              	.LBE297:
 2183              	.LBE296:
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2184              		.loc 1 542 7 view .LVU656
 2185              	.LVL163:
 2186              	.LBB298:
 2187              	.LBI298:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2188              		.loc 3 526 57 view .LVU657
 2189              	.LBB299:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2190              		.loc 3 528 3 view .LVU658
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2191              		.loc 3 531 4 view .LVU659
 2192 00d0 0223     		movne	r3, #2
 2193              		.syntax unified
 2194              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2195 00d2 93FAA3F0 		rbit r0, r3
 2196              	@ 0 "" 2
 2197              	.LVL164:
 2198              		.loc 3 544 3 view .LVU660
 2199              		.loc 3 544 3 is_stmt 0 view .LVU661
 2200              		.thumb
 2201              		.syntax unified
 2202              	.LBE299:
 2203              	.LBE298:
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2204              		.loc 1 542 10 view .LVU662
 2205 00d6 2E68     		ldr	r6, [r5]
 2206              	.LVL165:
 2207              	.LBB300:
 2208              	.LBI300:
 526:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2209              		.loc 3 526 57 is_stmt 1 view .LVU663
 2210              	.LBB301:
 528:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2211              		.loc 3 528 3 view .LVU664
 531:.././hal/stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2212              		.loc 3 531 4 view .LVU665
 2213              		.syntax unified
 2214              	@ 531 ".././hal/stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2215 00d8 93FAA3F3 		rbit r3, r3
 2216              	@ 0 "" 2
 2217              	.LVL166:
 2218              		.loc 3 544 3 view .LVU666
 2219              		.loc 3 544 3 is_stmt 0 view .LVU667
 2220              		.thumb
 2221              		.syntax unified
 2222              	.LBE301:
 2223              	.LBE300:
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2224              		.loc 1 542 10 view .LVU668
 2225 00dc B3FA83F3 		clz	r3, r3
 2226 00e0 03F01F03 		and	r3, r3, #31
 2227 00e4 0120     		movs	r0, #1
 2228 00e6 00FA03F3 		lsl	r3, r0, r3
 542:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2229              		.loc 1 542 9 view .LVU669
 2230 00ea 3342     		tst	r3, r6
 2231 00ec D2E7     		b	.L155
 2232              	.LVL167:
 2233              	.L152:
 562:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2234              		.loc 1 562 10 is_stmt 1 view .LVU670
 562:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2235              		.loc 1 562 12 is_stmt 0 view .LVU671
 2236 00ee 022B     		cmp	r3, #2
 2237 00f0 0FD1     		bne	.L133
 2238              	.LVL168:
 2239              	.L132:
 564:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2240              		.loc 1 564 13 is_stmt 1 view .LVU672
 564:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2241              		.loc 1 564 14 is_stmt 0 view .LVU673
 2242 00f2 6B68     		ldr	r3, [r5, #4]
 2243 00f4 03F00C03 		and	r3, r3, #12
 564:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2244              		.loc 1 564 13 view .LVU674
 2245 00f8 082B     		cmp	r3, #8
 2246 00fa 8ED0     		beq	.L131
 566:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2247              		.loc 1 566 9 is_stmt 1 view .LVU675
 566:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2248              		.loc 1 566 13 is_stmt 0 view .LVU676
 2249 00fc FFF7FEFF 		bl	HAL_GetTick
 2250              	.LVL169:
 566:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2251              		.loc 1 566 27 view .LVU677
 2252 0100 801B     		subs	r0, r0, r6
 566:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2253              		.loc 1 566 11 view .LVU678
 2254 0102 B842     		cmp	r0, r7
 2255 0104 F5D9     		bls	.L132
 2256 0106 DDE7     		b	.L134
 2257              	.L136:
 576:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2258              		.loc 1 576 9 is_stmt 1 view .LVU679
 576:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2259              		.loc 1 576 13 is_stmt 0 view .LVU680
 2260 0108 FFF7FEFF 		bl	HAL_GetTick
 2261              	.LVL170:
 576:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2262              		.loc 1 576 27 view .LVU681
 2263 010c 801B     		subs	r0, r0, r6
 576:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2264              		.loc 1 576 11 view .LVU682
 2265 010e B842     		cmp	r0, r7
 2266 0110 D8D8     		bhi	.L134
 2267              	.L133:
 574:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2268              		.loc 1 574 13 is_stmt 1 view .LVU683
 574:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2269              		.loc 1 574 14 is_stmt 0 view .LVU684
 2270 0112 6B68     		ldr	r3, [r5, #4]
 574:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2271              		.loc 1 574 13 view .LVU685
 2272 0114 13F00C0F 		tst	r3, #12
 2273 0118 F6D1     		bne	.L136
 2274 011a 7EE7     		b	.L131
 2275              	.LVL171:
 2276              	.L122:
 587:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 2277              		.loc 1 587 5 is_stmt 1 view .LVU686
 2278 011c 1368     		ldr	r3, [r2]
 2279 011e 23F00703 		bic	r3, r3, #7
 2280 0122 0B43     		orrs	r3, r3, r1
 2281 0124 1360     		str	r3, [r2]
 591:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2282              		.loc 1 591 5 view .LVU687
 591:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2283              		.loc 1 591 14 is_stmt 0 view .LVU688
 2284 0126 1368     		ldr	r3, [r2]
 591:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2285              		.loc 1 591 20 view .LVU689
 2286 0128 03F00703 		and	r3, r3, #7
 591:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2287              		.loc 1 591 7 view .LVU690
 2288 012c 8B42     		cmp	r3, r1
 2289 012e 95D1     		bne	.L125
 2290 0130 79E7     		b	.L123
 2291              	.L137:
 600:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2292              		.loc 1 600 5 is_stmt 1 view .LVU691
 601:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2293              		.loc 1 601 5 view .LVU692
 2294 0132 0549     		ldr	r1, .L158+4
 2295              	.LVL172:
 601:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2296              		.loc 1 601 5 is_stmt 0 view .LVU693
 2297 0134 E368     		ldr	r3, [r4, #12]
 2298 0136 4A68     		ldr	r2, [r1, #4]
 2299 0138 22F4E062 		bic	r2, r2, #1792
 2300 013c 1A43     		orrs	r2, r2, r3
 2301 013e 4A60     		str	r2, [r1, #4]
 2302 0140 75E7     		b	.L138
 2303              	.L159:
 2304 0142 00BF     		.align	2
 2305              	.L158:
 2306 0144 00200240 		.word	1073881088
 2307 0148 00100240 		.word	1073876992
 2308              		.cfi_endproc
 2309              	.LFE133:
 2311              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2312              		.align	1
 2313              		.global	HAL_RCC_GetPCLK2Freq
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2317              		.fpu softvfp
 2319              	HAL_RCC_GetPCLK2Freq:
 2320              	.LFB147:
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
 2325 0000 4FF4E100 		mov	r0, #7372800
 2326 0004 7047     		bx	lr
 2327              		.cfi_endproc
 2328              	.LFE147:
 2330              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 2331              		.align	1
 2332              		.global	HAL_GPIO_Init
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2336              		.fpu softvfp
 2338              	HAL_GPIO_Init:
 2339              	.LVL173:
 2340              	.LFB135:
 619:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 620:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 621:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
 622:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 623:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 624:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval PCLK2 frequency
 625:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 626:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 627:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 628:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 629:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
 630:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return F_CPU;
 631:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 632:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 633:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 634:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 635:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 636:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 637:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 638:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 639:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 640:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 641:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 642:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 643:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 644:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 645:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 646:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 647:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 648:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */ \
 649:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 650:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 651:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****                                       } while(0U)
 652:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 653:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 654:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 655:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 656:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F3 family devices
 657:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 658:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 659:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval None
 660:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 661:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 662:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 2341              		.loc 1 662 1 is_stmt 1 view -0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 8
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 663:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2345              		.loc 1 663 3 view .LVU695
 664:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2346              		.loc 1 664 3 view .LVU696
 665:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 2347              		.loc 1 665 3 view .LVU697
 666:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 667:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 668:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 2348              		.loc 1 668 3 view .LVU698
 669:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 2349              		.loc 1 669 3 view .LVU699
 670:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 2350              		.loc 1 670 3 view .LVU700
 671:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 2351              		.loc 1 671 3 view .LVU701
 672:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 673:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the port pins */
 674:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 2352              		.loc 1 674 3 view .LVU702
 662:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2353              		.loc 1 662 1 is_stmt 0 view .LVU703
 2354 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2355              	.LCFI5:
 2356              		.cfi_def_cfa_offset 48
 2357              		.cfi_offset 4, -36
 2358              		.cfi_offset 5, -32
 2359              		.cfi_offset 6, -28
 2360              		.cfi_offset 7, -24
 2361              		.cfi_offset 8, -20
 2362              		.cfi_offset 9, -16
 2363              		.cfi_offset 10, -12
 2364              		.cfi_offset 11, -8
 2365              		.cfi_offset 14, -4
 2366              	.LBB302:
 675:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 676:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Get current io position */
 677:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 678:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 679:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(iocurrent)
 680:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 681:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 682:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 683:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 684:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 685:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 686:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 687:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 688:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 689:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */
 690:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 692:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 693:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 694:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 695:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 696:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 697:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp = GPIOx->MODER;
 698:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 699:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 700:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 701:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 702:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 703:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 704:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 705:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 706:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the Speed parameter */
 707:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 708:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Speed */
 709:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR;
 710:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 711:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 712:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 713:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 714:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Output Type */
 715:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 716:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 717:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 718:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 719:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 720:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 721:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 722:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 723:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 724:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 725:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 726:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 727:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 728:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 729:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 730:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 731:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 2367              		.loc 1 732 9 view .LVU704
 2368 0004 DFF87C81 		ldr	r8, .L186+8
 2369              	.LBE302:
 733:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 734:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 737:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 738:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 739:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 740:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->IMR;
 2370              		.loc 1 740 14 view .LVU705
 2371 0008 5C4C     		ldr	r4, .L186
 663:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2372              		.loc 1 663 12 view .LVU706
 2373 000a 0023     		movs	r3, #0
 677:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2374              		.loc 1 677 40 view .LVU707
 2375 000c 4FF00109 		mov	r9, #1
 2376              	.LVL174:
 2377              	.L162:
 674:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2378              		.loc 1 674 9 is_stmt 1 view .LVU708
 674:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2379              		.loc 1 674 21 is_stmt 0 view .LVU709
 2380 0010 0A68     		ldr	r2, [r1]
 674:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2381              		.loc 1 674 9 view .LVU710
 2382 0012 32FA03F5 		lsrs	r5, r2, r3
 2383 0016 02D1     		bne	.L177
 741:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 742:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 743:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 744:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 745:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 746:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->IMR = temp;
 747:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 748:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->EMR;
 749:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 750:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 751:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 752:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 753:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 754:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->EMR = temp;
 755:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 756:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 757:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->RTSR;
 758:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 759:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 760:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 761:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 762:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 763:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->RTSR = temp;
 764:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 765:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->FTSR;
 766:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 767:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 768:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 769:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 770:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 771:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->FTSR = temp;
 772:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 773:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 774:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     
 775:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     position++;
 776:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 777:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 2384              		.loc 1 777 1 view .LVU711
 2385 0018 03B0     		add	sp, sp, #12
 2386              	.LCFI6:
 2387              		.cfi_remember_state
 2388              		.cfi_def_cfa_offset 36
 2389              		@ sp needed
 2390 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2391              	.L177:
 2392              	.LCFI7:
 2393              		.cfi_restore_state
 677:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2394              		.loc 1 677 5 is_stmt 1 view .LVU712
 677:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2395              		.loc 1 677 40 is_stmt 0 view .LVU713
 2396 001e 09FA03FA 		lsl	r10, r9, r3
 2397              	.LVL175:
 679:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2398              		.loc 1 679 5 is_stmt 1 view .LVU714
 679:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2399              		.loc 1 679 7 is_stmt 0 view .LVU715
 2400 0022 1AEA0202 		ands	r2, r10, r2
 2401              	.LVL176:
 679:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 2402              		.loc 1 679 7 view .LVU716
 2403 0026 00F09E80 		beq	.L164
 683:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2404              		.loc 1 683 7 is_stmt 1 view .LVU717
 683:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2405              		.loc 1 683 20 is_stmt 0 view .LVU718
 2406 002a 4D68     		ldr	r5, [r1, #4]
 683:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2407              		.loc 1 683 9 view .LVU719
 2408 002c 25F0100E 		bic	lr, r5, #16
 2409 0030 BEF1020F 		cmp	lr, #2
 2410 0034 14D1     		bne	.L165
 686:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 2411              		.loc 1 686 9 is_stmt 1 view .LVU720
 687:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         
 2412              		.loc 1 687 9 view .LVU721
 690:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2413              		.loc 1 690 9 view .LVU722
 690:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2414              		.loc 1 690 36 is_stmt 0 view .LVU723
 2415 0036 4FEAD30C 		lsr	ip, r3, #3
 2416 003a 00EB8C0C 		add	ip, r0, ip, lsl #2
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2417              		.loc 1 691 28 view .LVU724
 2418 003e 03F0070B 		and	fp, r3, #7
 690:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2419              		.loc 1 690 14 view .LVU725
 2420 0042 DCF82060 		ldr	r6, [ip, #32]
 2421              	.LVL177:
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2422              		.loc 1 691 9 is_stmt 1 view .LVU726
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2423              		.loc 1 691 57 is_stmt 0 view .LVU727
 2424 0046 4FEA8B0B 		lsl	fp, fp, #2
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2425              		.loc 1 691 24 view .LVU728
 2426 004a 0F27     		movs	r7, #15
 2427 004c 07FA0BF7 		lsl	r7, r7, fp
 691:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2428              		.loc 1 691 14 view .LVU729
 2429 0050 26EA0707 		bic	r7, r6, r7
 2430              	.LVL178:
 692:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2431              		.loc 1 692 9 is_stmt 1 view .LVU730
 692:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2432              		.loc 1 692 51 is_stmt 0 view .LVU731
 2433 0054 0E69     		ldr	r6, [r1, #16]
 2434 0056 06FA0BF6 		lsl	r6, r6, fp
 692:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2435              		.loc 1 692 14 view .LVU732
 2436 005a 3E43     		orrs	r6, r6, r7
 2437              	.LVL179:
 693:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2438              		.loc 1 693 9 is_stmt 1 view .LVU733
 693:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2439              		.loc 1 693 35 is_stmt 0 view .LVU734
 2440 005c CCF82060 		str	r6, [ip, #32]
 2441              	.LVL180:
 2442              	.L165:
 697:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 2443              		.loc 1 697 7 is_stmt 1 view .LVU735
 697:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 2444              		.loc 1 697 12 is_stmt 0 view .LVU736
 2445 0060 D0F800B0 		ldr	fp, [r0]
 2446              	.LVL181:
 698:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2447              		.loc 1 698 7 is_stmt 1 view .LVU737
 2448 0064 4FEA430C 		lsl	ip, r3, #1
 698:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2449              		.loc 1 698 35 is_stmt 0 view .LVU738
 2450 0068 0326     		movs	r6, #3
 2451 006a 06FA0CF7 		lsl	r7, r6, ip
 698:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2452              		.loc 1 698 12 view .LVU739
 2453 006e 2BEA070B 		bic	fp, fp, r7
 2454              	.LVL182:
 699:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2455              		.loc 1 699 7 is_stmt 1 view .LVU740
 698:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2456              		.loc 1 698 15 is_stmt 0 view .LVU741
 2457 0072 FE43     		mvns	r6, r7
 699:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2458              		.loc 1 699 33 view .LVU742
 2459 0074 05F00307 		and	r7, r5, #3
 699:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2460              		.loc 1 699 46 view .LVU743
 2461 0078 07FA0CF7 		lsl	r7, r7, ip
 703:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2462              		.loc 1 703 9 view .LVU744
 2463 007c 0EF1FF3E 		add	lr, lr, #-1
 699:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2464              		.loc 1 699 12 view .LVU745
 2465 0080 47EA0B07 		orr	r7, r7, fp
 2466              	.LVL183:
 700:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2467              		.loc 1 700 7 is_stmt 1 view .LVU746
 703:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2468              		.loc 1 703 9 is_stmt 0 view .LVU747
 2469 0084 BEF1010F 		cmp	lr, #1
 700:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2470              		.loc 1 700 20 view .LVU748
 2471 0088 0760     		str	r7, [r0]
 703:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2472              		.loc 1 703 7 is_stmt 1 view .LVU749
 703:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2473              		.loc 1 703 9 is_stmt 0 view .LVU750
 2474 008a 11D8     		bhi	.L166
 707:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Speed */
 2475              		.loc 1 707 9 is_stmt 1 view .LVU751
 709:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 2476              		.loc 1 709 9 view .LVU752
 709:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 2477              		.loc 1 709 14 is_stmt 0 view .LVU753
 2478 008c 8768     		ldr	r7, [r0, #8]
 2479              	.LVL184:
 710:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 2480              		.loc 1 710 9 is_stmt 1 view .LVU754
 710:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 2481              		.loc 1 710 14 is_stmt 0 view .LVU755
 2482 008e 06EA070E 		and	lr, r6, r7
 2483              	.LVL185:
 711:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2484              		.loc 1 711 9 is_stmt 1 view .LVU756
 711:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2485              		.loc 1 711 35 is_stmt 0 view .LVU757
 2486 0092 CF68     		ldr	r7, [r1, #12]
 2487 0094 07FA0CF7 		lsl	r7, r7, ip
 711:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2488              		.loc 1 711 14 view .LVU758
 2489 0098 47EA0E07 		orr	r7, r7, lr
 2490              	.LVL186:
 712:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2491              		.loc 1 712 9 is_stmt 1 view .LVU759
 712:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2492              		.loc 1 712 24 is_stmt 0 view .LVU760
 2493 009c 8760     		str	r7, [r0, #8]
 715:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 2494              		.loc 1 715 9 is_stmt 1 view .LVU761
 715:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 2495              		.loc 1 715 14 is_stmt 0 view .LVU762
 2496 009e 4768     		ldr	r7, [r0, #4]
 2497              	.LVL187:
 716:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 2498              		.loc 1 716 9 is_stmt 1 view .LVU763
 716:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 2499              		.loc 1 716 14 is_stmt 0 view .LVU764
 2500 00a0 27EA0A0A 		bic	r10, r7, r10
 2501              	.LVL188:
 717:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2502              		.loc 1 717 9 is_stmt 1 view .LVU765
 717:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2503              		.loc 1 717 56 is_stmt 0 view .LVU766
 2504 00a4 C5F30017 		ubfx	r7, r5, #4, #1
 717:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2505              		.loc 1 717 63 view .LVU767
 2506 00a8 9F40     		lsls	r7, r7, r3
 717:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2507              		.loc 1 717 14 view .LVU768
 2508 00aa 47EA0A07 		orr	r7, r7, r10
 2509              	.LVL189:
 718:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2510              		.loc 1 718 9 is_stmt 1 view .LVU769
 718:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2511              		.loc 1 718 23 is_stmt 0 view .LVU770
 2512 00ae 4760     		str	r7, [r0, #4]
 2513              	.LVL190:
 2514              	.L166:
 722:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 2515              		.loc 1 722 7 is_stmt 1 view .LVU771
 722:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 2516              		.loc 1 722 12 is_stmt 0 view .LVU772
 2517 00b0 C768     		ldr	r7, [r0, #12]
 2518              	.LVL191:
 723:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2519              		.loc 1 723 7 is_stmt 1 view .LVU773
 723:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2520              		.loc 1 723 12 is_stmt 0 view .LVU774
 2521 00b2 3740     		ands	r7, r7, r6
 2522              	.LVL192:
 724:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2523              		.loc 1 724 7 is_stmt 1 view .LVU775
 724:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2524              		.loc 1 724 34 is_stmt 0 view .LVU776
 2525 00b4 8E68     		ldr	r6, [r1, #8]
 2526 00b6 06FA0CF6 		lsl	r6, r6, ip
 724:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2527              		.loc 1 724 12 view .LVU777
 2528 00ba 3E43     		orrs	r6, r6, r7
 2529              	.LVL193:
 725:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2530              		.loc 1 725 7 is_stmt 1 view .LVU778
 725:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2531              		.loc 1 725 20 is_stmt 0 view .LVU779
 2532 00bc C660     		str	r6, [r0, #12]
 729:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2533              		.loc 1 729 7 is_stmt 1 view .LVU780
 729:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2534              		.loc 1 729 9 is_stmt 0 view .LVU781
 2535 00be EE00     		lsls	r6, r5, #3
 2536              	.LVL194:
 729:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 2537              		.loc 1 729 9 view .LVU782
 2538 00c0 51D5     		bpl	.L164
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2539              		.loc 1 732 9 is_stmt 1 view .LVU783
 2540              	.LBB303:
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2541              		.loc 1 732 9 view .LVU784
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2542              		.loc 1 732 9 view .LVU785
 2543 00c2 D8F81860 		ldr	r6, [r8, #24]
 2544 00c6 46F00106 		orr	r6, r6, #1
 2545 00ca C8F81860 		str	r6, [r8, #24]
 2546              	.LVL195:
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2547              		.loc 1 732 9 view .LVU786
 2548 00ce D8F81860 		ldr	r6, [r8, #24]
 2549 00d2 23F00307 		bic	r7, r3, #3
 2550 00d6 07F18047 		add	r7, r7, #1073741824
 2551 00da 06F00106 		and	r6, r6, #1
 2552 00de 07F58037 		add	r7, r7, #65536
 2553 00e2 0196     		str	r6, [sp, #4]
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2554              		.loc 1 732 9 view .LVU787
 2555              	.LBE303:
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2556              		.loc 1 735 46 is_stmt 0 view .LVU788
 2557 00e4 03F0030E 		and	lr, r3, #3
 2558              	.LBB304:
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2559              		.loc 1 732 9 view .LVU789
 2560 00e8 019E     		ldr	r6, [sp, #4]
 2561              	.LBE304:
 732:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2562              		.loc 1 732 9 is_stmt 1 view .LVU790
 734:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 2563              		.loc 1 734 9 view .LVU791
 734:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 2564              		.loc 1 734 14 is_stmt 0 view .LVU792
 2565 00ea BE68     		ldr	r6, [r7, #8]
 2566              	.LVL196:
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2567              		.loc 1 735 9 is_stmt 1 view .LVU793
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2568              		.loc 1 735 34 is_stmt 0 view .LVU794
 2569 00ec 4FEA8E0E 		lsl	lr, lr, #2
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2570              		.loc 1 735 27 view .LVU795
 2571 00f0 4FF00F0C 		mov	ip, #15
 2572 00f4 0CFA0EFC 		lsl	ip, ip, lr
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2573              		.loc 1 736 18 view .LVU796
 2574 00f8 B0F1904F 		cmp	r0, #1207959552
 735:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2575              		.loc 1 735 14 view .LVU797
 2576 00fc 26EA0C0C 		bic	ip, r6, ip
 2577              	.LVL197:
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2578              		.loc 1 736 9 is_stmt 1 view .LVU798
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2579              		.loc 1 736 18 is_stmt 0 view .LVU799
 2580 0100 33D0     		beq	.L178
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2581              		.loc 1 736 18 discriminator 1 view .LVU800
 2582 0102 1F4E     		ldr	r6, .L186+4
 2583 0104 B042     		cmp	r0, r6
 2584 0106 32D0     		beq	.L179
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2585              		.loc 1 736 18 discriminator 3 view .LVU801
 2586 0108 06F58066 		add	r6, r6, #1024
 2587 010c B042     		cmp	r0, r6
 2588 010e 30D0     		beq	.L180
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2589              		.loc 1 736 18 discriminator 5 view .LVU802
 2590 0110 06F58066 		add	r6, r6, #1024
 2591 0114 B042     		cmp	r0, r6
 2592 0116 2ED0     		beq	.L181
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2593              		.loc 1 736 18 discriminator 7 view .LVU803
 2594 0118 06F58066 		add	r6, r6, #1024
 2595 011c B042     		cmp	r0, r6
 2596 011e 0CBF     		ite	eq
 2597 0120 0426     		moveq	r6, #4
 2598 0122 0526     		movne	r6, #5
 2599              	.L168:
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2600              		.loc 1 736 40 discriminator 20 view .LVU804
 2601 0124 06FA0EF6 		lsl	r6, r6, lr
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2602              		.loc 1 736 14 discriminator 20 view .LVU805
 2603 0128 46EA0C06 		orr	r6, r6, ip
 2604              	.LVL198:
 737:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2605              		.loc 1 737 9 is_stmt 1 discriminator 20 view .LVU806
 737:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2606              		.loc 1 737 39 is_stmt 0 discriminator 20 view .LVU807
 2607 012c BE60     		str	r6, [r7, #8]
 740:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2608              		.loc 1 740 9 is_stmt 1 discriminator 20 view .LVU808
 740:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2609              		.loc 1 740 14 is_stmt 0 discriminator 20 view .LVU809
 2610 012e 2668     		ldr	r6, [r4]
 2611              	.LVL199:
 741:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2612              		.loc 1 741 9 is_stmt 1 discriminator 20 view .LVU810
 741:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2613              		.loc 1 741 17 is_stmt 0 discriminator 20 view .LVU811
 2614 0130 D743     		mvns	r7, r2
 2615              	.LVL200:
 742:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2616              		.loc 1 742 9 is_stmt 1 discriminator 20 view .LVU812
 742:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2617              		.loc 1 742 11 is_stmt 0 discriminator 20 view .LVU813
 2618 0132 15F4803F 		tst	r5, #65536
 741:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2619              		.loc 1 741 14 discriminator 20 view .LVU814
 2620 0136 0CBF     		ite	eq
 2621 0138 3E40     		andeq	r6, r6, r7
 2622              	.LVL201:
 744:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2623              		.loc 1 744 11 is_stmt 1 discriminator 20 view .LVU815
 744:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2624              		.loc 1 744 16 is_stmt 0 discriminator 20 view .LVU816
 2625 013a 1643     		orrne	r6, r6, r2
 2626              	.LVL202:
 746:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2627              		.loc 1 746 9 is_stmt 1 discriminator 20 view .LVU817
 746:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2628              		.loc 1 746 19 is_stmt 0 discriminator 20 view .LVU818
 2629 013c 2660     		str	r6, [r4]
 748:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2630              		.loc 1 748 9 is_stmt 1 discriminator 20 view .LVU819
 748:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2631              		.loc 1 748 14 is_stmt 0 discriminator 20 view .LVU820
 2632 013e 6668     		ldr	r6, [r4, #4]
 2633              	.LVL203:
 749:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2634              		.loc 1 749 9 is_stmt 1 discriminator 20 view .LVU821
 750:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2635              		.loc 1 750 9 discriminator 20 view .LVU822
 750:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2636              		.loc 1 750 11 is_stmt 0 discriminator 20 view .LVU823
 2637 0140 15F4003F 		tst	r5, #131072
 749:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2638              		.loc 1 749 14 discriminator 20 view .LVU824
 2639 0144 0CBF     		ite	eq
 2640 0146 3E40     		andeq	r6, r6, r7
 2641              	.LVL204:
 752:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2642              		.loc 1 752 11 is_stmt 1 discriminator 20 view .LVU825
 752:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2643              		.loc 1 752 16 is_stmt 0 discriminator 20 view .LVU826
 2644 0148 1643     		orrne	r6, r6, r2
 2645              	.LVL205:
 754:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2646              		.loc 1 754 9 is_stmt 1 discriminator 20 view .LVU827
 754:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2647              		.loc 1 754 19 is_stmt 0 discriminator 20 view .LVU828
 2648 014a 6660     		str	r6, [r4, #4]
 757:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2649              		.loc 1 757 9 is_stmt 1 discriminator 20 view .LVU829
 757:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2650              		.loc 1 757 14 is_stmt 0 discriminator 20 view .LVU830
 2651 014c A668     		ldr	r6, [r4, #8]
 2652              	.LVL206:
 758:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2653              		.loc 1 758 9 is_stmt 1 discriminator 20 view .LVU831
 759:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2654              		.loc 1 759 9 discriminator 20 view .LVU832
 759:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2655              		.loc 1 759 11 is_stmt 0 discriminator 20 view .LVU833
 2656 014e 15F4801F 		tst	r5, #1048576
 758:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2657              		.loc 1 758 14 discriminator 20 view .LVU834
 2658 0152 0CBF     		ite	eq
 2659 0154 3E40     		andeq	r6, r6, r7
 2660              	.LVL207:
 761:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2661              		.loc 1 761 11 is_stmt 1 discriminator 20 view .LVU835
 761:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2662              		.loc 1 761 16 is_stmt 0 discriminator 20 view .LVU836
 2663 0156 1643     		orrne	r6, r6, r2
 2664              	.LVL208:
 763:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2665              		.loc 1 763 9 is_stmt 1 discriminator 20 view .LVU837
 763:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2666              		.loc 1 763 20 is_stmt 0 discriminator 20 view .LVU838
 2667 0158 A660     		str	r6, [r4, #8]
 765:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2668              		.loc 1 765 9 is_stmt 1 discriminator 20 view .LVU839
 765:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2669              		.loc 1 765 14 is_stmt 0 discriminator 20 view .LVU840
 2670 015a E668     		ldr	r6, [r4, #12]
 2671              	.LVL209:
 766:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2672              		.loc 1 766 9 is_stmt 1 discriminator 20 view .LVU841
 767:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2673              		.loc 1 767 9 discriminator 20 view .LVU842
 767:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         {
 2674              		.loc 1 767 11 is_stmt 0 discriminator 20 view .LVU843
 2675 015c AD02     		lsls	r5, r5, #10
 766:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2676              		.loc 1 766 14 discriminator 20 view .LVU844
 2677 015e 54BF     		ite	pl
 2678 0160 3E40     		andpl	r6, r6, r7
 2679              	.LVL210:
 769:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2680              		.loc 1 769 11 is_stmt 1 discriminator 20 view .LVU845
 769:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         }
 2681              		.loc 1 769 16 is_stmt 0 discriminator 20 view .LVU846
 2682 0162 1643     		orrmi	r6, r6, r2
 2683              	.LVL211:
 771:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2684              		.loc 1 771 9 is_stmt 1 discriminator 20 view .LVU847
 771:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 2685              		.loc 1 771 20 is_stmt 0 discriminator 20 view .LVU848
 2686 0164 E660     		str	r6, [r4, #12]
 2687              	.LVL212:
 2688              	.L164:
 775:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2689              		.loc 1 775 5 is_stmt 1 view .LVU849
 775:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2690              		.loc 1 775 13 is_stmt 0 view .LVU850
 2691 0166 0133     		adds	r3, r3, #1
 2692              	.LVL213:
 775:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2693              		.loc 1 775 13 view .LVU851
 2694 0168 52E7     		b	.L162
 2695              	.LVL214:
 2696              	.L178:
 736:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2697              		.loc 1 736 18 view .LVU852
 2698 016a 0026     		movs	r6, #0
 2699 016c DAE7     		b	.L168
 2700              	.L179:
 2701 016e 0126     		movs	r6, #1
 2702 0170 D8E7     		b	.L168
 2703              	.L180:
 2704 0172 0226     		movs	r6, #2
 2705 0174 D6E7     		b	.L168
 2706              	.L181:
 2707 0176 0326     		movs	r6, #3
 2708 0178 D4E7     		b	.L168
 2709              	.L187:
 2710 017a 00BF     		.align	2
 2711              	.L186:
 2712 017c 00040140 		.word	1073808384
 2713 0180 00040048 		.word	1207960576
 2714 0184 00100240 		.word	1073876992
 2715              		.cfi_endproc
 2716              	.LFE135:
 2718              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2719              		.align	1
 2720              		.global	HAL_GPIO_WritePin
 2721              		.syntax unified
 2722              		.thumb
 2723              		.thumb_func
 2724              		.fpu softvfp
 2726              	HAL_GPIO_WritePin:
 2727              	.LVL215:
 2728              	.LFB136:
 778:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 779:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 780:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
 781:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
 782:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
 783:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 784:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         the read and the modify access.
 785:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *
 786:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F3 family
 787:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 788:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         This parameter can be one of GPIO_PIN_x where x can be (0..15).
 789:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
 790:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *         This parameter can be one of the GPIO_PinState enum values:
 791:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 792:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 793:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval None
 794:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 795:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 796:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 2729              		.loc 1 796 1 is_stmt 1 view -0
 2730              		.cfi_startproc
 2731              		@ args = 0, pretend = 0, frame = 0
 2732              		@ frame_needed = 0, uses_anonymous_args = 0
 2733              		@ link register save eliminated.
 797:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 798:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 2734              		.loc 1 798 3 view .LVU854
 799:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2735              		.loc 1 799 3 view .LVU855
 800:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 801:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(PinState != GPIO_PIN_RESET)
 2736              		.loc 1 801 3 view .LVU856
 2737              		.loc 1 801 5 is_stmt 0 view .LVU857
 2738 0000 0AB1     		cbz	r2, .L189
 802:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 803:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 2739              		.loc 1 803 5 is_stmt 1 view .LVU858
 2740              		.loc 1 803 17 is_stmt 0 view .LVU859
 2741 0002 8161     		str	r1, [r0, #24]
 2742 0004 7047     		bx	lr
 2743              	.L189:
 804:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 805:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   else
 806:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 807:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
 2744              		.loc 1 807 5 is_stmt 1 view .LVU860
 2745              		.loc 1 807 16 is_stmt 0 view .LVU861
 2746 0006 8162     		str	r1, [r0, #40]
 808:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 809:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 2747              		.loc 1 809 1 view .LVU862
 2748 0008 7047     		bx	lr
 2749              		.cfi_endproc
 2750              	.LFE136:
 2752              		.section	.text.UART_SetConfig,"ax",%progbits
 2753              		.align	1
 2754              		.global	UART_SetConfig
 2755              		.syntax unified
 2756              		.thumb
 2757              		.thumb_func
 2758              		.fpu softvfp
 2760              	UART_SetConfig:
 2761              	.LVL216:
 2762              	.LFB137:
 810:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 811:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 812:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 813:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Configure the UART peripheral.
 814:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
 815:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 816:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 817:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
 818:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 2763              		.loc 1 818 1 is_stmt 1 view -0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 0
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 819:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2767              		.loc 1 819 3 view .LVU864
 820:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 2768              		.loc 1 820 3 view .LVU865
 821:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 2769              		.loc 1 821 3 view .LVU866
 822:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 2770              		.loc 1 822 3 view .LVU867
 823:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2771              		.loc 1 823 3 view .LVU868
 824:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 825:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 826:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 2772              		.loc 1 826 3 view .LVU869
 827:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2773              		.loc 1 827 3 view .LVU870
 828:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2774              		.loc 1 828 3 view .LVU871
 829:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2775              		.loc 1 829 3 view .LVU872
 830:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2776              		.loc 1 830 3 view .LVU873
 831:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2777              		.loc 1 831 3 view .LVU874
 832:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2778              		.loc 1 832 3 view .LVU875
 833:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2779              		.loc 1 833 3 view .LVU876
 834:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 835:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 836:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
 837:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
 838:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
 839:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
 840:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
 841:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
 842:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2780              		.loc 1 843 3 view .LVU877
 844:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2781              		.loc 1 844 3 is_stmt 0 view .LVU878
 2782 0000 0268     		ldr	r2, [r0]
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2783              		.loc 1 843 45 view .LVU879
 2784 0002 8168     		ldr	r1, [r0, #8]
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2785              		.loc 1 843 98 view .LVU880
 2786 0004 C369     		ldr	r3, [r0, #28]
 2787              	.LVL217:
 2788              		.loc 1 844 3 is_stmt 1 view .LVU881
 818:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2789              		.loc 1 818 1 is_stmt 0 view .LVU882
 2790 0006 30B5     		push	{r4, r5, lr}
 2791              	.LCFI8:
 2792              		.cfi_def_cfa_offset 12
 2793              		.cfi_offset 4, -12
 2794              		.cfi_offset 5, -8
 2795              		.cfi_offset 14, -4
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2796              		.loc 1 843 45 view .LVU883
 2797 0008 0569     		ldr	r5, [r0, #16]
 2798              		.loc 1 844 3 view .LVU884
 2799 000a 1468     		ldr	r4, [r2]
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2800              		.loc 1 843 45 view .LVU885
 2801 000c 2943     		orrs	r1, r1, r5
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2802              		.loc 1 843 66 view .LVU886
 2803 000e 4569     		ldr	r5, [r0, #20]
 2804              		.loc 1 844 3 view .LVU887
 2805 0010 24F41644 		bic	r4, r4, #38400
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2806              		.loc 1 843 66 view .LVU888
 2807 0014 2943     		orrs	r1, r1, r5
 2808              		.loc 1 844 3 view .LVU889
 2809 0016 24F00C04 		bic	r4, r4, #12
 843:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2810              		.loc 1 843 10 view .LVU890
 2811 001a 1943     		orrs	r1, r1, r3
 2812              		.loc 1 844 3 view .LVU891
 2813 001c 2143     		orrs	r1, r1, r4
 2814 001e 1160     		str	r1, [r2]
 845:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 846:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
 847:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
 848:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    * to huart->Init.StopBits value */
 849:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2815              		.loc 1 849 3 is_stmt 1 view .LVU892
 2816 0020 5168     		ldr	r1, [r2, #4]
 2817 0022 C468     		ldr	r4, [r0, #12]
 850:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 851:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
 852:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure
 853:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
 854:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
 855:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
 856:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
 857:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2818              		.loc 1 857 10 is_stmt 0 view .LVU893
 2819 0024 056A     		ldr	r5, [r0, #32]
 849:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2820              		.loc 1 849 3 view .LVU894
 2821 0026 21F44051 		bic	r1, r1, #12288
 2822 002a 2143     		orrs	r1, r1, r4
 2823 002c 5160     		str	r1, [r2, #4]
 2824              		.loc 1 857 3 is_stmt 1 view .LVU895
 2825              	.LVL218:
 858:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2826              		.loc 1 858 3 view .LVU896
 2827 002e 9468     		ldr	r4, [r2, #8]
 857:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2828              		.loc 1 857 10 is_stmt 0 view .LVU897
 2829 0030 8169     		ldr	r1, [r0, #24]
 2830              		.loc 1 858 3 view .LVU898
 2831 0032 24F43064 		bic	r4, r4, #2816
 857:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2832              		.loc 1 857 10 view .LVU899
 2833 0036 2943     		orrs	r1, r1, r5
 2834              		.loc 1 858 3 view .LVU900
 2835 0038 2143     		orrs	r1, r1, r4
 2836 003a 9160     		str	r1, [r2, #8]
 859:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 860:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2837              		.loc 1 861 3 is_stmt 1 view .LVU901
 2838              		.loc 1 861 3 view .LVU902
 2839 003c 6249     		ldr	r1, .L325
 2840 003e 8A42     		cmp	r2, r1
 2841 0040 16D1     		bne	.L192
 2842              		.loc 1 861 3 discriminator 1 view .LVU903
 2843 0042 01F55841 		add	r1, r1, #55296
 2844 0046 096B     		ldr	r1, [r1, #48]
 2845 0048 01F00301 		and	r1, r1, #3
 2846 004c 0139     		subs	r1, r1, #1
 2847 004e 0229     		cmp	r1, #2
 2848 0050 00F2B280 		bhi	.L208
 2849 0054 5D4C     		ldr	r4, .L325+4
 862:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 863:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2850              		.loc 1 864 6 is_stmt 0 discriminator 1 view .LVU904
 2851 0056 B3F5004F 		cmp	r3, #32768
 2852 005a 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 2853              	.LVL219:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2854              		.loc 1 861 3 is_stmt 1 discriminator 1 view .LVU905
 2855              		.loc 1 864 3 discriminator 1 view .LVU906
 2856              		.loc 1 864 6 is_stmt 0 discriminator 1 view .LVU907
 2857 005c 77D1     		bne	.L306
 865:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 866:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     switch (clocksource)
 2858              		.loc 1 866 5 is_stmt 1 view .LVU908
 2859 005e 0829     		cmp	r1, #8
 2860 0060 72D8     		bhi	.L230
 2861 0062 DFE801F0 		tbb	[pc, r1]
 2862              	.L215:
 2863 0066 AC       		.byte	(.L216-.L215)/2
 2864 0067 AC       		.byte	(.L216-.L215)/2
 2865 0068 24       		.byte	(.L217-.L215)/2
 2866 0069 71       		.byte	(.L230-.L215)/2
 2867 006a AC       		.byte	(.L216-.L215)/2
 2868 006b 71       		.byte	(.L230-.L215)/2
 2869 006c 71       		.byte	(.L230-.L215)/2
 2870 006d 71       		.byte	(.L230-.L215)/2
 2871 006e A4       		.byte	(.L214-.L215)/2
 2872              	.LVL220:
 2873 006f 00       		.p2align 1
 2874              	.L192:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2875              		.loc 1 861 3 discriminator 2 view .LVU909
 2876 0070 5749     		ldr	r1, .L325+8
 2877 0072 8A42     		cmp	r2, r1
 2878 0074 2CD1     		bne	.L196
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2879              		.loc 1 861 3 discriminator 14 view .LVU910
 2880 0076 01F5E631 		add	r1, r1, #117760
 2881 007a 096B     		ldr	r1, [r1, #48]
 2882 007c 01F44031 		and	r1, r1, #196608
 2883 0080 B1F5003F 		cmp	r1, #131072
 2884 0084 00F09080 		beq	.L206
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2885              		.loc 1 861 3 is_stmt 0 view .LVU911
 2886 0088 0BD8     		bhi	.L198
 2887 008a 0029     		cmp	r1, #0
 2888 008c 00F09480 		beq	.L208
 2889 0090 B1F5803F 		cmp	r1, #65536
 2890              	.L314:
 2891 0094 00F09080 		beq	.L208
 2892              	.L210:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2893              		.loc 1 861 3 is_stmt 1 view .LVU912
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2894              		.loc 1 864 3 view .LVU913
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2895              		.loc 1 864 6 is_stmt 0 view .LVU914
 2896 0098 B3F5004F 		cmp	r3, #32768
 2897 009c 54D0     		beq	.L230
 2898              	.LVL221:
 2899              	.L317:
 867:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 868:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
 869:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 870:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 871:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK2:
 872:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 873:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 874:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
 875:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 876:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 877:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
 878:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 879:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 880:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
 881:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 882:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 883:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 884:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       default:
 885:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         ret = HAL_ERROR;
 886:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 887:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 888:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 889:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
 890:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 891:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 892:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 893:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   else
 894:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 895:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     switch (clocksource)
 896:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 897:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
 898:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 899:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 900:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK2:
 901:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 902:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 903:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
 904:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 905:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 906:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
 907:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 908:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 909:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
 910:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 911:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 912:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 913:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       default:
 914:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         ret = HAL_ERROR;
 2900              		.loc 1 914 13 view .LVU915
 2901 009e 0120     		movs	r0, #1
 2902              	.LVL222:
 915:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 916:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 917:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 918:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 919:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return ret;
 2903              		.loc 1 919 3 is_stmt 1 view .LVU916
 2904              		.loc 1 919 10 is_stmt 0 view .LVU917
 2905 00a0 15E0     		b	.L307
 2906              	.LVL223:
 2907              	.L198:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2908              		.loc 1 861 3 view .LVU918
 2909 00a2 B1F5403F 		cmp	r1, #196608
 2910              	.L316:
 2911 00a6 F7D1     		bne	.L210
 2912              	.LVL224:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2913              		.loc 1 861 3 is_stmt 1 view .LVU919
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2914              		.loc 1 864 3 view .LVU920
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 2915              		.loc 1 864 6 is_stmt 0 view .LVU921
 2916 00a8 B3F5004F 		cmp	r3, #32768
 2917 00ac 66D1     		bne	.L224
 2918              	.LVL225:
 2919              	.L217:
 875:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2920              		.loc 1 875 9 is_stmt 1 view .LVU922
 875:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2921              		.loc 1 875 31 is_stmt 0 view .LVU923
 2922 00ae 4168     		ldr	r1, [r0, #4]
 2923 00b0 4B08     		lsrs	r3, r1, #1
 2924 00b2 03F1F473 		add	r3, r3, #31981568
 2925 00b6 03F59043 		add	r3, r3, #18432
 2926              	.L312:
 881:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2927              		.loc 1 881 31 view .LVU924
 2928 00ba B3FBF1F3 		udiv	r3, r3, r1
 823:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2929              		.loc 1 823 21 view .LVU925
 2930 00be 0020     		movs	r0, #0
 2931              	.LVL226:
 881:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2932              		.loc 1 881 18 view .LVU926
 2933 00c0 9BB2     		uxth	r3, r3
 2934              	.LVL227:
 882:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2935              		.loc 1 882 9 is_stmt 1 view .LVU927
 2936              	.L213:
 889:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2937              		.loc 1 889 5 view .LVU928
 889:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2938              		.loc 1 889 13 is_stmt 0 view .LVU929
 2939 00c2 23F00F01 		bic	r1, r3, #15
 2940              	.LVL228:
 890:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2941              		.loc 1 890 5 is_stmt 1 view .LVU930
 891:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2942              		.loc 1 891 5 view .LVU931
 890:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2943              		.loc 1 890 16 is_stmt 0 view .LVU932
 2944 00c6 C3F34203 		ubfx	r3, r3, #1, #3
 2945              	.LVL229:
 891:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 2946              		.loc 1 891 26 view .LVU933
 2947 00ca 0B43     		orrs	r3, r3, r1
 2948 00cc D360     		str	r3, [r2, #12]
 2949              	.LVL230:
 2950              	.L307:
 920:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 921:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 2951              		.loc 1 921 1 view .LVU934
 2952 00ce 30BD     		pop	{r4, r5, pc}
 2953              	.LVL231:
 2954              	.L196:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2955              		.loc 1 861 3 is_stmt 1 discriminator 15 view .LVU935
 2956 00d0 4049     		ldr	r1, .L325+12
 2957 00d2 8A42     		cmp	r2, r1
 2958 00d4 10D1     		bne	.L203
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2959              		.loc 1 861 3 discriminator 27 view .LVU936
 2960 00d6 01F5E431 		add	r1, r1, #116736
 2961 00da 096B     		ldr	r1, [r1, #48]
 2962 00dc 01F44021 		and	r1, r1, #786432
 2963 00e0 B1F5002F 		cmp	r1, #524288
 2964 00e4 60D0     		beq	.L206
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2965              		.loc 1 861 3 is_stmt 0 view .LVU937
 2966 00e6 04D8     		bhi	.L204
 2967 00e8 0029     		cmp	r1, #0
 2968 00ea 65D0     		beq	.L208
 2969 00ec B1F5802F 		cmp	r1, #262144
 2970 00f0 D0E7     		b	.L314
 2971              	.L204:
 2972 00f2 B1F5402F 		cmp	r1, #786432
 2973 00f6 D6E7     		b	.L316
 2974              	.L203:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2975              		.loc 1 861 3 is_stmt 1 discriminator 28 view .LVU938
 2976 00f8 3749     		ldr	r1, .L325+16
 2977 00fa 8A42     		cmp	r2, r1
 2978 00fc 10D1     		bne	.L205
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2979              		.loc 1 861 3 discriminator 40 view .LVU939
 2980 00fe 01F5E231 		add	r1, r1, #115712
 2981 0102 096B     		ldr	r1, [r1, #48]
 2982 0104 01F44011 		and	r1, r1, #3145728
 2983 0108 B1F5001F 		cmp	r1, #2097152
 2984 010c 4CD0     		beq	.L206
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2985              		.loc 1 861 3 is_stmt 0 view .LVU940
 2986 010e 04D8     		bhi	.L207
 2987 0110 0029     		cmp	r1, #0
 2988 0112 51D0     		beq	.L208
 2989 0114 B1F5801F 		cmp	r1, #1048576
 2990 0118 BCE7     		b	.L314
 2991              	.L207:
 2992 011a B1F5401F 		cmp	r1, #3145728
 2993 011e C2E7     		b	.L316
 2994              	.L205:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2995              		.loc 1 861 3 is_stmt 1 discriminator 41 view .LVU941
 2996 0120 2E49     		ldr	r1, .L325+20
 2997 0122 8A42     		cmp	r2, r1
 2998 0124 B8D1     		bne	.L210
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 2999              		.loc 1 861 3 discriminator 53 view .LVU942
 3000 0126 01F5E031 		add	r1, r1, #114688
 3001 012a 096B     		ldr	r1, [r1, #48]
 3002 012c 01F44001 		and	r1, r1, #12582912
 3003 0130 B1F5000F 		cmp	r1, #8388608
 3004 0134 38D0     		beq	.L206
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3005              		.loc 1 861 3 is_stmt 0 view .LVU943
 3006 0136 04D8     		bhi	.L212
 3007 0138 0029     		cmp	r1, #0
 3008 013a 3DD0     		beq	.L208
 3009 013c B1F5800F 		cmp	r1, #4194304
 3010 0140 A8E7     		b	.L314
 3011              	.L212:
 3012 0142 B1F5400F 		cmp	r1, #12582912
 3013 0146 AEE7     		b	.L316
 3014              	.LVL232:
 3015              	.L230:
 885:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3016              		.loc 1 885 13 view .LVU944
 3017 0148 0120     		movs	r0, #1
 3018              	.LVL233:
 822:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3019              		.loc 1 822 12 view .LVU945
 3020 014a 0023     		movs	r3, #0
 3021 014c B9E7     		b	.L213
 3022              	.LVL234:
 3023              	.L306:
 895:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3024              		.loc 1 895 5 is_stmt 1 view .LVU946
 3025 014e 0829     		cmp	r1, #8
 3026 0150 A5D8     		bhi	.L317
 3027 0152 01A3     		adr	r3, .L222
 3028 0154 53F821F0 		ldr	pc, [r3, r1, lsl #2]
 3029              		.p2align 2
 3030              	.L222:
 3031 0158 95010000 		.word	.L223+1
 3032 015c 95010000 		.word	.L223+1
 3033 0160 7D010000 		.word	.L224+1
 3034 0164 9F000000 		.word	.L317+1
 3035 0168 95010000 		.word	.L223+1
 3036 016c 9F000000 		.word	.L317+1
 3037 0170 9F000000 		.word	.L317+1
 3038 0174 9F000000 		.word	.L317+1
 3039 0178 9F010000 		.word	.L221+1
 3040              	.LVL235:
 3041              		.p2align 1
 3042              	.L224:
 904:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3043              		.loc 1 904 9 view .LVU947
 904:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3044              		.loc 1 904 43 is_stmt 0 view .LVU948
 3045 017c 4168     		ldr	r1, [r0, #4]
 3046 017e 4B08     		lsrs	r3, r1, #1
 3047 0180 03F57403 		add	r3, r3, #15990784
 3048 0184 03F51053 		add	r3, r3, #9216
 3049              	.L318:
 910:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3050              		.loc 1 910 43 view .LVU949
 3051 0188 B3FBF1F3 		udiv	r3, r3, r1
 3052 018c 9BB2     		uxth	r3, r3
 910:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3053              		.loc 1 910 30 view .LVU950
 3054 018e D360     		str	r3, [r2, #12]
 3055              	.LVL236:
 911:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3056              		.loc 1 911 9 is_stmt 1 view .LVU951
 823:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3057              		.loc 1 823 21 is_stmt 0 view .LVU952
 3058 0190 0020     		movs	r0, #0
 3059              	.LVL237:
 911:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3060              		.loc 1 911 9 view .LVU953
 3061 0192 9CE7     		b	.L307
 3062              	.LVL238:
 3063              	.L223:
 907:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3064              		.loc 1 907 9 is_stmt 1 view .LVU954
 108:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3065              		.loc 1 108 2 view .LVU955
 907:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3066              		.loc 1 907 43 is_stmt 0 view .LVU956
 3067 0194 4168     		ldr	r1, [r0, #4]
 3068 0196 4B08     		lsrs	r3, r1, #1
 3069 0198 03F5E103 		add	r3, r3, #7372800
 3070 019c F4E7     		b	.L318
 3071              	.L221:
 910:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3072              		.loc 1 910 9 is_stmt 1 view .LVU957
 910:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3073              		.loc 1 910 43 is_stmt 0 view .LVU958
 3074 019e 4168     		ldr	r1, [r0, #4]
 3075 01a0 4B08     		lsrs	r3, r1, #1
 3076 01a2 03F50043 		add	r3, r3, #32768
 3077 01a6 EFE7     		b	.L318
 3078              	.LVL239:
 3079              	.L206:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3080              		.loc 1 861 3 is_stmt 1 view .LVU959
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3081              		.loc 1 864 3 view .LVU960
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3082              		.loc 1 864 6 is_stmt 0 view .LVU961
 3083 01a8 B3F5004F 		cmp	r3, #32768
 3084 01ac F7D1     		bne	.L221
 3085              	.LVL240:
 3086              	.L214:
 881:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3087              		.loc 1 881 9 is_stmt 1 view .LVU962
 881:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3088              		.loc 1 881 31 is_stmt 0 view .LVU963
 3089 01ae 4168     		ldr	r1, [r0, #4]
 3090 01b0 4B08     		lsrs	r3, r1, #1
 3091 01b2 03F58033 		add	r3, r3, #65536
 3092 01b6 80E7     		b	.L312
 3093              	.LVL241:
 3094              	.L208:
 861:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3095              		.loc 1 861 3 is_stmt 1 view .LVU964
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3096              		.loc 1 864 3 view .LVU965
 864:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3097              		.loc 1 864 6 is_stmt 0 view .LVU966
 3098 01b8 B3F5004F 		cmp	r3, #32768
 3099 01bc EAD1     		bne	.L223
 3100              	.LVL242:
 3101              	.L216:
 878:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3102              		.loc 1 878 9 is_stmt 1 view .LVU967
 108:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3103              		.loc 1 108 2 view .LVU968
 878:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         break;
 3104              		.loc 1 878 31 is_stmt 0 view .LVU969
 3105 01be 4168     		ldr	r1, [r0, #4]
 3106 01c0 4B08     		lsrs	r3, r1, #1
 3107 01c2 03F56103 		add	r3, r3, #14745600
 3108 01c6 78E7     		b	.L312
 3109              	.L326:
 3110              		.align	2
 3111              	.L325:
 3112 01c8 00380140 		.word	1073821696
 3113 01cc 00000000 		.word	.LANCHOR1
 3114 01d0 00440040 		.word	1073759232
 3115 01d4 00480040 		.word	1073760256
 3116 01d8 004C0040 		.word	1073761280
 3117 01dc 00500040 		.word	1073762304
 3118              		.cfi_endproc
 3119              	.LFE137:
 3121              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3122              		.align	1
 3123              		.global	UART_WaitOnFlagUntilTimeout
 3124              		.syntax unified
 3125              		.thumb
 3126              		.thumb_func
 3127              		.fpu softvfp
 3129              	UART_WaitOnFlagUntilTimeout:
 3130              	.LVL243:
 3131              	.LFB140:
 922:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 923:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 924:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 925:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Check the UART Idle State.
 926:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart UART handle.
 927:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 928:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 929:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
 930:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 931:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 932:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 933:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
 934:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 935:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 936:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
 937:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   tickstart = HAL_GetTick();
 938:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 939:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check if the Transmitter is enabled */
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 941:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 942:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Wait until TEACK flag is set */
 943:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 944:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 945:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Timeout Occured */
 946:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
 947:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 948:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 949:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check if the Receiver is enabled */
 950:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 951:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 952:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Wait until REACK flag is set */
 953:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 954:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 955:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       /* Timeout Occured */
 956:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
 957:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 958:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 959:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 960:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Initialize the UART State */
 961:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
 962:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 963:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 964:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Process Unlocked */
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
 966:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 967:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 968:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 969:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 970:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 971:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 972:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
 973:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
 974:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 975:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
 976:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 977:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
 978:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 979:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 980:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 981:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(huart == NULL)
 982:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 983:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_ERROR;
 984:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 985:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 986:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 987:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 988:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 989:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 990:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 991:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   else
 992:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 993:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 994:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 995:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 996:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 997:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 998:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 999:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1000:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1001:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1002:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1003:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1004:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1005:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1006:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
1007:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1008:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Disable the Peripheral */
1009:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
1010:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1011:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1012:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
1013:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1014:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_ERROR;
1015:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1016:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1017:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1018:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1019:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1020:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1021:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1022:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1023:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
1024:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
1025:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1026:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1027:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1028:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Enable the Peripheral */
1029:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1030:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1031:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1032:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return UART_CheckIdleState(huart);
1033:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
1034:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1035:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
1036:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1037:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  huart UART handle.
1038:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1039:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1040:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1041:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1042:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1043:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
1044:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1045:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 3132              		.loc 1 1045 1 is_stmt 1 view -0
 3133              		.cfi_startproc
 3134              		@ args = 4, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              		.loc 1 1045 1 is_stmt 0 view .LVU971
 3137 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3138              	.LCFI9:
 3139              		.cfi_def_cfa_offset 24
 3140              		.cfi_offset 3, -24
 3141              		.cfi_offset 4, -20
 3142              		.cfi_offset 5, -16
 3143              		.cfi_offset 6, -12
 3144              		.cfi_offset 7, -8
 3145              		.cfi_offset 14, -4
 3146 0002 069F     		ldr	r7, [sp, #24]
 3147 0004 0446     		mov	r4, r0
 3148 0006 1546     		mov	r5, r2
 3149 0008 1E46     		mov	r6, r3
1046:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Wait until flag is set */
1047:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 3150              		.loc 1 1047 3 is_stmt 1 view .LVU972
 3151              	.LVL244:
 3152              	.L328:
 3153              		.loc 1 1047 10 is_stmt 0 view .LVU973
 3154 000a 2268     		ldr	r2, [r4]
 3155              	.L329:
 3156              		.loc 1 1047 8 is_stmt 1 view .LVU974
 3157              		.loc 1 1047 10 is_stmt 0 view .LVU975
 3158 000c D369     		ldr	r3, [r2, #28]
 3159              		.loc 1 1047 49 view .LVU976
 3160 000e 31EA0303 		bics	r3, r1, r3
 3161 0012 0CBF     		ite	eq
 3162 0014 0123     		moveq	r3, #1
 3163 0016 0023     		movne	r3, #0
 3164              		.loc 1 1047 8 view .LVU977
 3165 0018 AB42     		cmp	r3, r5
 3166 001a 01D0     		beq	.L333
1048:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1049:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Check for the Timeout */
1050:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1051:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
1053:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1054:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1055:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1056:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1057:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1058:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1059:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1060:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1061:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         /* Process Unlocked */
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1063:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1064:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1065:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1066:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1067:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 3167              		.loc 1 1067 10 view .LVU978
 3168 001c 0020     		movs	r0, #0
 3169 001e 14E0     		b	.L331
 3170              	.L333:
1050:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3171              		.loc 1 1050 5 is_stmt 1 view .LVU979
1050:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3172              		.loc 1 1050 7 is_stmt 0 view .LVU980
 3173 0020 7B1C     		adds	r3, r7, #1
 3174 0022 F3D0     		beq	.L329
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3175              		.loc 1 1052 7 is_stmt 1 view .LVU981
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3176              		.loc 1 1052 9 is_stmt 0 view .LVU982
 3177 0024 97B9     		cbnz	r7, .L330
 3178              	.L332:
 3179              	.LVL245:
 3180              	.LBB307:
 3181              	.LBI307:
1044:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 3182              		.loc 1 1044 19 is_stmt 1 view .LVU983
 3183              	.LBB308:
1055:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3184              		.loc 1 1055 9 view .LVU984
 3185 0026 2368     		ldr	r3, [r4]
 3186 0028 1A68     		ldr	r2, [r3]
 3187 002a 22F4D072 		bic	r2, r2, #416
 3188 002e 1A60     		str	r2, [r3]
1056:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3189              		.loc 1 1056 9 view .LVU985
 3190 0030 9A68     		ldr	r2, [r3, #8]
 3191 0032 22F00102 		bic	r2, r2, #1
 3192 0036 9A60     		str	r2, [r3, #8]
1058:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3193              		.loc 1 1058 9 view .LVU986
1058:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3194              		.loc 1 1058 24 is_stmt 0 view .LVU987
 3195 0038 2023     		movs	r3, #32
 3196 003a 84F86930 		strb	r3, [r4, #105]
1059:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3197              		.loc 1 1059 9 is_stmt 1 view .LVU988
1059:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3198              		.loc 1 1059 24 is_stmt 0 view .LVU989
 3199 003e 84F86A30 		strb	r3, [r4, #106]
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3200              		.loc 1 1062 9 is_stmt 1 view .LVU990
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3201              		.loc 1 1062 9 view .LVU991
 3202 0042 0023     		movs	r3, #0
 3203 0044 84F86830 		strb	r3, [r4, #104]
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3204              		.loc 1 1062 9 view .LVU992
1063:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3205              		.loc 1 1063 9 view .LVU993
 3206              	.LVL246:
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3207              		.loc 1 1062 9 is_stmt 0 view .LVU994
 3208 0048 0320     		movs	r0, #3
 3209              	.L331:
1062:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3210              		.loc 1 1062 9 view .LVU995
 3211              	.LBE308:
 3212              	.LBE307:
1068:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3213              		.loc 1 1068 1 view .LVU996
 3214 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3215              	.LVL247:
 3216              	.L330:
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3217              		.loc 1 1052 31 discriminator 1 view .LVU997
 3218 004c FFF7FEFF 		bl	HAL_GetTick
 3219              	.LVL248:
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3220              		.loc 1 1052 44 discriminator 1 view .LVU998
 3221 0050 801B     		subs	r0, r0, r6
1052:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3222              		.loc 1 1052 26 discriminator 1 view .LVU999
 3223 0052 B842     		cmp	r0, r7
 3224 0054 D9D9     		bls	.L328
 3225 0056 E6E7     		b	.L332
 3226              		.cfi_endproc
 3227              	.LFE140:
 3229              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3230              		.align	1
 3231              		.global	UART_CheckIdleState
 3232              		.syntax unified
 3233              		.thumb
 3234              		.thumb_func
 3235              		.fpu softvfp
 3237              	UART_CheckIdleState:
 3238              	.LVL249:
 3239              	.LFB138:
 930:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3240              		.loc 1 930 1 is_stmt 1 view -0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 931:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3244              		.loc 1 931 3 view .LVU1001
 934:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3245              		.loc 1 934 3 view .LVU1002
 930:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3246              		.loc 1 930 1 is_stmt 0 view .LVU1003
 3247 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 3248              	.LCFI10:
 3249              		.cfi_def_cfa_offset 24
 3250              		.cfi_offset 4, -12
 3251              		.cfi_offset 5, -8
 3252              		.cfi_offset 14, -4
 930:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3253              		.loc 1 930 1 view .LVU1004
 3254 0002 0446     		mov	r4, r0
 934:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3255              		.loc 1 934 20 view .LVU1005
 3256 0004 0021     		movs	r1, #0
 3257 0006 C166     		str	r1, [r0, #108]
 937:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3258              		.loc 1 937 3 is_stmt 1 view .LVU1006
 937:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3259              		.loc 1 937 15 is_stmt 0 view .LVU1007
 3260 0008 FFF7FEFF 		bl	HAL_GetTick
 3261              	.LVL250:
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3262              		.loc 1 940 12 view .LVU1008
 3263 000c 2368     		ldr	r3, [r4]
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3264              		.loc 1 940 22 view .LVU1009
 3265 000e 1B68     		ldr	r3, [r3]
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3266              		.loc 1 940 5 view .LVU1010
 3267 0010 1A07     		lsls	r2, r3, #28
 937:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3268              		.loc 1 937 15 view .LVU1011
 3269 0012 0546     		mov	r5, r0
 3270              	.LVL251:
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3271              		.loc 1 940 3 is_stmt 1 view .LVU1012
 940:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3272              		.loc 1 940 5 is_stmt 0 view .LVU1013
 3273 0014 17D4     		bmi	.L337
 3274              	.LVL252:
 3275              	.L340:
 950:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3276              		.loc 1 950 3 is_stmt 1 view .LVU1014
 950:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3277              		.loc 1 950 12 is_stmt 0 view .LVU1015
 3278 0016 2368     		ldr	r3, [r4]
 950:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3279              		.loc 1 950 22 view .LVU1016
 3280 0018 1B68     		ldr	r3, [r3]
 950:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3281              		.loc 1 950 5 view .LVU1017
 3282 001a 5B07     		lsls	r3, r3, #29
 3283 001c 0AD5     		bpl	.L339
 953:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3284              		.loc 1 953 5 is_stmt 1 view .LVU1018
 953:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3285              		.loc 1 953 8 is_stmt 0 view .LVU1019
 3286 001e 6FF07E43 		mvn	r3, #-33554432
 3287 0022 0093     		str	r3, [sp]
 3288 0024 0022     		movs	r2, #0
 3289 0026 2B46     		mov	r3, r5
 3290 0028 4FF48001 		mov	r1, #4194304
 3291 002c 2046     		mov	r0, r4
 3292 002e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3293              	.LVL253:
 953:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3294              		.loc 1 953 7 view .LVU1020
 3295 0032 A0B9     		cbnz	r0, .L342
 3296              	.L339:
 961:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3297              		.loc 1 961 3 is_stmt 1 view .LVU1021
 961:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3298              		.loc 1 961 18 is_stmt 0 view .LVU1022
 3299 0034 2023     		movs	r3, #32
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3300              		.loc 1 965 3 view .LVU1023
 3301 0036 0020     		movs	r0, #0
 961:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3302              		.loc 1 961 18 view .LVU1024
 3303 0038 84F86930 		strb	r3, [r4, #105]
 962:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3304              		.loc 1 962 3 is_stmt 1 view .LVU1025
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3305              		.loc 1 965 3 is_stmt 0 view .LVU1026
 3306 003c 84F86800 		strb	r0, [r4, #104]
 962:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3307              		.loc 1 962 18 view .LVU1027
 3308 0040 84F86A30 		strb	r3, [r4, #106]
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3309              		.loc 1 965 3 is_stmt 1 view .LVU1028
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3310              		.loc 1 965 3 view .LVU1029
 965:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3311              		.loc 1 965 3 view .LVU1030
 967:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3312              		.loc 1 967 3 view .LVU1031
 967:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3313              		.loc 1 967 10 is_stmt 0 view .LVU1032
 3314 0044 0CE0     		b	.L341
 3315              	.LVL254:
 3316              	.L337:
 943:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3317              		.loc 1 943 5 is_stmt 1 view .LVU1033
 943:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3318              		.loc 1 943 8 is_stmt 0 view .LVU1034
 3319 0046 6FF07E43 		mvn	r3, #-33554432
 3320 004a 0093     		str	r3, [sp]
 3321 004c 0A46     		mov	r2, r1
 3322 004e 0346     		mov	r3, r0
 3323 0050 4FF40011 		mov	r1, #2097152
 3324 0054 2046     		mov	r0, r4
 3325              	.LVL255:
 943:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3326              		.loc 1 943 8 view .LVU1035
 3327 0056 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3328              	.LVL256:
 943:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
 3329              		.loc 1 943 7 view .LVU1036
 3330 005a 0028     		cmp	r0, #0
 3331 005c DBD0     		beq	.L340
 3332              	.L342:
 946:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 3333              		.loc 1 946 14 view .LVU1037
 3334 005e 0320     		movs	r0, #3
 3335              	.L341:
 968:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3336              		.loc 1 968 1 view .LVU1038
 3337 0060 03B0     		add	sp, sp, #12
 3338              	.LCFI11:
 3339              		.cfi_def_cfa_offset 12
 3340              		@ sp needed
 3341 0062 30BD     		pop	{r4, r5, pc}
 968:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3342              		.loc 1 968 1 view .LVU1039
 3343              		.cfi_endproc
 3344              	.LFE138:
 3346              		.section	.text.HAL_UART_Init,"ax",%progbits
 3347              		.align	1
 3348              		.global	HAL_UART_Init
 3349              		.syntax unified
 3350              		.thumb
 3351              		.thumb_func
 3352              		.fpu softvfp
 3354              	HAL_UART_Init:
 3355              	.LVL257:
 3356              	.LFB139:
 979:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3357              		.loc 1 979 1 is_stmt 1 view -0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 981:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3361              		.loc 1 981 3 view .LVU1041
 979:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3362              		.loc 1 979 1 is_stmt 0 view .LVU1042
 3363 0000 10B5     		push	{r4, lr}
 3364              	.LCFI12:
 3365              		.cfi_def_cfa_offset 8
 3366              		.cfi_offset 4, -8
 3367              		.cfi_offset 14, -4
 981:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3368              		.loc 1 981 5 view .LVU1043
 3369 0002 0446     		mov	r4, r0
 3370 0004 28B3     		cbz	r0, .L348
 986:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3371              		.loc 1 986 3 is_stmt 1 view .LVU1044
 994:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 3372              		.loc 1 994 5 view .LVU1045
 997:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3373              		.loc 1 997 3 view .LVU1046
 997:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3374              		.loc 1 997 11 is_stmt 0 view .LVU1047
 3375 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 997:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3376              		.loc 1 997 5 view .LVU1048
 3377 000a 03F0FF02 		and	r2, r3, #255
 3378 000e 0BB9     		cbnz	r3, .L349
1000:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3379              		.loc 1 1000 5 is_stmt 1 view .LVU1049
1000:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3380              		.loc 1 1000 17 is_stmt 0 view .LVU1050
 3381 0010 80F86820 		strb	r2, [r0, #104]
 3382              	.L349:
1006:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3383              		.loc 1 1006 3 is_stmt 1 view .LVU1051
1009:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3384              		.loc 1 1009 3 is_stmt 0 view .LVU1052
 3385 0014 2268     		ldr	r2, [r4]
1006:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3386              		.loc 1 1006 17 view .LVU1053
 3387 0016 2423     		movs	r3, #36
 3388 0018 84F86930 		strb	r3, [r4, #105]
1009:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3389              		.loc 1 1009 3 is_stmt 1 view .LVU1054
 3390 001c 1368     		ldr	r3, [r2]
 3391 001e 23F00103 		bic	r3, r3, #1
 3392 0022 1360     		str	r3, [r2]
1012:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3393              		.loc 1 1012 3 view .LVU1055
1012:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3394              		.loc 1 1012 7 is_stmt 0 view .LVU1056
 3395 0024 2046     		mov	r0, r4
 3396              	.LVL258:
1012:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3397              		.loc 1 1012 7 view .LVU1057
 3398 0026 FFF7FEFF 		bl	UART_SetConfig
 3399              	.LVL259:
1012:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3400              		.loc 1 1012 6 view .LVU1058
 3401 002a 0128     		cmp	r0, #1
 3402 002c 11D0     		beq	.L348
1017:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
 3403              		.loc 1 1017 3 is_stmt 1 view .LVU1059
1020:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3404              		.loc 1 1020 3 view .LVU1060
1025:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3405              		.loc 1 1025 3 view .LVU1061
 3406 002e 2368     		ldr	r3, [r4]
 3407 0030 5A68     		ldr	r2, [r3, #4]
 3408 0032 22F49042 		bic	r2, r2, #18432
 3409 0036 5A60     		str	r2, [r3, #4]
1026:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3410              		.loc 1 1026 3 view .LVU1062
 3411 0038 9A68     		ldr	r2, [r3, #8]
 3412 003a 22F02A02 		bic	r2, r2, #42
 3413 003e 9A60     		str	r2, [r3, #8]
1029:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3414              		.loc 1 1029 3 view .LVU1063
 3415 0040 1A68     		ldr	r2, [r3]
 3416 0042 42F00102 		orr	r2, r2, #1
1032:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3417              		.loc 1 1032 10 is_stmt 0 view .LVU1064
 3418 0046 2046     		mov	r0, r4
1029:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3419              		.loc 1 1029 3 view .LVU1065
 3420 0048 1A60     		str	r2, [r3]
1032:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3421              		.loc 1 1032 3 is_stmt 1 view .LVU1066
1033:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3422              		.loc 1 1033 1 is_stmt 0 view .LVU1067
 3423 004a BDE81040 		pop	{r4, lr}
 3424              	.LCFI13:
 3425              		.cfi_remember_state
 3426              		.cfi_restore 14
 3427              		.cfi_restore 4
 3428              		.cfi_def_cfa_offset 0
 3429              	.LVL260:
1032:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3430              		.loc 1 1032 10 view .LVU1068
 3431 004e FFF7FEBF 		b	UART_CheckIdleState
 3432              	.LVL261:
 3433              	.L348:
 3434              	.LCFI14:
 3435              		.cfi_restore_state
1033:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3436              		.loc 1 1033 1 view .LVU1069
 3437 0052 0120     		movs	r0, #1
 3438 0054 10BD     		pop	{r4, pc}
1033:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3439              		.loc 1 1033 1 view .LVU1070
 3440              		.cfi_endproc
 3441              	.LFE139:
 3443              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3444              		.align	1
 3445              		.global	HAL_UART_Transmit
 3446              		.syntax unified
 3447              		.thumb
 3448              		.thumb_func
 3449              		.fpu softvfp
 3451              	HAL_UART_Transmit:
 3452              	.LVL262:
 3453              	.LFB141:
1069:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1070:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1071:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1072:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
1073:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1074:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
1075:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1076:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1077:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1078:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1079:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
1080:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1081:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 3454              		.loc 1 1081 1 is_stmt 1 view -0
 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 0
 3457              		@ frame_needed = 0, uses_anonymous_args = 0
1082:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3458              		.loc 1 1082 3 view .LVU1072
1083:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3459              		.loc 1 1083 3 view .LVU1073
1084:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1085:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1086:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 3460              		.loc 1 1086 3 view .LVU1074
1081:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3461              		.loc 1 1081 1 is_stmt 0 view .LVU1075
 3462 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3463              	.LCFI15:
 3464              		.cfi_def_cfa_offset 32
 3465              		.cfi_offset 4, -20
 3466              		.cfi_offset 5, -16
 3467              		.cfi_offset 6, -12
 3468              		.cfi_offset 7, -8
 3469              		.cfi_offset 14, -4
1081:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3470              		.loc 1 1081 1 view .LVU1076
 3471 0002 1E46     		mov	r6, r3
 3472              		.loc 1 1086 11 view .LVU1077
 3473 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3474              	.LVL263:
 3475              		.loc 1 1086 5 view .LVU1078
 3476 0008 202B     		cmp	r3, #32
1081:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3477              		.loc 1 1081 1 view .LVU1079
 3478 000a 0D46     		mov	r5, r1
 3479 000c 0446     		mov	r4, r0
 3480 000e 1146     		mov	r1, r2
 3481              	.LVL264:
 3482              		.loc 1 1086 5 view .LVU1080
 3483 0010 4AD1     		bne	.L365
1087:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1088:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 3484              		.loc 1 1088 5 is_stmt 1 view .LVU1081
 3485              		.loc 1 1088 7 is_stmt 0 view .LVU1082
 3486 0012 002D     		cmp	r5, #0
 3487 0014 46D0     		beq	.L364
 3488              		.loc 1 1088 25 discriminator 1 view .LVU1083
 3489 0016 002A     		cmp	r2, #0
 3490 0018 44D0     		beq	.L364
1089:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1090:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return  HAL_ERROR;
1091:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1092:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1093:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Locked */
1094:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3491              		.loc 1 1094 5 is_stmt 1 view .LVU1084
 3492              		.loc 1 1094 5 view .LVU1085
 3493 001a 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3494 001e 012B     		cmp	r3, #1
 3495 0020 42D0     		beq	.L365
 3496              		.loc 1 1094 5 discriminator 2 view .LVU1086
 3497 0022 0123     		movs	r3, #1
 3498 0024 80F86830 		strb	r3, [r0, #104]
 3499              		.loc 1 1094 5 discriminator 2 view .LVU1087
1095:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1096:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3500              		.loc 1 1096 5 discriminator 2 view .LVU1088
 3501              		.loc 1 1096 22 is_stmt 0 discriminator 2 view .LVU1089
 3502 0028 0023     		movs	r3, #0
 3503 002a C366     		str	r3, [r0, #108]
1097:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3504              		.loc 1 1097 5 is_stmt 1 discriminator 2 view .LVU1090
 3505              		.loc 1 1097 19 is_stmt 0 discriminator 2 view .LVU1091
 3506 002c 2123     		movs	r3, #33
 3507 002e 80F86930 		strb	r3, [r0, #105]
1098:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1099:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1100:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3508              		.loc 1 1100 5 is_stmt 1 discriminator 2 view .LVU1092
 3509              		.loc 1 1100 17 is_stmt 0 discriminator 2 view .LVU1093
 3510 0032 FFF7FEFF 		bl	HAL_GetTick
 3511              	.LVL265:
 3512              		.loc 1 1100 17 discriminator 2 view .LVU1094
 3513 0036 0746     		mov	r7, r0
 3514              	.LVL266:
1101:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1102:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->TxXferSize = Size;
 3515              		.loc 1 1102 5 is_stmt 1 discriminator 2 view .LVU1095
 3516              		.loc 1 1102 23 is_stmt 0 discriminator 2 view .LVU1096
 3517 0038 A4F85010 		strh	r1, [r4, #80]	@ movhi
1103:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3518              		.loc 1 1103 5 is_stmt 1 discriminator 2 view .LVU1097
 3519              		.loc 1 1103 24 is_stmt 0 discriminator 2 view .LVU1098
 3520 003c A4F85210 		strh	r1, [r4, #82]	@ movhi
1104:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 3521              		.loc 1 1104 5 is_stmt 1 discriminator 2 view .LVU1099
 3522              	.LVL267:
 3523              	.L356:
 3524              		.loc 1 1104 10 view .LVU1100
 3525              		.loc 1 1104 16 is_stmt 0 view .LVU1101
 3526 0040 B4F85220 		ldrh	r2, [r4, #82]
 3527 0044 92B2     		uxth	r2, r2
 3528              		.loc 1 1104 10 view .LVU1102
 3529 0046 62B9     		cbnz	r2, .L360
1105:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1106:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       huart->TxXferCount--;
1107:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1108:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1109:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1110:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1111:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1112:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1113:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1114:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1115:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
1116:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1117:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
1118:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1120:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1121:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1122:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 3530              		.loc 1 1122 5 is_stmt 1 view .LVU1103
 3531              		.loc 1 1122 8 is_stmt 0 view .LVU1104
 3532 0048 0096     		str	r6, [sp]
 3533 004a 3B46     		mov	r3, r7
 3534 004c 4021     		movs	r1, #64
 3535 004e 2046     		mov	r0, r4
 3536 0050 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3537              	.LVL268:
 3538              		.loc 1 1122 7 view .LVU1105
 3539 0054 98B9     		cbnz	r0, .L361
1123:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1124:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
1125:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1126:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1127:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1128:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
 3540              		.loc 1 1128 5 is_stmt 1 view .LVU1106
 3541              		.loc 1 1128 19 is_stmt 0 view .LVU1107
 3542 0056 2023     		movs	r3, #32
 3543 0058 84F86930 		strb	r3, [r4, #105]
1129:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1130:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Unlocked */
1131:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3544              		.loc 1 1131 5 is_stmt 1 view .LVU1108
 3545              		.loc 1 1131 5 view .LVU1109
 3546 005c 84F86800 		strb	r0, [r4, #104]
 3547              		.loc 1 1131 5 view .LVU1110
1132:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1133:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_OK;
 3548              		.loc 1 1133 5 view .LVU1111
 3549              		.loc 1 1133 12 is_stmt 0 view .LVU1112
 3550 0060 0EE0     		b	.L355
 3551              	.L360:
1106:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3552              		.loc 1 1106 7 is_stmt 1 view .LVU1113
1106:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3553              		.loc 1 1106 12 is_stmt 0 view .LVU1114
 3554 0062 B4F85220 		ldrh	r2, [r4, #82]
1107:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3555              		.loc 1 1107 10 view .LVU1115
 3556 0066 0096     		str	r6, [sp]
1106:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3557              		.loc 1 1106 25 view .LVU1116
 3558 0068 013A     		subs	r2, r2, #1
 3559 006a 92B2     		uxth	r2, r2
 3560 006c A4F85220 		strh	r2, [r4, #82]	@ movhi
1107:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3561              		.loc 1 1107 7 is_stmt 1 view .LVU1117
1107:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3562              		.loc 1 1107 10 is_stmt 0 view .LVU1118
 3563 0070 3B46     		mov	r3, r7
 3564 0072 0022     		movs	r2, #0
 3565 0074 8021     		movs	r1, #128
 3566 0076 2046     		mov	r0, r4
 3567 0078 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3568              	.LVL269:
1107:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3569              		.loc 1 1107 9 view .LVU1119
 3570 007c 10B1     		cbz	r0, .L357
 3571              	.L361:
1109:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3572              		.loc 1 1109 16 view .LVU1120
 3573 007e 0320     		movs	r0, #3
 3574              	.LVL270:
 3575              	.L355:
1134:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1135:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   else
1136:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1137:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_BUSY;
1138:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1139:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3576              		.loc 1 1139 1 view .LVU1121
 3577 0080 03B0     		add	sp, sp, #12
 3578              	.LCFI16:
 3579              		.cfi_remember_state
 3580              		.cfi_def_cfa_offset 20
 3581              		@ sp needed
 3582 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 3583              	.LVL271:
 3584              	.L357:
 3585              	.LCFI17:
 3586              		.cfi_restore_state
1111:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3587              		.loc 1 1111 7 is_stmt 1 view .LVU1122
1111:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3588              		.loc 1 1111 10 is_stmt 0 view .LVU1123
 3589 0084 A368     		ldr	r3, [r4, #8]
 3590 0086 2268     		ldr	r2, [r4]
 3591 0088 B3F5805F 		cmp	r3, #4096
 3592 008c 07D1     		bne	.L358
1111:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3593              		.loc 1 1111 58 discriminator 1 view .LVU1124
 3594 008e 2369     		ldr	r3, [r4, #16]
 3595 0090 2BB9     		cbnz	r3, .L358
1113:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3596              		.loc 1 1113 9 is_stmt 1 view .LVU1125
 3597              	.LVL272:
1114:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3598              		.loc 1 1114 9 view .LVU1126
1114:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3599              		.loc 1 1114 38 is_stmt 0 view .LVU1127
 3600 0092 35F8023B 		ldrh	r3, [r5], #2
 3601              	.LVL273:
1114:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3602              		.loc 1 1114 38 view .LVU1128
 3603 0096 C3F30803 		ubfx	r3, r3, #0, #9
 3604              	.LVL274:
 3605              	.L366:
1119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3606              		.loc 1 1119 30 view .LVU1129
 3607 009a 1385     		strh	r3, [r2, #40]	@ movhi
 3608 009c D0E7     		b	.L356
 3609              	.LVL275:
 3610              	.L358:
1119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3611              		.loc 1 1119 9 is_stmt 1 view .LVU1130
1119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3612              		.loc 1 1119 33 is_stmt 0 view .LVU1131
 3613 009e 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 3614              	.LVL276:
1119:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3615              		.loc 1 1119 33 view .LVU1132
 3616 00a2 FAE7     		b	.L366
 3617              	.LVL277:
 3618              	.L364:
1090:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 3619              		.loc 1 1090 15 view .LVU1133
 3620 00a4 0120     		movs	r0, #1
 3621              	.LVL278:
1090:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 3622              		.loc 1 1090 15 view .LVU1134
 3623 00a6 EBE7     		b	.L355
 3624              	.LVL279:
 3625              	.L365:
1137:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 3626              		.loc 1 1137 12 view .LVU1135
 3627 00a8 0220     		movs	r0, #2
 3628              	.LVL280:
1137:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 3629              		.loc 1 1137 12 view .LVU1136
 3630 00aa E9E7     		b	.L355
 3631              		.cfi_endproc
 3632              	.LFE141:
 3634              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3635              		.align	1
 3636              		.global	HAL_UART_Receive
 3637              		.syntax unified
 3638              		.thumb
 3639              		.thumb_func
 3640              		.fpu softvfp
 3642              	HAL_UART_Receive:
 3643              	.LVL281:
 3644              	.LFB142:
1140:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1141:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1142:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1143:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** /**
1144:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1145:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
1146:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1147:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1148:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1149:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1150:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   */
1151:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1152:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** {
 3645              		.loc 1 1152 1 is_stmt 1 view -0
 3646              		.cfi_startproc
 3647              		@ args = 0, pretend = 0, frame = 0
 3648              		@ frame_needed = 0, uses_anonymous_args = 0
1153:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3649              		.loc 1 1153 3 view .LVU1138
1154:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t uhMask;
 3650              		.loc 1 1154 3 view .LVU1139
1155:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3651              		.loc 1 1155 3 view .LVU1140
1156:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1157:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1158:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 3652              		.loc 1 1158 3 view .LVU1141
1152:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3653              		.loc 1 1152 1 is_stmt 0 view .LVU1142
 3654 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3655              	.LCFI18:
 3656              		.cfi_def_cfa_offset 32
 3657              		.cfi_offset 4, -24
 3658              		.cfi_offset 5, -20
 3659              		.cfi_offset 6, -16
 3660              		.cfi_offset 7, -12
 3661              		.cfi_offset 8, -8
 3662              		.cfi_offset 14, -4
1152:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3663              		.loc 1 1152 1 view .LVU1143
 3664 0004 1E46     		mov	r6, r3
 3665              		.loc 1 1158 11 view .LVU1144
 3666 0006 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3667              	.LVL282:
 3668              		.loc 1 1158 5 view .LVU1145
 3669 000a 202B     		cmp	r3, #32
1152:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3670              		.loc 1 1152 1 view .LVU1146
 3671 000c 0D46     		mov	r5, r1
 3672 000e 0446     		mov	r4, r0
 3673 0010 1146     		mov	r1, r2
 3674              	.LVL283:
 3675              		.loc 1 1158 5 view .LVU1147
 3676 0012 5CD1     		bne	.L379
1159:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1160:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 3677              		.loc 1 1160 5 is_stmt 1 view .LVU1148
 3678              		.loc 1 1160 7 is_stmt 0 view .LVU1149
 3679 0014 002D     		cmp	r5, #0
 3680 0016 58D0     		beq	.L378
 3681              		.loc 1 1160 25 discriminator 1 view .LVU1150
 3682 0018 002A     		cmp	r2, #0
 3683 001a 56D0     		beq	.L378
1161:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1162:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       return  HAL_ERROR;
1163:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1164:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1165:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Locked */
1166:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3684              		.loc 1 1166 5 is_stmt 1 view .LVU1151
 3685              		.loc 1 1166 5 view .LVU1152
 3686 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3687 0020 012B     		cmp	r3, #1
 3688 0022 54D0     		beq	.L379
 3689              		.loc 1 1166 5 discriminator 2 view .LVU1153
 3690 0024 0123     		movs	r3, #1
 3691 0026 80F86830 		strb	r3, [r0, #104]
 3692              		.loc 1 1166 5 discriminator 2 view .LVU1154
1167:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1168:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->ICR = 0xFFFFFFFF;
 3693              		.loc 1 1168 5 discriminator 2 view .LVU1155
 3694              		.loc 1 1168 10 is_stmt 0 discriminator 2 view .LVU1156
 3695 002a 0368     		ldr	r3, [r0]
 3696              		.loc 1 1168 26 discriminator 2 view .LVU1157
 3697 002c 4FF0FF32 		mov	r2, #-1
 3698              	.LVL284:
 3699              		.loc 1 1168 26 discriminator 2 view .LVU1158
 3700 0030 1A62     		str	r2, [r3, #32]
1169:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3701              		.loc 1 1169 5 is_stmt 1 discriminator 2 view .LVU1159
 3702              		.loc 1 1169 22 is_stmt 0 discriminator 2 view .LVU1160
 3703 0032 0023     		movs	r3, #0
 3704 0034 C366     		str	r3, [r0, #108]
1170:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3705              		.loc 1 1170 5 is_stmt 1 discriminator 2 view .LVU1161
 3706              		.loc 1 1170 20 is_stmt 0 discriminator 2 view .LVU1162
 3707 0036 2223     		movs	r3, #34
 3708 0038 80F86A30 		strb	r3, [r0, #106]
1171:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1172:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1173:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3709              		.loc 1 1173 5 is_stmt 1 discriminator 2 view .LVU1163
 3710              		.loc 1 1173 17 is_stmt 0 discriminator 2 view .LVU1164
 3711 003c FFF7FEFF 		bl	HAL_GetTick
 3712              	.LVL285:
1174:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1175:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferSize = Size;
1176:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
1177:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1178:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
 3713              		.loc 1 1179 5 discriminator 2 view .LVU1165
 3714 0040 A368     		ldr	r3, [r4, #8]
1175:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3715              		.loc 1 1175 23 discriminator 2 view .LVU1166
 3716 0042 A4F85810 		strh	r1, [r4, #88]	@ movhi
 3717              		.loc 1 1179 5 discriminator 2 view .LVU1167
 3718 0046 B3F5805F 		cmp	r3, #4096
1173:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3719              		.loc 1 1173 17 discriminator 2 view .LVU1168
 3720 004a 8046     		mov	r8, r0
 3721              	.LVL286:
1175:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3722              		.loc 1 1175 5 is_stmt 1 discriminator 2 view .LVU1169
1176:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3723              		.loc 1 1176 5 discriminator 2 view .LVU1170
1176:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
 3724              		.loc 1 1176 24 is_stmt 0 discriminator 2 view .LVU1171
 3725 004c A4F85A10 		strh	r1, [r4, #90]	@ movhi
 3726              		.loc 1 1179 5 is_stmt 1 discriminator 2 view .LVU1172
 3727              		.loc 1 1179 5 discriminator 2 view .LVU1173
 3728 0050 15D1     		bne	.L369
 3729              		.loc 1 1179 5 discriminator 1 view .LVU1174
 3730 0052 2369     		ldr	r3, [r4, #16]
 3731 0054 8BB9     		cbnz	r3, .L370
 3732              		.loc 1 1179 5 discriminator 3 view .LVU1175
 3733 0056 40F2FF13 		movw	r3, #511
 3734              	.L384:
 3735              		.loc 1 1179 5 is_stmt 0 discriminator 8 view .LVU1176
 3736 005a A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3737              	.L371:
 3738              		.loc 1 1179 5 is_stmt 1 discriminator 10 view .LVU1177
1180:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3739              		.loc 1 1180 5 discriminator 10 view .LVU1178
 3740              		.loc 1 1180 12 is_stmt 0 discriminator 10 view .LVU1179
 3741 005e B4F85C70 		ldrh	r7, [r4, #92]
 3742              	.LVL287:
1181:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1182:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* as long as data have to be received */
1183:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
 3743              		.loc 1 1183 5 is_stmt 1 discriminator 10 view .LVU1180
 3744              	.L372:
 3745              		.loc 1 1183 10 view .LVU1181
 3746              		.loc 1 1183 16 is_stmt 0 view .LVU1182
 3747 0062 B4F85A00 		ldrh	r0, [r4, #90]
 3748 0066 80B2     		uxth	r0, r0
 3749              		.loc 1 1183 10 view .LVU1183
 3750 0068 80B9     		cbnz	r0, .L375
1184:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     {
1185:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       huart->RxXferCount--;
1186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1187:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1188:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1189:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1190:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1191:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1192:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1194:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
1195:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1196:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       else
1197:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1199:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
1200:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
1201:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1202:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1203:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
 3751              		.loc 1 1203 5 is_stmt 1 view .LVU1184
 3752              		.loc 1 1203 20 is_stmt 0 view .LVU1185
 3753 006a 2023     		movs	r3, #32
 3754 006c 84F86A30 		strb	r3, [r4, #106]
1204:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1205:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Unlocked */
1206:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3755              		.loc 1 1206 5 is_stmt 1 view .LVU1186
 3756              		.loc 1 1206 5 view .LVU1187
 3757 0070 84F86800 		strb	r0, [r4, #104]
 3758              		.loc 1 1206 5 view .LVU1188
1207:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** 
1208:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_OK;
 3759              		.loc 1 1208 5 view .LVU1189
 3760              	.LVL288:
 3761              	.L368:
1209:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1210:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   else
1211:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   {
1212:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_BUSY;
1213:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
1214:.././hal/stm32f3/stm32f3_hal_lowlevel.c **** }
 3762              		.loc 1 1214 1 is_stmt 0 view .LVU1190
 3763 0074 02B0     		add	sp, sp, #8
 3764              	.LCFI19:
 3765              		.cfi_remember_state
 3766              		.cfi_def_cfa_offset 24
 3767              		@ sp needed
 3768 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3769              	.LVL289:
 3770              	.L370:
 3771              	.LCFI20:
 3772              		.cfi_restore_state
1179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3773              		.loc 1 1179 5 is_stmt 1 discriminator 4 view .LVU1191
 3774 007a FF23     		movs	r3, #255
 3775 007c EDE7     		b	.L384
 3776              	.L369:
1179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3777              		.loc 1 1179 5 discriminator 2 view .LVU1192
 3778 007e 002B     		cmp	r3, #0
 3779 0080 EDD1     		bne	.L371
1179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3780              		.loc 1 1179 5 discriminator 5 view .LVU1193
 3781 0082 2369     		ldr	r3, [r4, #16]
 3782 0084 002B     		cmp	r3, #0
 3783 0086 F8D0     		beq	.L370
1179:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3784              		.loc 1 1179 5 discriminator 8 view .LVU1194
 3785 0088 7F23     		movs	r3, #127
 3786 008a E6E7     		b	.L384
 3787              	.LVL290:
 3788              	.L375:
1185:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3789              		.loc 1 1185 7 view .LVU1195
1185:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3790              		.loc 1 1185 12 is_stmt 0 view .LVU1196
 3791 008c B4F85A20 		ldrh	r2, [r4, #90]
1186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3792              		.loc 1 1186 10 view .LVU1197
 3793 0090 0096     		str	r6, [sp]
1185:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3794              		.loc 1 1185 25 view .LVU1198
 3795 0092 013A     		subs	r2, r2, #1
 3796 0094 92B2     		uxth	r2, r2
 3797 0096 A4F85A20 		strh	r2, [r4, #90]	@ movhi
1186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3798              		.loc 1 1186 7 is_stmt 1 view .LVU1199
1186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3799              		.loc 1 1186 10 is_stmt 0 view .LVU1200
 3800 009a 4346     		mov	r3, r8
 3801 009c 0022     		movs	r2, #0
 3802 009e 2021     		movs	r1, #32
 3803 00a0 2046     		mov	r0, r4
 3804 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3805              	.LVL291:
1186:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3806              		.loc 1 1186 9 view .LVU1201
 3807 00a6 A0B9     		cbnz	r0, .L380
1190:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3808              		.loc 1 1190 7 is_stmt 1 view .LVU1202
1190:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3809              		.loc 1 1190 10 is_stmt 0 view .LVU1203
 3810 00a8 A268     		ldr	r2, [r4, #8]
 3811 00aa 2368     		ldr	r3, [r4]
 3812 00ac B2F5805F 		cmp	r2, #4096
 3813 00b0 06D1     		bne	.L373
1190:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       {
 3814              		.loc 1 1190 58 discriminator 1 view .LVU1204
 3815 00b2 2269     		ldr	r2, [r4, #16]
 3816 00b4 22B9     		cbnz	r2, .L373
1192:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3817              		.loc 1 1192 9 is_stmt 1 view .LVU1205
 3818              	.LVL292:
1193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3819              		.loc 1 1193 9 view .LVU1206
1193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3820              		.loc 1 1193 42 is_stmt 0 view .LVU1207
 3821 00b6 9B8C     		ldrh	r3, [r3, #36]
1193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3822              		.loc 1 1193 16 view .LVU1208
 3823 00b8 3B40     		ands	r3, r3, r7
1193:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3824              		.loc 1 1193 14 view .LVU1209
 3825 00ba 25F8023B 		strh	r3, [r5], #2	@ movhi
 3826              	.LVL293:
1194:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3827              		.loc 1 1194 9 is_stmt 1 view .LVU1210
1194:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3828              		.loc 1 1194 15 is_stmt 0 view .LVU1211
 3829 00be D0E7     		b	.L372
 3830              	.LVL294:
 3831              	.L373:
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3832              		.loc 1 1198 9 is_stmt 1 view .LVU1212
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3833              		.loc 1 1198 45 is_stmt 0 view .LVU1213
 3834 00c0 9B8C     		ldrh	r3, [r3, #36]
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3835              		.loc 1 1198 20 view .LVU1214
 3836 00c2 3B40     		ands	r3, r3, r7
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3837              		.loc 1 1198 18 view .LVU1215
 3838 00c4 05F8013B 		strb	r3, [r5], #1
 3839              	.LVL295:
1198:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3840              		.loc 1 1198 18 view .LVU1216
 3841 00c8 CBE7     		b	.L372
 3842              	.LVL296:
 3843              	.L378:
1162:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 3844              		.loc 1 1162 15 view .LVU1217
 3845 00ca 0120     		movs	r0, #1
 3846              	.LVL297:
1162:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****     }
 3847              		.loc 1 1162 15 view .LVU1218
 3848 00cc D2E7     		b	.L368
 3849              	.LVL298:
 3850              	.L379:
1212:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 3851              		.loc 1 1212 12 view .LVU1219
 3852 00ce 0220     		movs	r0, #2
 3853              	.LVL299:
1212:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****   }
 3854              		.loc 1 1212 12 view .LVU1220
 3855 00d0 D0E7     		b	.L368
 3856              	.LVL300:
 3857              	.L380:
1188:.././hal/stm32f3/stm32f3_hal_lowlevel.c ****       }
 3858              		.loc 1 1188 16 view .LVU1221
 3859 00d2 0320     		movs	r0, #3
 3860 00d4 CEE7     		b	.L368
 3861              		.cfi_endproc
 3862              	.LFE142:
 3864              		.global	SystemCoreClock
 3865              		.global	uwTick
 3866              		.global	hal_sys_tick
 3867              		.section	.rodata
 3868              		.set	.LANCHOR1,. + 0
 3871              	CSWTCH.77:
 3872 0000 04       		.byte	4
 3873 0001 08       		.byte	8
 3874 0002 02       		.byte	2
 3875              		.data
 3876              		.align	2
 3879              	SystemCoreClock:
 3880 0000 00127A00 		.word	8000000
 3881              		.bss
 3882              		.align	2
 3883              		.set	.LANCHOR0,. + 0
 3886              	hal_sys_tick:
 3887 0000 00000000 		.space	4
 3890              	uwTick:
 3891 0004 00000000 		.space	4
 3892              		.text
 3893              	.Letext0:
 3894              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3895              		.file 5 ".././hal/stm32f3/CMSIS/device/stm32f303xc.h"
 3896              		.file 6 ".././hal/stm32f3/CMSIS/device/system_stm32f3xx.h"
 3897              		.file 7 ".././hal/stm32f3/CMSIS/device/stm32f3xx.h"
 3898              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3899              		.file 9 "/usr/include/newlib/sys/_types.h"
 3900              		.file 10 "/usr/include/newlib/sys/reent.h"
 3901              		.file 11 "/usr/include/newlib/sys/lock.h"
 3902              		.file 12 ".././hal/stm32f3/stm32f3xx_hal_def.h"
 3903              		.file 13 ".././hal/stm32f3/stm32f3xx_hal_rcc.h"
 3904              		.file 14 ".././hal/stm32f3/stm32f3xx_hal_gpio.h"
 3905              		.file 15 ".././hal/stm32f3/stm32f3xx_hal_dma.h"
 3906              		.file 16 ".././hal/stm32f3/stm32f3xx_hal_uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3_hal_lowlevel.c
     /tmp/ccIpf7YL.s:16     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccIpf7YL.s:24     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccIpf7YL.s:164    .text.HAL_NVIC_SetPriority:000000000000005c $d
     /tmp/ccIpf7YL.s:170    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccIpf7YL.s:177    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccIpf7YL.s:198    .text.HAL_InitTick:0000000000000008 $d
     /tmp/ccIpf7YL.s:203    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccIpf7YL.s:210    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccIpf7YL.s:228    .text.HAL_GetTick:000000000000000c $d
     /tmp/ccIpf7YL.s:233    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccIpf7YL.s:240    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccIpf7YL.s:253    .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccIpf7YL.s:260    .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccIpf7YL.s:275    .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccIpf7YL.s:282    .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccIpf7YL.s:294    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccIpf7YL.s:301    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccIpf7YL.s:1381   .text.HAL_RCC_OscConfig:0000000000000310 $d
     /tmp/ccIpf7YL.s:1387   .text.HAL_RCC_OscConfig:000000000000031c $t
     /tmp/ccIpf7YL.s:1936   .text.HAL_RCC_OscConfig:00000000000004d4 $d
     /tmp/ccIpf7YL.s:1942   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccIpf7YL.s:1949   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccIpf7YL.s:2306   .text.HAL_RCC_ClockConfig:0000000000000144 $d
     /tmp/ccIpf7YL.s:2312   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccIpf7YL.s:2319   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccIpf7YL.s:2331   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccIpf7YL.s:2338   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccIpf7YL.s:2712   .text.HAL_GPIO_Init:000000000000017c $d
     /tmp/ccIpf7YL.s:2719   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccIpf7YL.s:2726   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccIpf7YL.s:2753   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccIpf7YL.s:2760   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccIpf7YL.s:2863   .text.UART_SetConfig:0000000000000066 $d
     /tmp/ccIpf7YL.s:3031   .text.UART_SetConfig:0000000000000158 $d
     /tmp/ccIpf7YL.s:3041   .text.UART_SetConfig:000000000000017c $t
     /tmp/ccIpf7YL.s:3112   .text.UART_SetConfig:00000000000001c8 $d
     /tmp/ccIpf7YL.s:3122   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccIpf7YL.s:3129   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccIpf7YL.s:3230   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccIpf7YL.s:3237   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccIpf7YL.s:3347   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccIpf7YL.s:3354   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccIpf7YL.s:3444   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccIpf7YL.s:3451   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccIpf7YL.s:3635   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccIpf7YL.s:3642   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccIpf7YL.s:3879   .data:0000000000000000 SystemCoreClock
     /tmp/ccIpf7YL.s:3890   .bss:0000000000000004 uwTick
     /tmp/ccIpf7YL.s:3886   .bss:0000000000000000 hal_sys_tick
     /tmp/ccIpf7YL.s:3871   .rodata:0000000000000000 CSWTCH.77
     /tmp/ccIpf7YL.s:3876   .data:0000000000000000 $d
     /tmp/ccIpf7YL.s:3882   .bss:0000000000000000 $d
     /tmp/ccIpf7YL.s:2873   .text.UART_SetConfig:000000000000006f $d
     /tmp/ccIpf7YL.s:2873   .text.UART_SetConfig:0000000000000070 $t

NO UNDEFINED SYMBOLS
