   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"simpleserial.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.check_version,"ax",%progbits
  16              		.align	1
  17              		.global	check_version
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	check_version:
  25              	.LVL0:
  26              	.LFB1:
  27              		.file 1 ".././simpleserial/simpleserial.c"
   1:.././simpleserial/simpleserial.c **** // simpleserial.c
   2:.././simpleserial/simpleserial.c **** 
   3:.././simpleserial/simpleserial.c **** #include "simpleserial.h"
   4:.././simpleserial/simpleserial.c **** #include <stdint.h>
   5:.././simpleserial/simpleserial.c **** #include "hal.h"
   6:.././simpleserial/simpleserial.c **** 
   7:.././simpleserial/simpleserial.c **** 
   8:.././simpleserial/simpleserial.c **** #define MAX_SS_CMDS 16
   9:.././simpleserial/simpleserial.c **** static int num_commands = 0;
  10:.././simpleserial/simpleserial.c **** 
  11:.././simpleserial/simpleserial.c **** #define MAX_SS_LEN 192
  12:.././simpleserial/simpleserial.c **** 
  13:.././simpleserial/simpleserial.c **** //#define SS_VER_1_0 0
  14:.././simpleserial/simpleserial.c **** //#define SS_VER_1_1 1
  15:.././simpleserial/simpleserial.c **** //#define SS_VER_2_0 2
  16:.././simpleserial/simpleserial.c **** 
  17:.././simpleserial/simpleserial.c **** 
  18:.././simpleserial/simpleserial.c **** // 0xA6 formerly 
  19:.././simpleserial/simpleserial.c **** #define CW_CRC 0x4D 
  20:.././simpleserial/simpleserial.c **** uint8_t ss_crc(uint8_t *buf, uint8_t len)
  21:.././simpleserial/simpleserial.c **** {
  22:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  23:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  24:.././simpleserial/simpleserial.c **** 	while (len--) {
  25:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  26:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  27:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  28:.././simpleserial/simpleserial.c **** 		}
  29:.././simpleserial/simpleserial.c **** 	}
  30:.././simpleserial/simpleserial.c **** 	return crc;
  31:.././simpleserial/simpleserial.c **** 
  32:.././simpleserial/simpleserial.c **** }
  33:.././simpleserial/simpleserial.c **** 
  34:.././simpleserial/simpleserial.c **** // [B_STUFF, CMD, SCMD, LEN, B_STUFF, DATA..., CRC, TERM]
  35:.././simpleserial/simpleserial.c **** 
  36:.././simpleserial/simpleserial.c **** //#define SS_VER SS_VER_2_0
  37:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_2_0
  38:.././simpleserial/simpleserial.c **** #error "SS_VER_2_0 is deprecated! Use SS_VER_2_1 instead."
  39:.././simpleserial/simpleserial.c **** #elif SS_VER == SS_VER_2_1
  40:.././simpleserial/simpleserial.c **** 
  41:.././simpleserial/simpleserial.c **** 
  42:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
  43:.././simpleserial/simpleserial.c **** {
  44:.././simpleserial/simpleserial.c **** 	char c;
  45:.././simpleserial/simpleserial.c **** 	unsigned int len;
  46:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t *);
  47:.././simpleserial/simpleserial.c **** } ss_cmd;
  48:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
  49:.././simpleserial/simpleserial.c **** 
  50:.././simpleserial/simpleserial.c **** void ss_puts(char *x)
  51:.././simpleserial/simpleserial.c **** {
  52:.././simpleserial/simpleserial.c **** 	do {
  53:.././simpleserial/simpleserial.c **** 		putch(*x);
  54:.././simpleserial/simpleserial.c **** 	} while (*++x);
  55:.././simpleserial/simpleserial.c **** }
  56:.././simpleserial/simpleserial.c **** 
  57:.././simpleserial/simpleserial.c **** #define FRAME_BYTE 0x00
  58:.././simpleserial/simpleserial.c **** 
  59:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  60:.././simpleserial/simpleserial.c **** {
  61:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
  62:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
  63:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
  64:.././simpleserial/simpleserial.c **** }
  65:.././simpleserial/simpleserial.c **** 
  66:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  67:.././simpleserial/simpleserial.c **** {
  68:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
  69:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
  70:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
  71:.././simpleserial/simpleserial.c ****     }
  72:.././simpleserial/simpleserial.c **** 
  73:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands & 0xFF, (void *)cmd_chars);
  74:.././simpleserial/simpleserial.c ****     return 0x00;
  75:.././simpleserial/simpleserial.c **** 
  76:.././simpleserial/simpleserial.c **** }
  77:.././simpleserial/simpleserial.c **** 
  78:.././simpleserial/simpleserial.c **** uint8_t stuff_data(uint8_t *buf, uint8_t len)
  79:.././simpleserial/simpleserial.c **** {
  80:.././simpleserial/simpleserial.c **** 	uint8_t i = 1;
  81:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
  82:.././simpleserial/simpleserial.c **** 	for (; i < len; i++) {
  83:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
  84:.././simpleserial/simpleserial.c **** 			buf[last] = i - last;
  85:.././simpleserial/simpleserial.c **** 			last = i;
  86:.././simpleserial/simpleserial.c **** 		}
  87:.././simpleserial/simpleserial.c **** 	}
  88:.././simpleserial/simpleserial.c **** 	return 0x00;
  89:.././simpleserial/simpleserial.c **** }
  90:.././simpleserial/simpleserial.c **** 
  91:.././simpleserial/simpleserial.c **** uint8_t unstuff_data(uint8_t *buf, uint8_t len)
  92:.././simpleserial/simpleserial.c **** {
  93:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
  94:.././simpleserial/simpleserial.c **** 	buf[0] = 0x00;
  95:.././simpleserial/simpleserial.c **** 	//len -= 1;
  96:.././simpleserial/simpleserial.c **** 	uint8_t tmp = next;
  97:.././simpleserial/simpleserial.c **** 	while ((next < len) && tmp != 0) {
  98:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
  99:.././simpleserial/simpleserial.c **** 		buf[next] = FRAME_BYTE;
 100:.././simpleserial/simpleserial.c **** 		next += tmp;
 101:.././simpleserial/simpleserial.c **** 	}
 102:.././simpleserial/simpleserial.c **** 	return next;
 103:.././simpleserial/simpleserial.c **** }
 104:.././simpleserial/simpleserial.c **** 
 105:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 106:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 107:.././simpleserial/simpleserial.c **** void simpleserial_init()
 108:.././simpleserial/simpleserial.c **** {
 109:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 110:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 111:.././simpleserial/simpleserial.c **** }
 112:.././simpleserial/simpleserial.c **** 
 113:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t*
 114:.././simpleserial/simpleserial.c **** {
 115:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS) {
 116:.././simpleserial/simpleserial.c **** 		putch('a');
 117:.././simpleserial/simpleserial.c **** 		return 1;
 118:.././simpleserial/simpleserial.c **** 	}
 119:.././simpleserial/simpleserial.c **** 
 120:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN) {
 121:.././simpleserial/simpleserial.c **** 		putch('b');
 122:.././simpleserial/simpleserial.c **** 		return 1;
 123:.././simpleserial/simpleserial.c **** 	}
 124:.././simpleserial/simpleserial.c **** 
 125:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 126:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 127:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 128:.././simpleserial/simpleserial.c **** 	num_commands++;
 129:.././simpleserial/simpleserial.c **** 
 130:.././simpleserial/simpleserial.c **** 	return 0;
 131:.././simpleserial/simpleserial.c **** }
 132:.././simpleserial/simpleserial.c **** 
 133:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 134:.././simpleserial/simpleserial.c **** {
 135:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 136:.././simpleserial/simpleserial.c **** 	uint8_t err = 0;
 137:.././simpleserial/simpleserial.c **** 
 138:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < 4; i++) {
 139:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 140:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 141:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 142:.././simpleserial/simpleserial.c **** 			goto ERROR;
 143:.././simpleserial/simpleserial.c **** 		}
 144:.././simpleserial/simpleserial.c **** 	}
 145:.././simpleserial/simpleserial.c **** 	uint8_t next_frame = unstuff_data(data_buf, 4);
 146:.././simpleserial/simpleserial.c **** 
 147:.././simpleserial/simpleserial.c **** 	// check for valid command
 148:.././simpleserial/simpleserial.c **** 	uint8_t c = 0;
 149:.././simpleserial/simpleserial.c **** 	for(c = 0; c < num_commands; c++)
 150:.././simpleserial/simpleserial.c **** 	{
 151:.././simpleserial/simpleserial.c **** 		if(commands[c].c == data_buf[1])
 152:.././simpleserial/simpleserial.c **** 			break;
 153:.././simpleserial/simpleserial.c **** 	}
 154:.././simpleserial/simpleserial.c **** 
 155:.././simpleserial/simpleserial.c **** 	if (c == num_commands) {
 156:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 157:.././simpleserial/simpleserial.c **** 		goto ERROR;
 158:.././simpleserial/simpleserial.c **** 	}
 159:.././simpleserial/simpleserial.c **** 
 160:.././simpleserial/simpleserial.c **** 	//check that next frame not beyond end of message
 161:.././simpleserial/simpleserial.c **** 	// account for cmd, scmd, len, data, crc, end of frame
 162:.././simpleserial/simpleserial.c **** 	if ((data_buf[3] + 5) < next_frame) {
 163:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 164:.././simpleserial/simpleserial.c **** 		goto ERROR;
 165:.././simpleserial/simpleserial.c **** 	}
 166:.././simpleserial/simpleserial.c **** 
 167:.././simpleserial/simpleserial.c **** 	// read in data
 168:.././simpleserial/simpleserial.c **** 	// eq to len + crc + frame end
 169:.././simpleserial/simpleserial.c **** 	int i = 4;
 170:.././simpleserial/simpleserial.c **** 	for (; i < data_buf[3] + 5; i++) {
 171:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 172:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 173:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 174:.././simpleserial/simpleserial.c **** 			goto ERROR;
 175:.././simpleserial/simpleserial.c **** 		}
 176:.././simpleserial/simpleserial.c **** 	}
 177:.././simpleserial/simpleserial.c **** 
 178:.././simpleserial/simpleserial.c **** 	//check that final byte is the FRAME_BYTE
 179:.././simpleserial/simpleserial.c **** 	data_buf[i] = getch();
 180:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 181:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 182:.././simpleserial/simpleserial.c **** 		goto ERROR;
 183:.././simpleserial/simpleserial.c **** 	}
 184:.././simpleserial/simpleserial.c **** 
 185:.././simpleserial/simpleserial.c **** 	//fully unstuff data now
 186:.././simpleserial/simpleserial.c **** 	unstuff_data(data_buf + next_frame, i - next_frame + 1);
 187:.././simpleserial/simpleserial.c **** 
 188:.././simpleserial/simpleserial.c **** 	//calc crc excluding original frame offset and frame end and crc
 189:.././simpleserial/simpleserial.c **** 	uint8_t crc = ss_crc(data_buf+1, i-2);
 190:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 191:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 192:.././simpleserial/simpleserial.c **** 		goto ERROR;
 193:.././simpleserial/simpleserial.c **** 	}
 194:.././simpleserial/simpleserial.c **** 
 195:.././simpleserial/simpleserial.c **** 	err = commands[c].fp(data_buf[1], data_buf[2], data_buf[3], data_buf+4);
 196:.././simpleserial/simpleserial.c **** 
 197:.././simpleserial/simpleserial.c **** ERROR:
 198:.././simpleserial/simpleserial.c **** 	simpleserial_put('e', 0x01, &err);
 199:.././simpleserial/simpleserial.c **** 	return;
 200:.././simpleserial/simpleserial.c **** }
 201:.././simpleserial/simpleserial.c **** 
 202:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 203:.././simpleserial/simpleserial.c **** {
 204:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 205:.././simpleserial/simpleserial.c **** 	data_buf[0] = 0x00;
 206:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 207:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 208:.././simpleserial/simpleserial.c **** 	int i = 0;
 209:.././simpleserial/simpleserial.c **** 	for (; i < size; i++) {
 210:.././simpleserial/simpleserial.c **** 		data_buf[i + 3] = output[i];
 211:.././simpleserial/simpleserial.c **** 	}
 212:.././simpleserial/simpleserial.c **** 	data_buf[i + 3] = ss_crc(data_buf+1, size+2);
 213:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 214:.././simpleserial/simpleserial.c **** 	stuff_data(data_buf, i + 5);
 215:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 216:.././simpleserial/simpleserial.c **** 		putch(data_buf[i]);
 217:.././simpleserial/simpleserial.c **** 	}
 218:.././simpleserial/simpleserial.c **** }
 219:.././simpleserial/simpleserial.c **** 
 220:.././simpleserial/simpleserial.c **** 
 221:.././simpleserial/simpleserial.c **** #else
 222:.././simpleserial/simpleserial.c **** 
 223:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
 224:.././simpleserial/simpleserial.c **** {
 225:.././simpleserial/simpleserial.c **** 	char c;
 226:.././simpleserial/simpleserial.c **** 	unsigned int len;
 227:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t*, uint8_t);
 228:.././simpleserial/simpleserial.c **** 	uint8_t flags;
 229:.././simpleserial/simpleserial.c **** } ss_cmd;
 230:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
 231:.././simpleserial/simpleserial.c **** // Callback function for "v" command.
 232:.././simpleserial/simpleserial.c **** // This can exist in v1.0 as long as we don't actually send back an ack ("z")
 233:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t *v, uint8_t len)
 234:.././simpleserial/simpleserial.c **** {
  28              		.loc 1 234 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 235:.././simpleserial/simpleserial.c **** 	return SS_VER;
  33              		.loc 1 235 2 view .LVU1
 236:.././simpleserial/simpleserial.c **** }
  34              		.loc 1 236 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		.loc 1 236 1 view .LVU3
  38              		@ sp needed
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE1:
  43              		.section	.text.ss_crc,"ax",%progbits
  44              		.align	1
  45              		.global	ss_crc
  46              		.syntax unified
  47              		.code	16
  48              		.thumb_func
  49              		.fpu softvfp
  51              	ss_crc:
  52              	.LVL2:
  53              	.LFB0:
  21:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  54              		.loc 1 21 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  22:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  58              		.loc 1 22 2 view .LVU5
  23:.././simpleserial/simpleserial.c **** 	while (len--) {
  59              		.loc 1 23 2 view .LVU6
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  60              		.loc 1 24 2 view .LVU7
  61 0000 0300     		movs	r3, r0
  21:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  62              		.loc 1 21 1 is_stmt 0 view .LVU8
  63 0002 70B5     		push	{r4, r5, r6, lr}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 4, -16
  67              		.cfi_offset 5, -12
  68              		.cfi_offset 6, -8
  69              		.cfi_offset 14, -4
  70 0004 4118     		adds	r1, r0, r1
  71              	.LVL3:
  27:.././simpleserial/simpleserial.c **** 		}
  72              		.loc 1 27 34 view .LVU9
  73 0006 4D25     		movs	r5, #77
  23:.././simpleserial/simpleserial.c **** 	while (len--) {
  74              		.loc 1 23 10 view .LVU10
  75 0008 0020     		movs	r0, #0
  76              	.LVL4:
  77              	.L3:
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  78              		.loc 1 24 8 is_stmt 1 view .LVU11
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  79              		.loc 1 24 8 is_stmt 0 view .LVU12
  80 000a 9942     		cmp	r1, r3
  81 000c 00D1     		bne	.L7
  32:.././simpleserial/simpleserial.c **** 
  82              		.loc 1 32 1 view .LVU13
  83              		@ sp needed
  84 000e 70BD     		pop	{r4, r5, r6, pc}
  85              	.L7:
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  86              		.loc 1 25 3 is_stmt 1 view .LVU14
  87              	.LVL5:
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  88              		.loc 1 25 7 is_stmt 0 view .LVU15
  89 0010 0824     		movs	r4, #8
  90 0012 1A78     		ldrb	r2, [r3]
  91 0014 5040     		eors	r0, r2
  92              	.LVL6:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  93              		.loc 1 26 3 is_stmt 1 view .LVU16
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  94              		.loc 1 26 15 view .LVU17
  95              	.L6:
  27:.././simpleserial/simpleserial.c **** 		}
  96              		.loc 1 27 4 view .LVU18
  27:.././simpleserial/simpleserial.c **** 		}
  97              		.loc 1 27 8 is_stmt 0 view .LVU19
  98 0016 46B2     		sxtb	r6, r0
  99 0018 4200     		lsls	r2, r0, #1
 100 001a D0B2     		uxtb	r0, r2
 101              	.LVL7:
  27:.././simpleserial/simpleserial.c **** 		}
 102              		.loc 1 27 8 view .LVU20
 103 001c 002E     		cmp	r6, #0
 104 001e 01DA     		bge	.L5
  27:.././simpleserial/simpleserial.c **** 		}
 105              		.loc 1 27 34 discriminator 1 view .LVU21
 106 0020 6A40     		eors	r2, r5
  27:.././simpleserial/simpleserial.c **** 		}
 107              		.loc 1 27 8 discriminator 1 view .LVU22
 108 0022 D0B2     		uxtb	r0, r2
 109              	.L5:
 110              	.LVL8:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 111              		.loc 1 26 22 is_stmt 1 discriminator 4 view .LVU23
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 112              		.loc 1 26 15 discriminator 4 view .LVU24
 113 0024 013C     		subs	r4, r4, #1
 114              	.LVL9:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 115              		.loc 1 26 3 is_stmt 0 discriminator 4 view .LVU25
 116 0026 002C     		cmp	r4, #0
 117 0028 F5D1     		bne	.L6
 118 002a 0133     		adds	r3, r3, #1
 119              	.LVL10:
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 120              		.loc 1 26 3 discriminator 4 view .LVU26
 121 002c EDE7     		b	.L3
 122              		.cfi_endproc
 123              	.LFE0:
 125              		.section	.text.hex_decode,"ax",%progbits
 126              		.align	1
 127              		.global	hex_decode
 128              		.syntax unified
 129              		.code	16
 130              		.thumb_func
 131              		.fpu softvfp
 133              	hex_decode:
 134              	.LVL11:
 135              	.LFB4:
 237:.././simpleserial/simpleserial.c **** 
 238:.././simpleserial/simpleserial.c **** uint8_t ss_num_commands(uint8_t *x, uint8_t len)
 239:.././simpleserial/simpleserial.c **** {
 240:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 241:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 242:.././simpleserial/simpleserial.c ****     return 0x00;
 243:.././simpleserial/simpleserial.c **** }
 244:.././simpleserial/simpleserial.c **** 
 245:.././simpleserial/simpleserial.c **** typedef struct ss_cmd_repr {
 246:.././simpleserial/simpleserial.c ****     uint8_t c;
 247:.././simpleserial/simpleserial.c ****     uint8_t len;
 248:.././simpleserial/simpleserial.c ****     uint8_t flags;
 249:.././simpleserial/simpleserial.c **** } ss_cmd_repr;
 250:.././simpleserial/simpleserial.c **** 
 251:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t *x, uint8_t len)
 252:.././simpleserial/simpleserial.c **** {
 253:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 254:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 257:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 258:.././simpleserial/simpleserial.c ****     }
 259:.././simpleserial/simpleserial.c **** 
 260:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands * 0x03, (void *) repr_cmd_buf);
 261:.././simpleserial/simpleserial.c ****     return 0x00;
 262:.././simpleserial/simpleserial.c **** }
 263:.././simpleserial/simpleserial.c **** 
 264:.././simpleserial/simpleserial.c **** static char hex_lookup[16] =
 265:.././simpleserial/simpleserial.c **** {
 266:.././simpleserial/simpleserial.c **** 	'0', '1', '2', '3', '4', '5', '6', '7',
 267:.././simpleserial/simpleserial.c **** 	'8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
 268:.././simpleserial/simpleserial.c **** };
 269:.././simpleserial/simpleserial.c **** 
 270:.././simpleserial/simpleserial.c **** int hex_decode(int len, char* ascii_buf, uint8_t* data_buf)
 271:.././simpleserial/simpleserial.c **** {
 136              		.loc 1 271 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 272:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 140              		.loc 1 272 2 view .LVU28
 141              	.LBB2:
 142              		.loc 1 272 6 view .LVU29
 143              		.loc 1 272 6 is_stmt 0 view .LVU30
 144              	.LBE2:
 271:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 145              		.loc 1 271 1 view .LVU31
 146 0000 70B5     		push	{r4, r5, r6, lr}
 147              	.LCFI1:
 148              		.cfi_def_cfa_offset 16
 149              		.cfi_offset 4, -16
 150              		.cfi_offset 5, -12
 151              		.cfi_offset 6, -8
 152              		.cfi_offset 14, -4
 153              	.LBB6:
 154              		.loc 1 272 10 view .LVU32
 155 0002 0024     		movs	r4, #0
 156              	.LVL12:
 157              	.L10:
 158              		.loc 1 272 17 is_stmt 1 discriminator 1 view .LVU33
 159              		.loc 1 272 2 is_stmt 0 discriminator 1 view .LVU34
 160 0004 8442     		cmp	r4, r0
 161 0006 01DB     		blt	.L20
 162              	.LBE6:
 273:.././simpleserial/simpleserial.c **** 	{
 274:.././simpleserial/simpleserial.c **** 		char n_hi = ascii_buf[2*i];
 275:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 276:.././simpleserial/simpleserial.c **** 
 277:.././simpleserial/simpleserial.c **** 		if(n_lo >= '0' && n_lo <= '9')
 278:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 279:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 280:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 281:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 282:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 283:.././simpleserial/simpleserial.c **** 		else
 284:.././simpleserial/simpleserial.c **** 			return 1;
 285:.././simpleserial/simpleserial.c **** 
 286:.././simpleserial/simpleserial.c **** 		if(n_hi >= '0' && n_hi <= '9')
 287:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 288:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 289:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 290:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 291:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 292:.././simpleserial/simpleserial.c **** 		else
 293:.././simpleserial/simpleserial.c **** 			return 1;
 294:.././simpleserial/simpleserial.c **** 	}
 295:.././simpleserial/simpleserial.c **** 
 296:.././simpleserial/simpleserial.c **** 	return 0;
 163              		.loc 1 296 9 view .LVU35
 164 0008 0020     		movs	r0, #0
 165              	.LVL13:
 166              		.loc 1 296 9 view .LVU36
 167 000a 1FE0     		b	.L9
 168              	.LVL14:
 169              	.L20:
 170              	.LBB7:
 171              	.LBB3:
 274:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 172              		.loc 1 274 3 is_stmt 1 view .LVU37
 275:.././simpleserial/simpleserial.c **** 
 173              		.loc 1 275 8 is_stmt 0 view .LVU38
 174 000c 4D78     		ldrb	r5, [r1, #1]
 274:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 175              		.loc 1 274 8 view .LVU39
 176 000e 0B78     		ldrb	r3, [r1]
 177              	.LVL15:
 275:.././simpleserial/simpleserial.c **** 
 178              		.loc 1 275 3 is_stmt 1 view .LVU40
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 179              		.loc 1 277 3 view .LVU41
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 180              		.loc 1 277 18 is_stmt 0 view .LVU42
 181 0010 2E00     		movs	r6, r5
 182 0012 303E     		subs	r6, r6, #48
 183 0014 F6B2     		uxtb	r6, r6
 277:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 184              		.loc 1 277 5 view .LVU43
 185 0016 092E     		cmp	r6, #9
 186 0018 0CD8     		bhi	.L11
 278:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 187              		.loc 1 278 4 is_stmt 1 view .LVU44
 278:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 188              		.loc 1 278 16 is_stmt 0 view .LVU45
 189 001a 1655     		strb	r6, [r2, r4]
 190              	.LVL16:
 191              	.L12:
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 192              		.loc 1 286 3 is_stmt 1 view .LVU46
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 193              		.loc 1 286 18 is_stmt 0 view .LVU47
 194 001c 1D00     		movs	r5, r3
 195 001e 303D     		subs	r5, r5, #48
 286:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 196              		.loc 1 286 5 view .LVU48
 197 0020 EEB2     		uxtb	r6, r5
 198 0022 092E     		cmp	r6, #9
 199 0024 15D8     		bhi	.L16
 287:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 200              		.loc 1 287 4 is_stmt 1 view .LVU49
 287:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 201              		.loc 1 287 16 is_stmt 0 view .LVU50
 202 0026 135D     		ldrb	r3, [r2, r4]
 203              	.LVL17:
 287:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 204              		.loc 1 287 32 view .LVU51
 205 0028 2D01     		lsls	r5, r5, #4
 206              	.LVL18:
 287:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 207              		.loc 1 287 16 view .LVU52
 208 002a 1D43     		orrs	r5, r3
 209 002c 1555     		strb	r5, [r2, r4]
 210              	.L17:
 287:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 211              		.loc 1 287 16 view .LVU53
 212              	.LBE3:
 272:.././simpleserial/simpleserial.c **** 	{
 213              		.loc 1 272 26 is_stmt 1 discriminator 2 view .LVU54
 272:.././simpleserial/simpleserial.c **** 	{
 214              		.loc 1 272 27 is_stmt 0 discriminator 2 view .LVU55
 215 002e 0134     		adds	r4, r4, #1
 216              	.LVL19:
 272:.././simpleserial/simpleserial.c **** 	{
 217              		.loc 1 272 27 discriminator 2 view .LVU56
 218 0030 0231     		adds	r1, r1, #2
 219 0032 E7E7     		b	.L10
 220              	.LVL20:
 221              	.L11:
 222              	.LBB4:
 279:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 223              		.loc 1 279 8 is_stmt 1 view .LVU57
 279:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 224              		.loc 1 279 10 is_stmt 0 view .LVU58
 225 0034 2E00     		movs	r6, r5
 226 0036 413E     		subs	r6, r6, #65
 227 0038 052E     		cmp	r6, #5
 228 003a 02D8     		bhi	.L13
 280:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 229              		.loc 1 280 4 is_stmt 1 view .LVU59
 280:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 230              		.loc 1 280 29 is_stmt 0 view .LVU60
 231 003c 373D     		subs	r5, r5, #55
 232              	.LVL21:
 233              	.L21:
 282:.././simpleserial/simpleserial.c **** 		else
 234              		.loc 1 282 16 view .LVU61
 235 003e 1555     		strb	r5, [r2, r4]
 236              	.LVL22:
 282:.././simpleserial/simpleserial.c **** 		else
 237              		.loc 1 282 16 view .LVU62
 238 0040 ECE7     		b	.L12
 239              	.LVL23:
 240              	.L13:
 281:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 241              		.loc 1 281 8 is_stmt 1 view .LVU63
 281:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 242              		.loc 1 281 10 is_stmt 0 view .LVU64
 243 0042 2E00     		movs	r6, r5
 244 0044 613E     		subs	r6, r6, #97
 245 0046 052E     		cmp	r6, #5
 246 0048 01D9     		bls	.L14
 247              	.LVL24:
 248              	.L19:
 284:.././simpleserial/simpleserial.c **** 
 249              		.loc 1 284 11 view .LVU65
 250 004a 0120     		movs	r0, #1
 251              	.LVL25:
 252              	.L9:
 284:.././simpleserial/simpleserial.c **** 
 253              		.loc 1 284 11 view .LVU66
 254              	.LBE4:
 255              	.LBE7:
 297:.././simpleserial/simpleserial.c **** }
 256              		.loc 1 297 1 view .LVU67
 257              		@ sp needed
 258              	.LVL26:
 259              		.loc 1 297 1 view .LVU68
 260 004c 70BD     		pop	{r4, r5, r6, pc}
 261              	.LVL27:
 262              	.L14:
 263              	.LBB8:
 264              	.LBB5:
 282:.././simpleserial/simpleserial.c **** 		else
 265              		.loc 1 282 4 is_stmt 1 view .LVU69
 282:.././simpleserial/simpleserial.c **** 		else
 266              		.loc 1 282 29 is_stmt 0 view .LVU70
 267 004e 573D     		subs	r5, r5, #87
 268              	.LVL28:
 282:.././simpleserial/simpleserial.c **** 		else
 269              		.loc 1 282 29 view .LVU71
 270 0050 F5E7     		b	.L21
 271              	.LVL29:
 272              	.L16:
 288:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 273              		.loc 1 288 8 is_stmt 1 view .LVU72
 288:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 274              		.loc 1 288 10 is_stmt 0 view .LVU73
 275 0052 1D00     		movs	r5, r3
 276 0054 413D     		subs	r5, r5, #65
 277 0056 052D     		cmp	r5, #5
 278 0058 05D8     		bhi	.L18
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 279              		.loc 1 289 4 is_stmt 1 view .LVU74
 289:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 280              		.loc 1 289 31 is_stmt 0 view .LVU75
 281 005a 373B     		subs	r3, r3, #55
 282              	.LVL30:
 283              	.L22:
 291:.././simpleserial/simpleserial.c **** 		else
 284              		.loc 1 291 16 view .LVU76
 285 005c 155D     		ldrb	r5, [r2, r4]
 291:.././simpleserial/simpleserial.c **** 		else
 286              		.loc 1 291 37 view .LVU77
 287 005e 1B01     		lsls	r3, r3, #4
 291:.././simpleserial/simpleserial.c **** 		else
 288              		.loc 1 291 16 view .LVU78
 289 0060 2B43     		orrs	r3, r5
 290 0062 1355     		strb	r3, [r2, r4]
 291 0064 E3E7     		b	.L17
 292              	.LVL31:
 293              	.L18:
 290:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 294              		.loc 1 290 8 is_stmt 1 view .LVU79
 290:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 295              		.loc 1 290 10 is_stmt 0 view .LVU80
 296 0066 1D00     		movs	r5, r3
 297 0068 613D     		subs	r5, r5, #97
 298 006a 052D     		cmp	r5, #5
 299 006c EDD8     		bhi	.L19
 291:.././simpleserial/simpleserial.c **** 		else
 300              		.loc 1 291 4 is_stmt 1 view .LVU81
 291:.././simpleserial/simpleserial.c **** 		else
 301              		.loc 1 291 31 is_stmt 0 view .LVU82
 302 006e 573B     		subs	r3, r3, #87
 303              	.LVL32:
 291:.././simpleserial/simpleserial.c **** 		else
 304              		.loc 1 291 31 view .LVU83
 305 0070 F4E7     		b	.L22
 306              	.LBE5:
 307              	.LBE8:
 308              		.cfi_endproc
 309              	.LFE4:
 311              		.section	.text.simpleserial_addcmd_flags,"ax",%progbits
 312              		.align	1
 313              		.global	simpleserial_addcmd_flags
 314              		.syntax unified
 315              		.code	16
 316              		.thumb_func
 317              		.fpu softvfp
 319              	simpleserial_addcmd_flags:
 320              	.LVL33:
 321              	.LFB7:
 298:.././simpleserial/simpleserial.c **** 
 299:.././simpleserial/simpleserial.c **** 
 300:.././simpleserial/simpleserial.c **** 
 301:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 302:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 303:.././simpleserial/simpleserial.c **** void simpleserial_init()
 304:.././simpleserial/simpleserial.c **** {
 305:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 306:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 307:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 308:.././simpleserial/simpleserial.c **** }
 309:.././simpleserial/simpleserial.c **** 
 310:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t))
 311:.././simpleserial/simpleserial.c **** {
 312:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 313:.././simpleserial/simpleserial.c **** }
 314:.././simpleserial/simpleserial.c **** 
 315:.././simpleserial/simpleserial.c **** int simpleserial_addcmd_flags(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t), uint8_t f
 316:.././simpleserial/simpleserial.c **** {
 322              		.loc 1 316 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 317:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 326              		.loc 1 317 2 view .LVU85
 316:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 327              		.loc 1 316 1 is_stmt 0 view .LVU86
 328 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 329              	.LCFI2:
 330              		.cfi_def_cfa_offset 20
 331              		.cfi_offset 4, -20
 332              		.cfi_offset 5, -16
 333              		.cfi_offset 6, -12
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336              		.loc 1 317 18 view .LVU87
 337 0002 094E     		ldr	r6, .L27
 316:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 338              		.loc 1 316 1 view .LVU88
 339 0004 0500     		movs	r5, r0
 340              		.loc 1 317 18 view .LVU89
 341 0006 3468     		ldr	r4, [r6]
 318:.././simpleserial/simpleserial.c **** 		return 1;
 342              		.loc 1 318 10 view .LVU90
 343 0008 0120     		movs	r0, #1
 344              	.LVL34:
 317:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 345              		.loc 1 317 4 view .LVU91
 346 000a 0F2C     		cmp	r4, #15
 347 000c 0BDC     		bgt	.L23
 319:.././simpleserial/simpleserial.c **** 
 320:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN)
 348              		.loc 1 320 2 is_stmt 1 view .LVU92
 349              		.loc 1 320 4 is_stmt 0 view .LVU93
 350 000e BF29     		cmp	r1, #191
 351 0010 09D8     		bhi	.L23
 321:.././simpleserial/simpleserial.c **** 		return 1;
 322:.././simpleserial/simpleserial.c **** 
 323:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 352              		.loc 1 323 2 is_stmt 1 view .LVU94
 353              		.loc 1 323 29 is_stmt 0 view .LVU95
 354 0012 0648     		ldr	r0, .L27+4
 355 0014 2701     		lsls	r7, r4, #4
 356 0016 3D54     		strb	r5, [r7, r0]
 324:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 357              		.loc 1 324 2 is_stmt 1 view .LVU96
 358              		.loc 1 324 29 is_stmt 0 view .LVU97
 359 0018 C019     		adds	r0, r0, r7
 360 001a 4160     		str	r1, [r0, #4]
 325:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 361              		.loc 1 325 2 is_stmt 1 view .LVU98
 362              		.loc 1 325 29 is_stmt 0 view .LVU99
 363 001c 8260     		str	r2, [r0, #8]
 326:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 364              		.loc 1 326 2 is_stmt 1 view .LVU100
 365              		.loc 1 326 31 is_stmt 0 view .LVU101
 366 001e 0373     		strb	r3, [r0, #12]
 327:.././simpleserial/simpleserial.c **** 	num_commands++;
 367              		.loc 1 327 2 is_stmt 1 view .LVU102
 328:.././simpleserial/simpleserial.c **** 
 329:.././simpleserial/simpleserial.c **** 	return 0;
 368              		.loc 1 329 9 is_stmt 0 view .LVU103
 369 0020 0020     		movs	r0, #0
 327:.././simpleserial/simpleserial.c **** 	num_commands++;
 370              		.loc 1 327 14 view .LVU104
 371 0022 0134     		adds	r4, r4, #1
 372 0024 3460     		str	r4, [r6]
 373              		.loc 1 329 2 is_stmt 1 view .LVU105
 374              	.L23:
 330:.././simpleserial/simpleserial.c **** }
 375              		.loc 1 330 1 is_stmt 0 view .LVU106
 376              		@ sp needed
 377 0026 F0BD     		pop	{r4, r5, r6, r7, pc}
 378              	.L28:
 379              		.align	2
 380              	.L27:
 381 0028 00000000 		.word	.LANCHOR0
 382 002c 04000000 		.word	commands
 383              		.cfi_endproc
 384              	.LFE7:
 386              		.section	.text.simpleserial_addcmd,"ax",%progbits
 387              		.align	1
 388              		.global	simpleserial_addcmd
 389              		.syntax unified
 390              		.code	16
 391              		.thumb_func
 392              		.fpu softvfp
 394              	simpleserial_addcmd:
 395              	.LVL35:
 396              	.LFB6:
 311:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 397              		.loc 1 311 1 is_stmt 1 view -0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 312:.././simpleserial/simpleserial.c **** }
 401              		.loc 1 312 2 view .LVU108
 311:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 402              		.loc 1 311 1 is_stmt 0 view .LVU109
 403 0000 10B5     		push	{r4, lr}
 404              	.LCFI3:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 312:.././simpleserial/simpleserial.c **** }
 408              		.loc 1 312 9 view .LVU110
 409 0002 0023     		movs	r3, #0
 410 0004 FFF7FEFF 		bl	simpleserial_addcmd_flags
 411              	.LVL36:
 313:.././simpleserial/simpleserial.c **** 
 412              		.loc 1 313 1 view .LVU111
 413              		@ sp needed
 414 0008 10BD     		pop	{r4, pc}
 415              		.cfi_endproc
 416              	.LFE6:
 418              		.section	.text.simpleserial_init,"ax",%progbits
 419              		.align	1
 420              		.global	simpleserial_init
 421              		.syntax unified
 422              		.code	16
 423              		.thumb_func
 424              		.fpu softvfp
 426              	simpleserial_init:
 427              	.LFB5:
 304:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 428              		.loc 1 304 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 305:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 432              		.loc 1 305 2 view .LVU113
 304:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 433              		.loc 1 304 1 is_stmt 0 view .LVU114
 434 0000 10B5     		push	{r4, lr}
 435              	.LCFI4:
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 4, -8
 438              		.cfi_offset 14, -4
 305:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 439              		.loc 1 305 2 view .LVU115
 440 0002 0021     		movs	r1, #0
 441 0004 074A     		ldr	r2, .L31
 442 0006 7620     		movs	r0, #118
 443 0008 FFF7FEFF 		bl	simpleserial_addcmd
 444              	.LVL37:
 306:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 445              		.loc 1 306 5 is_stmt 1 view .LVU116
 446 000c 0021     		movs	r1, #0
 447 000e 064A     		ldr	r2, .L31+4
 448 0010 7720     		movs	r0, #119
 449 0012 FFF7FEFF 		bl	simpleserial_addcmd
 450              	.LVL38:
 307:.././simpleserial/simpleserial.c **** }
 451              		.loc 1 307 5 view .LVU117
 452 0016 0021     		movs	r1, #0
 453 0018 7920     		movs	r0, #121
 454 001a 044A     		ldr	r2, .L31+8
 455 001c FFF7FEFF 		bl	simpleserial_addcmd
 456              	.LVL39:
 308:.././simpleserial/simpleserial.c **** 
 457              		.loc 1 308 1 is_stmt 0 view .LVU118
 458              		@ sp needed
 459 0020 10BD     		pop	{r4, pc}
 460              	.L32:
 461 0022 C046     		.align	2
 462              	.L31:
 463 0024 00000000 		.word	check_version
 464 0028 00000000 		.word	ss_get_commands
 465 002c 00000000 		.word	ss_num_commands
 466              		.cfi_endproc
 467              	.LFE5:
 469              		.section	.text.simpleserial_get,"ax",%progbits
 470              		.align	1
 471              		.global	simpleserial_get
 472              		.syntax unified
 473              		.code	16
 474              		.thumb_func
 475              		.fpu softvfp
 477              	simpleserial_get:
 478              	.LFB8:
 331:.././simpleserial/simpleserial.c **** 
 332:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 333:.././simpleserial/simpleserial.c **** {
 479              		.loc 1 333 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 576
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 334:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 483              		.loc 1 334 2 view .LVU120
 335:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 484              		.loc 1 335 2 view .LVU121
 336:.././simpleserial/simpleserial.c **** 	char c;
 485              		.loc 1 336 2 view .LVU122
 337:.././simpleserial/simpleserial.c **** 
 338:.././simpleserial/simpleserial.c **** 	// Find which command we're receiving
 339:.././simpleserial/simpleserial.c **** 	c = getch();
 486              		.loc 1 339 2 view .LVU123
 333:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 487              		.loc 1 333 1 is_stmt 0 view .LVU124
 488 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 489              	.LCFI5:
 490              		.cfi_def_cfa_offset 20
 491              		.cfi_offset 4, -20
 492              		.cfi_offset 5, -16
 493              		.cfi_offset 6, -12
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 2C4C     		ldr	r4, .L56
 497 0004 A544     		add	sp, sp, r4
 498              	.LCFI6:
 499              		.cfi_def_cfa_offset 600
 500              		.loc 1 339 6 view .LVU125
 501 0006 FFF7FEFF 		bl	getch
 502              	.LVL40:
 340:.././simpleserial/simpleserial.c **** 
 341:.././simpleserial/simpleserial.c **** 	int cmd;
 503              		.loc 1 341 2 is_stmt 1 view .LVU126
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 504              		.loc 1 342 2 view .LVU127
 505              		.loc 1 342 19 is_stmt 0 view .LVU128
 506 000a 2B4B     		ldr	r3, .L56+4
 343:.././simpleserial/simpleserial.c **** 	{
 344:.././simpleserial/simpleserial.c **** 		if(commands[cmd].c == c)
 507              		.loc 1 344 19 view .LVU129
 508 000c 2B49     		ldr	r1, .L56+8
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 509              		.loc 1 342 19 view .LVU130
 510 000e 1A68     		ldr	r2, [r3]
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 511              		.loc 1 342 10 view .LVU131
 512 0010 0023     		movs	r3, #0
 513              	.LVL41:
 514              	.L34:
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 515              		.loc 1 342 15 is_stmt 1 discriminator 1 view .LVU132
 342:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 516              		.loc 1 342 2 is_stmt 0 discriminator 1 view .LVU133
 517 0012 9A42     		cmp	r2, r3
 518 0014 04DC     		bgt	.L38
 345:.././simpleserial/simpleserial.c **** 			break;
 346:.././simpleserial/simpleserial.c **** 	}
 347:.././simpleserial/simpleserial.c **** 
 348:.././simpleserial/simpleserial.c **** 	// If we didn't find a match, give up right away
 349:.././simpleserial/simpleserial.c **** 	if(cmd == num_commands)
 519              		.loc 1 349 2 is_stmt 1 view .LVU134
 520              		.loc 1 349 4 is_stmt 0 view .LVU135
 521 0016 07D1     		bne	.L40
 522              	.LVL42:
 523              	.L33:
 350:.././simpleserial/simpleserial.c **** 		return;
 351:.././simpleserial/simpleserial.c **** 
 352:.././simpleserial/simpleserial.c **** 	// If flag CMD_FLAG_LEN is set, the next byte indicates the sent length
 353:.././simpleserial/simpleserial.c **** 	if ((commands[cmd].flags & CMD_FLAG_LEN) != 0)
 354:.././simpleserial/simpleserial.c **** 	{
 355:.././simpleserial/simpleserial.c **** 		uint8_t l = 0;
 356:.././simpleserial/simpleserial.c **** 		char buff[2];
 357:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 358:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 359:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 360:.././simpleserial/simpleserial.c **** 			return;
 361:.././simpleserial/simpleserial.c **** 		commands[cmd].len = l;
 362:.././simpleserial/simpleserial.c **** 	}
 363:.././simpleserial/simpleserial.c **** 
 364:.././simpleserial/simpleserial.c **** 	// Receive characters until we fill the ASCII buffer
 365:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < 2*commands[cmd].len; i++)
 366:.././simpleserial/simpleserial.c **** 	{
 367:.././simpleserial/simpleserial.c **** 		c = getch();
 368:.././simpleserial/simpleserial.c **** 
 369:.././simpleserial/simpleserial.c **** 		// Check for early \n
 370:.././simpleserial/simpleserial.c **** 		if(c == '\n' || c == '\r')
 371:.././simpleserial/simpleserial.c **** 			return;
 372:.././simpleserial/simpleserial.c **** 
 373:.././simpleserial/simpleserial.c **** 		ascii_buf[i] = c;
 374:.././simpleserial/simpleserial.c **** 	}
 375:.././simpleserial/simpleserial.c **** 
 376:.././simpleserial/simpleserial.c **** 	// Assert that last character is \n or \r
 377:.././simpleserial/simpleserial.c **** 	c = getch();
 378:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 379:.././simpleserial/simpleserial.c **** 		return;
 380:.././simpleserial/simpleserial.c **** 
 381:.././simpleserial/simpleserial.c **** 	// ASCII buffer is full: convert to bytes
 382:.././simpleserial/simpleserial.c **** 	// Check for illegal characters here
 383:.././simpleserial/simpleserial.c **** 	if(hex_decode(commands[cmd].len, ascii_buf, data_buf))
 384:.././simpleserial/simpleserial.c **** 		return;
 385:.././simpleserial/simpleserial.c **** 
 386:.././simpleserial/simpleserial.c **** 	// Callback
 387:.././simpleserial/simpleserial.c **** 	uint8_t ret[1];
 388:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 389:.././simpleserial/simpleserial.c **** 
 390:.././simpleserial/simpleserial.c **** 	// Acknowledge (if version is 1.1)
 391:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_1_1
 392:.././simpleserial/simpleserial.c **** 	simpleserial_put('z', 1, ret);
 393:.././simpleserial/simpleserial.c **** #endif
 394:.././simpleserial/simpleserial.c **** }
 524              		.loc 1 394 1 view .LVU136
 525 0018 9123     		movs	r3, #145
 526 001a 9B00     		lsls	r3, r3, #2
 527 001c 9D44     		add	sp, sp, r3
 528              		@ sp needed
 529 001e F0BD     		pop	{r4, r5, r6, r7, pc}
 530              	.LVL43:
 531              	.L38:
 344:.././simpleserial/simpleserial.c **** 			break;
 532              		.loc 1 344 3 is_stmt 1 view .LVU137
 344:.././simpleserial/simpleserial.c **** 			break;
 533              		.loc 1 344 19 is_stmt 0 view .LVU138
 534 0020 1C01     		lsls	r4, r3, #4
 344:.././simpleserial/simpleserial.c **** 			break;
 535              		.loc 1 344 5 view .LVU139
 536 0022 0C5D     		ldrb	r4, [r1, r4]
 537 0024 8442     		cmp	r4, r0
 538 0026 39D1     		bne	.L35
 539              	.L40:
 353:.././simpleserial/simpleserial.c **** 	{
 540              		.loc 1 353 2 is_stmt 1 view .LVU140
 353:.././simpleserial/simpleserial.c **** 	{
 541              		.loc 1 353 5 is_stmt 0 view .LVU141
 542 0028 0127     		movs	r7, #1
 353:.././simpleserial/simpleserial.c **** 	{
 543              		.loc 1 353 20 view .LVU142
 544 002a 244D     		ldr	r5, .L56+8
 545 002c 1C01     		lsls	r4, r3, #4
 546 002e 2E19     		adds	r6, r5, r4
 353:.././simpleserial/simpleserial.c **** 	{
 547              		.loc 1 353 5 view .LVU143
 548 0030 337B     		ldrb	r3, [r6, #12]
 549              	.LVL44:
 353:.././simpleserial/simpleserial.c **** 	{
 550              		.loc 1 353 5 view .LVU144
 551 0032 3B42     		tst	r3, r7
 552 0034 18D0     		beq	.L37
 553              	.LBB9:
 355:.././simpleserial/simpleserial.c **** 		char buff[2];
 554              		.loc 1 355 3 is_stmt 1 view .LVU145
 355:.././simpleserial/simpleserial.c **** 		char buff[2];
 555              		.loc 1 355 11 is_stmt 0 view .LVU146
 556 0036 0023     		movs	r3, #0
 557 0038 6A46     		mov	r2, sp
 558 003a 1370     		strb	r3, [r2]
 356:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 559              		.loc 1 356 3 is_stmt 1 view .LVU147
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 560              		.loc 1 357 3 view .LVU148
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 561              		.loc 1 357 13 is_stmt 0 view .LVU149
 562 003c FFF7FEFF 		bl	getch
 563              	.LVL45:
 357:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 564              		.loc 1 357 11 view .LVU150
 565 0040 C022     		movs	r2, #192
 566 0042 6B46     		mov	r3, sp
 567 0044 9B18     		adds	r3, r3, r2
 568 0046 1870     		strb	r0, [r3]
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 569              		.loc 1 358 3 is_stmt 1 view .LVU151
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 570              		.loc 1 358 13 is_stmt 0 view .LVU152
 571 0048 FFF7FEFF 		bl	getch
 572              	.LVL46:
 358:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 573              		.loc 1 358 11 view .LVU153
 574 004c C122     		movs	r2, #193
 575 004e 6B46     		mov	r3, sp
 576 0050 9B18     		adds	r3, r3, r2
 577 0052 1870     		strb	r0, [r3]
 359:.././simpleserial/simpleserial.c **** 			return;
 578              		.loc 1 359 3 is_stmt 1 view .LVU154
 359:.././simpleserial/simpleserial.c **** 			return;
 579              		.loc 1 359 7 is_stmt 0 view .LVU155
 580 0054 6A46     		mov	r2, sp
 581 0056 3800     		movs	r0, r7
 582 0058 30A9     		add	r1, sp, #192
 583 005a FFF7FEFF 		bl	hex_decode
 584              	.LVL47:
 359:.././simpleserial/simpleserial.c **** 			return;
 585              		.loc 1 359 6 view .LVU156
 586 005e 0028     		cmp	r0, #0
 587 0060 DAD1     		bne	.L33
 361:.././simpleserial/simpleserial.c **** 	}
 588              		.loc 1 361 3 is_stmt 1 view .LVU157
 361:.././simpleserial/simpleserial.c **** 	}
 589              		.loc 1 361 21 is_stmt 0 view .LVU158
 590 0062 6B46     		mov	r3, sp
 591 0064 1B78     		ldrb	r3, [r3]
 592 0066 7360     		str	r3, [r6, #4]
 593              	.L37:
 594              	.LBE9:
 342:.././simpleserial/simpleserial.c **** 	{
 595              		.loc 1 342 10 discriminator 1 view .LVU159
 596 0068 0026     		movs	r6, #0
 597              	.L43:
 598              	.LVL48:
 599              	.LBB10:
 365:.././simpleserial/simpleserial.c **** 	{
 600              		.loc 1 365 17 is_stmt 1 discriminator 1 view .LVU160
 365:.././simpleserial/simpleserial.c **** 	{
 601              		.loc 1 365 36 is_stmt 0 discriminator 1 view .LVU161
 602 006a 2B19     		adds	r3, r5, r4
 365:.././simpleserial/simpleserial.c **** 	{
 603              		.loc 1 365 22 discriminator 1 view .LVU162
 604 006c 5B68     		ldr	r3, [r3, #4]
 605 006e 5B00     		lsls	r3, r3, #1
 365:.././simpleserial/simpleserial.c **** 	{
 606              		.loc 1 365 2 discriminator 1 view .LVU163
 607 0070 B342     		cmp	r3, r6
 608 0072 15D8     		bhi	.L44
 609              	.LBE10:
 377:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 610              		.loc 1 377 2 is_stmt 1 view .LVU164
 377:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 611              		.loc 1 377 6 is_stmt 0 view .LVU165
 612 0074 FFF7FEFF 		bl	getch
 613              	.LVL49:
 378:.././simpleserial/simpleserial.c **** 		return;
 614              		.loc 1 378 2 is_stmt 1 view .LVU166
 378:.././simpleserial/simpleserial.c **** 		return;
 615              		.loc 1 378 4 is_stmt 0 view .LVU167
 616 0078 0A28     		cmp	r0, #10
 617 007a 01D0     		beq	.L45
 378:.././simpleserial/simpleserial.c **** 		return;
 618              		.loc 1 378 15 discriminator 1 view .LVU168
 619 007c 0D28     		cmp	r0, #13
 620 007e CBD1     		bne	.L33
 621              	.L45:
 383:.././simpleserial/simpleserial.c **** 		return;
 622              		.loc 1 383 2 is_stmt 1 view .LVU169
 383:.././simpleserial/simpleserial.c **** 		return;
 623              		.loc 1 383 29 is_stmt 0 view .LVU170
 624 0080 2C19     		adds	r4, r5, r4
 625 0082 6568     		ldr	r5, [r4, #4]
 383:.././simpleserial/simpleserial.c **** 		return;
 626              		.loc 1 383 5 view .LVU171
 627 0084 6A46     		mov	r2, sp
 628 0086 2800     		movs	r0, r5
 629              	.LVL50:
 383:.././simpleserial/simpleserial.c **** 		return;
 630              		.loc 1 383 5 view .LVU172
 631 0088 30A9     		add	r1, sp, #192
 632 008a FFF7FEFF 		bl	hex_decode
 633              	.LVL51:
 383:.././simpleserial/simpleserial.c **** 		return;
 634              		.loc 1 383 4 view .LVU173
 635 008e 0028     		cmp	r0, #0
 636 0090 C2D1     		bne	.L33
 387:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 637              		.loc 1 387 2 is_stmt 1 view .LVU174
 388:.././simpleserial/simpleserial.c **** 
 638              		.loc 1 388 2 view .LVU175
 388:.././simpleserial/simpleserial.c **** 
 639              		.loc 1 388 11 is_stmt 0 view .LVU176
 640 0092 6846     		mov	r0, sp
 641 0094 A368     		ldr	r3, [r4, #8]
 642 0096 E9B2     		uxtb	r1, r5
 643 0098 9847     		blx	r3
 644              	.LVL52:
 645 009a BDE7     		b	.L33
 646              	.LVL53:
 647              	.L35:
 342:.././simpleserial/simpleserial.c **** 	{
 648              		.loc 1 342 35 is_stmt 1 discriminator 2 view .LVU177
 342:.././simpleserial/simpleserial.c **** 	{
 649              		.loc 1 342 38 is_stmt 0 discriminator 2 view .LVU178
 650 009c 0133     		adds	r3, r3, #1
 651              	.LVL54:
 342:.././simpleserial/simpleserial.c **** 	{
 652              		.loc 1 342 38 discriminator 2 view .LVU179
 653 009e B8E7     		b	.L34
 654              	.LVL55:
 655              	.L44:
 656              	.LBB11:
 367:.././simpleserial/simpleserial.c **** 
 657              		.loc 1 367 3 is_stmt 1 view .LVU180
 367:.././simpleserial/simpleserial.c **** 
 658              		.loc 1 367 7 is_stmt 0 view .LVU181
 659 00a0 FFF7FEFF 		bl	getch
 660              	.LVL56:
 370:.././simpleserial/simpleserial.c **** 			return;
 661              		.loc 1 370 3 is_stmt 1 view .LVU182
 370:.././simpleserial/simpleserial.c **** 			return;
 662              		.loc 1 370 5 is_stmt 0 view .LVU183
 663 00a4 0A28     		cmp	r0, #10
 664 00a6 B7D0     		beq	.L33
 370:.././simpleserial/simpleserial.c **** 			return;
 665              		.loc 1 370 16 discriminator 1 view .LVU184
 666 00a8 0D28     		cmp	r0, #13
 667 00aa B5D0     		beq	.L33
 373:.././simpleserial/simpleserial.c **** 	}
 668              		.loc 1 373 3 is_stmt 1 discriminator 2 view .LVU185
 373:.././simpleserial/simpleserial.c **** 	}
 669              		.loc 1 373 16 is_stmt 0 discriminator 2 view .LVU186
 670 00ac 30AB     		add	r3, sp, #192
 671 00ae F054     		strb	r0, [r6, r3]
 365:.././simpleserial/simpleserial.c **** 	{
 672              		.loc 1 365 42 is_stmt 1 discriminator 2 view .LVU187
 365:.././simpleserial/simpleserial.c **** 	{
 673              		.loc 1 365 43 is_stmt 0 discriminator 2 view .LVU188
 674 00b0 0136     		adds	r6, r6, #1
 675              	.LVL57:
 365:.././simpleserial/simpleserial.c **** 	{
 676              		.loc 1 365 43 discriminator 2 view .LVU189
 677 00b2 DAE7     		b	.L43
 678              	.L57:
 679              		.align	2
 680              	.L56:
 681 00b4 BCFDFFFF 		.word	-580
 682 00b8 00000000 		.word	.LANCHOR0
 683 00bc 04000000 		.word	commands
 684              	.LBE11:
 685              		.cfi_endproc
 686              	.LFE8:
 688              		.section	.text.simpleserial_put,"ax",%progbits
 689              		.align	1
 690              		.global	simpleserial_put
 691              		.syntax unified
 692              		.code	16
 693              		.thumb_func
 694              		.fpu softvfp
 696              	simpleserial_put:
 697              	.LVL58:
 698              	.LFB9:
 395:.././simpleserial/simpleserial.c **** 
 396:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 397:.././simpleserial/simpleserial.c **** {
 699              		.loc 1 397 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		.loc 1 397 1 is_stmt 0 view .LVU191
 704 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 705              	.LCFI7:
 706              		.cfi_def_cfa_offset 24
 707              		.cfi_offset 3, -24
 708              		.cfi_offset 4, -20
 709              		.cfi_offset 5, -16
 710              		.cfi_offset 6, -12
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713              		.loc 1 397 1 view .LVU192
 714 0002 0D00     		movs	r5, r1
 398:.././simpleserial/simpleserial.c **** 	// Write first character
 399:.././simpleserial/simpleserial.c **** 	putch(c);
 715              		.loc 1 399 2 is_stmt 1 view .LVU193
 397:.././simpleserial/simpleserial.c **** 	// Write first character
 716              		.loc 1 397 1 is_stmt 0 view .LVU194
 717 0004 1400     		movs	r4, r2
 718              	.LBB12:
 400:.././simpleserial/simpleserial.c **** 
 401:.././simpleserial/simpleserial.c **** 	// Write each byte as two nibbles
 402:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < size; i++)
 403:.././simpleserial/simpleserial.c **** 	{
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] >> 4 ]);
 405:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 719              		.loc 1 405 30 view .LVU195
 720 0006 0F27     		movs	r7, #15
 721              	.LBE12:
 399:.././simpleserial/simpleserial.c **** 
 722              		.loc 1 399 2 view .LVU196
 723 0008 FFF7FEFF 		bl	putch
 724              	.LVL59:
 402:.././simpleserial/simpleserial.c **** 	{
 725              		.loc 1 402 2 is_stmt 1 view .LVU197
 726              	.LBB13:
 402:.././simpleserial/simpleserial.c **** 	{
 727              		.loc 1 402 6 view .LVU198
 402:.././simpleserial/simpleserial.c **** 	{
 728              		.loc 1 402 6 is_stmt 0 view .LVU199
 729 000c 6519     		adds	r5, r4, r5
 730              	.LVL60:
 731              	.L59:
 402:.././simpleserial/simpleserial.c **** 	{
 732              		.loc 1 402 17 is_stmt 1 discriminator 1 view .LVU200
 402:.././simpleserial/simpleserial.c **** 	{
 733              		.loc 1 402 2 is_stmt 0 discriminator 1 view .LVU201
 734 000e AC42     		cmp	r4, r5
 735 0010 03D1     		bne	.L60
 736              	.LBE13:
 406:.././simpleserial/simpleserial.c **** 	}
 407:.././simpleserial/simpleserial.c **** 
 408:.././simpleserial/simpleserial.c **** 	// Write trailing '\n'
 409:.././simpleserial/simpleserial.c **** 	putch('\n');
 737              		.loc 1 409 2 is_stmt 1 view .LVU202
 738 0012 0A20     		movs	r0, #10
 739 0014 FFF7FEFF 		bl	putch
 740              	.LVL61:
 410:.././simpleserial/simpleserial.c **** }
 741              		.loc 1 410 1 is_stmt 0 view .LVU203
 742              		@ sp needed
 743              	.LVL62:
 744              		.loc 1 410 1 view .LVU204
 745 0018 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 746              	.LVL63:
 747              	.L60:
 748              	.LBB14:
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 749              		.loc 1 404 3 is_stmt 1 discriminator 3 view .LVU205
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 750              		.loc 1 404 30 is_stmt 0 discriminator 3 view .LVU206
 751 001a 2378     		ldrb	r3, [r4]
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 752              		.loc 1 404 3 discriminator 3 view .LVU207
 753 001c 054E     		ldr	r6, .L61
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 754              		.loc 1 404 30 discriminator 3 view .LVU208
 755 001e 1B09     		lsrs	r3, r3, #4
 404:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 756              		.loc 1 404 3 discriminator 3 view .LVU209
 757 0020 F05C     		ldrb	r0, [r6, r3]
 758 0022 FFF7FEFF 		bl	putch
 759              	.LVL64:
 405:.././simpleserial/simpleserial.c **** 	}
 760              		.loc 1 405 3 is_stmt 1 discriminator 3 view .LVU210
 405:.././simpleserial/simpleserial.c **** 	}
 761              		.loc 1 405 30 is_stmt 0 discriminator 3 view .LVU211
 762 0026 2378     		ldrb	r3, [r4]
 763 0028 0134     		adds	r4, r4, #1
 764              	.LVL65:
 405:.././simpleserial/simpleserial.c **** 	}
 765              		.loc 1 405 30 discriminator 3 view .LVU212
 766 002a 3B40     		ands	r3, r7
 405:.././simpleserial/simpleserial.c **** 	}
 767              		.loc 1 405 3 discriminator 3 view .LVU213
 768 002c F05C     		ldrb	r0, [r6, r3]
 769 002e FFF7FEFF 		bl	putch
 770              	.LVL66:
 402:.././simpleserial/simpleserial.c **** 	{
 771              		.loc 1 402 27 is_stmt 1 discriminator 3 view .LVU214
 402:.././simpleserial/simpleserial.c **** 	{
 772              		.loc 1 402 27 is_stmt 0 discriminator 3 view .LVU215
 773 0032 ECE7     		b	.L59
 774              	.L62:
 775              		.align	2
 776              	.L61:
 777 0034 00000000 		.word	.LANCHOR1
 778              	.LBE14:
 779              		.cfi_endproc
 780              	.LFE9:
 782              		.section	.text.ss_num_commands,"ax",%progbits
 783              		.align	1
 784              		.global	ss_num_commands
 785              		.syntax unified
 786              		.code	16
 787              		.thumb_func
 788              		.fpu softvfp
 790              	ss_num_commands:
 791              	.LVL67:
 792              	.LFB2:
 239:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 793              		.loc 1 239 1 is_stmt 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 8
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 797              		.loc 1 240 5 view .LVU217
 239:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 798              		.loc 1 239 1 is_stmt 0 view .LVU218
 799 0000 07B5     		push	{r0, r1, r2, lr}
 800              	.LCFI8:
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 0, -16
 803              		.cfi_offset 1, -12
 804              		.cfi_offset 2, -8
 805              		.cfi_offset 14, -4
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 806              		.loc 1 240 13 view .LVU219
 807 0002 6B46     		mov	r3, sp
 808 0004 DA1D     		adds	r2, r3, #7
 809 0006 044B     		ldr	r3, .L64
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 810              		.loc 1 241 5 view .LVU220
 811 0008 7220     		movs	r0, #114
 812              	.LVL68:
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 813              		.loc 1 240 13 view .LVU221
 814 000a 1B68     		ldr	r3, [r3]
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 815              		.loc 1 241 5 view .LVU222
 816 000c 0121     		movs	r1, #1
 817              	.LVL69:
 240:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 818              		.loc 1 240 13 view .LVU223
 819 000e 1370     		strb	r3, [r2]
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 820              		.loc 1 241 5 is_stmt 1 view .LVU224
 243:.././simpleserial/simpleserial.c **** 
 821              		.loc 1 243 1 is_stmt 0 view .LVU225
 822              		@ sp needed
 241:.././simpleserial/simpleserial.c ****     return 0x00;
 823              		.loc 1 241 5 view .LVU226
 824 0010 FFF7FEFF 		bl	simpleserial_put
 825              	.LVL70:
 242:.././simpleserial/simpleserial.c **** }
 826              		.loc 1 242 5 is_stmt 1 view .LVU227
 243:.././simpleserial/simpleserial.c **** 
 827              		.loc 1 243 1 is_stmt 0 view .LVU228
 828 0014 0020     		movs	r0, #0
 829 0016 0EBD     		pop	{r1, r2, r3, pc}
 830              	.L65:
 831              		.align	2
 832              	.L64:
 833 0018 00000000 		.word	.LANCHOR0
 834              		.cfi_endproc
 835              	.LFE2:
 837              		.section	.text.ss_get_commands,"ax",%progbits
 838              		.align	1
 839              		.global	ss_get_commands
 840              		.syntax unified
 841              		.code	16
 842              		.thumb_func
 843              		.fpu softvfp
 845              	ss_get_commands:
 846              	.LVL71:
 847              	.LFB3:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 848              		.loc 1 252 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 48
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 253:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 852              		.loc 1 253 5 view .LVU230
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 853              		.loc 1 254 5 view .LVU231
 854              	.LBB15:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 855              		.loc 1 254 10 view .LVU232
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 856              		.loc 1 254 10 is_stmt 0 view .LVU233
 857 0000 0322     		movs	r2, #3
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 858              		.loc 1 254 43 view .LVU234
 859 0002 114B     		ldr	r3, .L69
 860              	.LBE15:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 861              		.loc 1 252 1 view .LVU235
 862 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 863              	.LCFI9:
 864              		.cfi_def_cfa_offset 20
 865              		.cfi_offset 4, -20
 866              		.cfi_offset 5, -16
 867              		.cfi_offset 6, -12
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0006 9446     		mov	ip, r2
 871              	.LBB16:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 872              		.loc 1 254 43 view .LVU236
 873 0008 1C68     		ldr	r4, [r3]
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 874              		.loc 1 254 18 view .LVU237
 875 000a 0023     		movs	r3, #0
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 876              		.loc 1 255 40 view .LVU238
 877 000c 0F4D     		ldr	r5, .L69+4
 878              	.LBE16:
 252:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 879              		.loc 1 252 1 view .LVU239
 880 000e 8DB0     		sub	sp, sp, #52
 881              	.LCFI10:
 882              		.cfi_def_cfa_offset 72
 883              	.LBB17:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 884              		.loc 1 254 43 view .LVU240
 885 0010 E6B2     		uxtb	r6, r4
 886              	.LVL72:
 887              	.L67:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 888              		.loc 1 254 25 is_stmt 1 discriminator 1 view .LVU241
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 889              		.loc 1 254 5 is_stmt 0 discriminator 1 view .LVU242
 890 0012 B342     		cmp	r3, r6
 891 0014 09DB     		blt	.L68
 892              	.LBE17:
 260:.././simpleserial/simpleserial.c ****     return 0x00;
 893              		.loc 1 260 5 is_stmt 1 view .LVU243
 894 0016 6146     		mov	r1, ip
 895 0018 6143     		muls	r1, r4
 896 001a 6A46     		mov	r2, sp
 897 001c 7220     		movs	r0, #114
 898 001e C9B2     		uxtb	r1, r1
 899 0020 FFF7FEFF 		bl	simpleserial_put
 900              	.LVL73:
 261:.././simpleserial/simpleserial.c **** }
 901              		.loc 1 261 5 view .LVU244
 262:.././simpleserial/simpleserial.c **** 
 902              		.loc 1 262 1 is_stmt 0 view .LVU245
 903 0024 0020     		movs	r0, #0
 904 0026 0DB0     		add	sp, sp, #52
 905              		@ sp needed
 906 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 907              	.LVL74:
 908              	.L68:
 909              	.LBB18:
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 910              		.loc 1 255 9 is_stmt 1 discriminator 3 view .LVU246
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 911              		.loc 1 255 27 is_stmt 0 discriminator 3 view .LVU247
 912 002a 6246     		mov	r2, ip
 913 002c 6946     		mov	r1, sp
 914 002e 5A43     		muls	r2, r3
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 915              		.loc 1 255 40 discriminator 3 view .LVU248
 916 0030 1801     		lsls	r0, r3, #4
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 917              		.loc 1 255 27 discriminator 3 view .LVU249
 918 0032 475D     		ldrb	r7, [r0, r5]
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 919              		.loc 1 256 42 discriminator 3 view .LVU250
 920 0034 2818     		adds	r0, r5, r0
 255:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 921              		.loc 1 255 27 discriminator 3 view .LVU251
 922 0036 8F54     		strb	r7, [r1, r2]
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 923              		.loc 1 256 9 is_stmt 1 discriminator 3 view .LVU252
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 924              		.loc 1 256 29 is_stmt 0 discriminator 3 view .LVU253
 925 0038 4168     		ldr	r1, [r0, #4]
 257:.././simpleserial/simpleserial.c ****     }
 926              		.loc 1 257 31 discriminator 3 view .LVU254
 927 003a 007B     		ldrb	r0, [r0, #12]
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 928              		.loc 1 256 29 discriminator 3 view .LVU255
 929 003c 6A44     		add	r2, r2, sp
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 930              		.loc 1 254 53 discriminator 3 view .LVU256
 931 003e 0133     		adds	r3, r3, #1
 932              	.LVL75:
 256:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 933              		.loc 1 256 29 discriminator 3 view .LVU257
 934 0040 5170     		strb	r1, [r2, #1]
 257:.././simpleserial/simpleserial.c ****     }
 935              		.loc 1 257 9 is_stmt 1 discriminator 3 view .LVU258
 257:.././simpleserial/simpleserial.c ****     }
 936              		.loc 1 257 31 is_stmt 0 discriminator 3 view .LVU259
 937 0042 9070     		strb	r0, [r2, #2]
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 938              		.loc 1 254 52 is_stmt 1 discriminator 3 view .LVU260
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 939              		.loc 1 254 53 is_stmt 0 discriminator 3 view .LVU261
 940 0044 DBB2     		uxtb	r3, r3
 941              	.LVL76:
 254:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 942              		.loc 1 254 53 discriminator 3 view .LVU262
 943 0046 E4E7     		b	.L67
 944              	.L70:
 945              		.align	2
 946              	.L69:
 947 0048 00000000 		.word	.LANCHOR0
 948 004c 04000000 		.word	commands
 949              	.LBE18:
 950              		.cfi_endproc
 951              	.LFE3:
 953              		.section	.rodata
 954              		.set	.LANCHOR1,. + 0
 957              	hex_lookup:
 958 0000 30313233 		.ascii	"0123456789ABCDEF"
 958      34353637 
 958      38394142 
 958      43444546 
 959              		.bss
 960              		.align	2
 961              		.set	.LANCHOR0,. + 0
 964              	num_commands:
 965 0000 00000000 		.space	4
 968              	commands:
 969 0004 00000000 		.space	256
 969      00000000 
 969      00000000 
 969      00000000 
 969      00000000 
 970              		.text
 971              	.Letext0:
 972              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 973              		.file 3 ".././hal/stm32f0/stm32f0_hal.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 simpleserial.c
     /tmp/ccz8UqDV.s:16     .text.check_version:0000000000000000 $t
     /tmp/ccz8UqDV.s:24     .text.check_version:0000000000000000 check_version
     /tmp/ccz8UqDV.s:44     .text.ss_crc:0000000000000000 $t
     /tmp/ccz8UqDV.s:51     .text.ss_crc:0000000000000000 ss_crc
     /tmp/ccz8UqDV.s:126    .text.hex_decode:0000000000000000 $t
     /tmp/ccz8UqDV.s:133    .text.hex_decode:0000000000000000 hex_decode
     /tmp/ccz8UqDV.s:312    .text.simpleserial_addcmd_flags:0000000000000000 $t
     /tmp/ccz8UqDV.s:319    .text.simpleserial_addcmd_flags:0000000000000000 simpleserial_addcmd_flags
     /tmp/ccz8UqDV.s:381    .text.simpleserial_addcmd_flags:0000000000000028 $d
     /tmp/ccz8UqDV.s:968    .bss:0000000000000004 commands
     /tmp/ccz8UqDV.s:387    .text.simpleserial_addcmd:0000000000000000 $t
     /tmp/ccz8UqDV.s:394    .text.simpleserial_addcmd:0000000000000000 simpleserial_addcmd
     /tmp/ccz8UqDV.s:419    .text.simpleserial_init:0000000000000000 $t
     /tmp/ccz8UqDV.s:426    .text.simpleserial_init:0000000000000000 simpleserial_init
     /tmp/ccz8UqDV.s:463    .text.simpleserial_init:0000000000000024 $d
     /tmp/ccz8UqDV.s:845    .text.ss_get_commands:0000000000000000 ss_get_commands
     /tmp/ccz8UqDV.s:790    .text.ss_num_commands:0000000000000000 ss_num_commands
     /tmp/ccz8UqDV.s:470    .text.simpleserial_get:0000000000000000 $t
     /tmp/ccz8UqDV.s:477    .text.simpleserial_get:0000000000000000 simpleserial_get
     /tmp/ccz8UqDV.s:681    .text.simpleserial_get:00000000000000b4 $d
     /tmp/ccz8UqDV.s:689    .text.simpleserial_put:0000000000000000 $t
     /tmp/ccz8UqDV.s:696    .text.simpleserial_put:0000000000000000 simpleserial_put
     /tmp/ccz8UqDV.s:777    .text.simpleserial_put:0000000000000034 $d
     /tmp/ccz8UqDV.s:783    .text.ss_num_commands:0000000000000000 $t
     /tmp/ccz8UqDV.s:833    .text.ss_num_commands:0000000000000018 $d
     /tmp/ccz8UqDV.s:838    .text.ss_get_commands:0000000000000000 $t
     /tmp/ccz8UqDV.s:947    .text.ss_get_commands:0000000000000048 $d
     /tmp/ccz8UqDV.s:957    .rodata:0000000000000000 hex_lookup
     /tmp/ccz8UqDV.s:960    .bss:0000000000000000 $d
     /tmp/ccz8UqDV.s:964    .bss:0000000000000000 num_commands

UNDEFINED SYMBOLS
getch
putch
