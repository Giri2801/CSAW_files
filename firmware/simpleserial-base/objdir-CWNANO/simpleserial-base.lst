   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"simpleserial-base.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.get_key,"ax",%progbits
  16              		.align	1
  17              		.global	get_key
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	get_key:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "simpleserial-base.c"
   1:simpleserial-base.c **** /*
   2:simpleserial-base.c ****     This file is part of the ChipWhisperer Example Targets
   3:simpleserial-base.c ****     Copyright (C) 2012-2017 NewAE Technology Inc.
   4:simpleserial-base.c **** 
   5:simpleserial-base.c ****     This program is free software: you can redistribute it and/or modify
   6:simpleserial-base.c ****     it under the terms of the GNU General Public License as published by
   7:simpleserial-base.c ****     the Free Software Foundation, either version 3 of the License, or
   8:simpleserial-base.c ****     (at your option) any later version.
   9:simpleserial-base.c **** 
  10:simpleserial-base.c ****     This program is distributed in the hope that it will be useful,
  11:simpleserial-base.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:simpleserial-base.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:simpleserial-base.c ****     GNU General Public License for more details.
  14:simpleserial-base.c **** 
  15:simpleserial-base.c ****     You should have received a copy of the GNU General Public License
  16:simpleserial-base.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:simpleserial-base.c **** */
  18:simpleserial-base.c **** 
  19:simpleserial-base.c **** #include "hal.h"
  20:simpleserial-base.c **** #include <stdint.h>
  21:simpleserial-base.c **** #include <stdlib.h>
  22:simpleserial-base.c **** 
  23:simpleserial-base.c **** #include "simpleserial.h"
  24:simpleserial-base.c **** 
  25:simpleserial-base.c **** uint8_t get_key(uint8_t* k, uint8_t len)
  26:simpleserial-base.c **** {
  28              		.loc 1 26 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  27:simpleserial-base.c **** 	// Load key here
  28:simpleserial-base.c **** 	return 0x00;
  33              		.loc 1 28 2 view .LVU1
  29:simpleserial-base.c **** }
  34              		.loc 1 29 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		.loc 1 29 1 view .LVU3
  38              		@ sp needed
  39 0002 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE0:
  43              		.section	.text.get_pt,"ax",%progbits
  44              		.align	1
  45              		.global	get_pt
  46              		.syntax unified
  47              		.code	16
  48              		.thumb_func
  49              		.fpu softvfp
  51              	get_pt:
  52              	.LVL2:
  53              	.LFB1:
  30:simpleserial-base.c **** 
  31:simpleserial-base.c **** #if SS_VER == SS_VER_2_1
  32:simpleserial-base.c **** uint8_t get_pt(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t* pt)
  33:simpleserial-base.c **** #else
  34:simpleserial-base.c **** uint8_t get_pt(uint8_t* pt, uint8_t len)
  35:simpleserial-base.c **** #endif
  36:simpleserial-base.c **** 
  37:simpleserial-base.c **** {
  54              		.loc 1 37 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  38:simpleserial-base.c **** 	/**********************************
  39:simpleserial-base.c **** 	* Start user-specific code here. */
  40:simpleserial-base.c **** 	trigger_high();
  58              		.loc 1 40 2 view .LVU5
  37:simpleserial-base.c **** 	/**********************************
  59              		.loc 1 37 1 is_stmt 0 view .LVU6
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  37:simpleserial-base.c **** 	/**********************************
  65              		.loc 1 37 1 view .LVU7
  66 0002 0400     		movs	r4, r0
  67              		.loc 1 40 2 view .LVU8
  68 0004 FFF7FEFF 		bl	trigger_high
  69              	.LVL3:
  41:simpleserial-base.c **** 
  42:simpleserial-base.c **** 	//16 hex bytes held in 'pt' were sent
  43:simpleserial-base.c **** 	//from the computer. Store your response
  44:simpleserial-base.c **** 	//back into 'pt', which will send 16 bytes
  45:simpleserial-base.c **** 	//back to computer. Can ignore of course if
  46:simpleserial-base.c **** 	//not needed
  47:simpleserial-base.c **** 
  48:simpleserial-base.c **** 	trigger_low();
  70              		.loc 1 48 2 is_stmt 1 view .LVU9
  71 0008 FFF7FEFF 		bl	trigger_low
  72              	.LVL4:
  49:simpleserial-base.c **** 	/* End user-specific code here. *
  50:simpleserial-base.c **** 	********************************/
  51:simpleserial-base.c **** 	simpleserial_put('r', 16, pt);
  73              		.loc 1 51 2 view .LVU10
  74 000c 2200     		movs	r2, r4
  75 000e 1021     		movs	r1, #16
  76 0010 7220     		movs	r0, #114
  77 0012 FFF7FEFF 		bl	simpleserial_put
  78              	.LVL5:
  52:simpleserial-base.c **** 	return 0x00;
  79              		.loc 1 52 2 view .LVU11
  53:simpleserial-base.c **** }
  80              		.loc 1 53 1 is_stmt 0 view .LVU12
  81              		@ sp needed
  82 0016 0020     		movs	r0, #0
  83              	.LVL6:
  84              		.loc 1 53 1 view .LVU13
  85 0018 10BD     		pop	{r4, pc}
  86              		.cfi_endproc
  87              	.LFE1:
  89              		.section	.text.reset,"ax",%progbits
  90              		.align	1
  91              		.global	reset
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	reset:
  98              	.LFB5:
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 0020     		movs	r0, #0
 104              		@ sp needed
 105 0002 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE5:
 109              		.section	.text.startup.main,"ax",%progbits
 110              		.align	1
 111              		.global	main
 112              		.syntax unified
 113              		.code	16
 114              		.thumb_func
 115              		.fpu softvfp
 117              	main:
 118              	.LFB3:
  54:simpleserial-base.c **** 
  55:simpleserial-base.c **** uint8_t reset(uint8_t* x, uint8_t len)
  56:simpleserial-base.c **** {
  57:simpleserial-base.c **** 	// Reset key here if needed
  58:simpleserial-base.c **** 	return 0x00;
  59:simpleserial-base.c **** }
  60:simpleserial-base.c **** 
  61:simpleserial-base.c **** 
  62:simpleserial-base.c **** int main(void)
  63:simpleserial-base.c **** {
 119              		.loc 1 63 1 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
  64:simpleserial-base.c ****     platform_init();
 124              		.loc 1 64 5 view .LVU15
  63:simpleserial-base.c ****     platform_init();
 125              		.loc 1 63 1 is_stmt 0 view .LVU16
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131              		.loc 1 64 5 view .LVU17
 132 0002 FFF7FEFF 		bl	platform_init
 133              	.LVL7:
  65:simpleserial-base.c **** 	init_uart();
 134              		.loc 1 65 2 is_stmt 1 view .LVU18
 135 0006 FFF7FEFF 		bl	init_uart
 136              	.LVL8:
  66:simpleserial-base.c **** 	trigger_setup();
 137              		.loc 1 66 2 view .LVU19
 138 000a FFF7FEFF 		bl	trigger_setup
 139              	.LVL9:
  67:simpleserial-base.c **** 
  68:simpleserial-base.c ****  	/* Uncomment this to get a HELLO message for debug */
  69:simpleserial-base.c **** 	/*
  70:simpleserial-base.c **** 	putch('h');
  71:simpleserial-base.c **** 	putch('e');
  72:simpleserial-base.c **** 	putch('l');
  73:simpleserial-base.c **** 	putch('l');
  74:simpleserial-base.c **** 	putch('o');
  75:simpleserial-base.c **** 	putch('\n');
  76:simpleserial-base.c **** 	*/
  77:simpleserial-base.c **** 
  78:simpleserial-base.c **** 	simpleserial_init();
 140              		.loc 1 78 2 view .LVU20
 141 000e FFF7FEFF 		bl	simpleserial_init
 142              	.LVL10:
  79:simpleserial-base.c **** 	simpleserial_addcmd('p', 16, get_pt);
 143              		.loc 1 79 2 view .LVU21
 144 0012 1021     		movs	r1, #16
 145 0014 084A     		ldr	r2, .L6
 146 0016 7020     		movs	r0, #112
 147 0018 FFF7FEFF 		bl	simpleserial_addcmd
 148              	.LVL11:
  80:simpleserial-base.c **** #if SS_VER != SS_VER_2_1
  81:simpleserial-base.c **** 	simpleserial_addcmd('k', 16, get_key);
 149              		.loc 1 81 2 view .LVU22
 150 001c 1021     		movs	r1, #16
 151 001e 074A     		ldr	r2, .L6+4
 152 0020 6B20     		movs	r0, #107
 153 0022 FFF7FEFF 		bl	simpleserial_addcmd
 154              	.LVL12:
  82:simpleserial-base.c **** 	simpleserial_addcmd('x', 0, reset);
 155              		.loc 1 82 2 view .LVU23
 156 0026 0021     		movs	r1, #0
 157 0028 7820     		movs	r0, #120
 158 002a 054A     		ldr	r2, .L6+8
 159 002c FFF7FEFF 		bl	simpleserial_addcmd
 160              	.LVL13:
 161              	.L5:
  83:simpleserial-base.c **** #endif
  84:simpleserial-base.c **** 	while(1)
 162              		.loc 1 84 2 discriminator 1 view .LVU24
  85:simpleserial-base.c **** 		simpleserial_get();
 163              		.loc 1 85 3 discriminator 1 view .LVU25
 164 0030 FFF7FEFF 		bl	simpleserial_get
 165              	.LVL14:
  84:simpleserial-base.c **** 		simpleserial_get();
 166              		.loc 1 84 7 discriminator 1 view .LVU26
 167 0034 FCE7     		b	.L5
 168              	.L7:
 169 0036 C046     		.align	2
 170              	.L6:
 171 0038 00000000 		.word	get_pt
 172 003c 00000000 		.word	get_key
 173 0040 00000000 		.word	reset
 174              		.cfi_endproc
 175              	.LFE3:
 177              		.text
 178              	.Letext0:
 179              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 180              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 181              		.file 4 "/usr/include/newlib/sys/_types.h"
 182              		.file 5 "/usr/include/newlib/sys/reent.h"
 183              		.file 6 "/usr/include/newlib/sys/lock.h"
 184              		.file 7 "/usr/include/newlib/stdlib.h"
 185              		.file 8 ".././hal/hal.h"
 186              		.file 9 ".././hal/stm32f0/stm32f0_hal.h"
 187              		.file 10 ".././simpleserial/simpleserial.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 simpleserial-base.c
     /tmp/ccFi0hjO.s:16     .text.get_key:0000000000000000 $t
     /tmp/ccFi0hjO.s:24     .text.get_key:0000000000000000 get_key
     /tmp/ccFi0hjO.s:44     .text.get_pt:0000000000000000 $t
     /tmp/ccFi0hjO.s:51     .text.get_pt:0000000000000000 get_pt
     /tmp/ccFi0hjO.s:90     .text.reset:0000000000000000 $t
     /tmp/ccFi0hjO.s:97     .text.reset:0000000000000000 reset
     /tmp/ccFi0hjO.s:110    .text.startup.main:0000000000000000 $t
     /tmp/ccFi0hjO.s:117    .text.startup.main:0000000000000000 main
     /tmp/ccFi0hjO.s:171    .text.startup.main:0000000000000038 $d

UNDEFINED SYMBOLS
trigger_high
trigger_low
simpleserial_put
platform_init
init_uart
trigger_setup
simpleserial_init
simpleserial_addcmd
simpleserial_get
