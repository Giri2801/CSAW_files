   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GetTick,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_GetTick
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_GetTick:
  25              	.LFB37:
  26              		.file 1 ".././hal/stm32f0/stm32f0_hal_lowlevel.c"
   1:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    
   6:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */
   8:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
   9:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /*
  10:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  12:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  23:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  34:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */ 
  36:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  37:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  38:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal.h"
  39:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal_lowlevel.h"
  40:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_rcc.h"
  41:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_gpio.h"
  42:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_dma.h"
  43:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_uart.h"
  44:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_flash.h"
  45:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  46:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  47:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  49:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  27              		.loc 1 49 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	static uint32_t tick;
  32              		.loc 1 50 2 view .LVU1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  33              		.loc 1 51 2 view .LVU2
  34              		.loc 1 51 13 is_stmt 0 view .LVU3
  35 0000 024B     		ldr	r3, .L2
  52:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  36              		.loc 1 52 1 view .LVU4
  37              		@ sp needed
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  38              		.loc 1 51 13 view .LVU5
  39 0002 1868     		ldr	r0, [r3]
  40 0004 421C     		adds	r2, r0, #1
  41 0006 1A60     		str	r2, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  42              		.loc 1 51 16 is_stmt 1 view .LVU6
  43              		.loc 1 52 1 is_stmt 0 view .LVU7
  44 0008 7047     		bx	lr
  45              	.L3:
  46 000a C046     		.align	2
  47              	.L2:
  48 000c 00000000 		.word	.LANCHOR0
  49              		.cfi_endproc
  50              	.LFE37:
  52              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_RCC_GetSysClockFreq
  55              		.syntax unified
  56              		.code	16
  57              		.thumb_func
  58              		.fpu softvfp
  60              	HAL_RCC_GetSysClockFreq:
  61              	.LFB38:
  53:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  54:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
  55:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
  56:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 									 
  57:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000;
  58:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  59:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  60:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
  61:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  62              		.loc 1 61 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  67              		.loc 1 62 2 view .LVU9
  68              		.loc 1 62 9 is_stmt 0 view .LVU10
  69 0000 E120     		movs	r0, #225
  63:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  70              		.loc 1 63 1 view .LVU11
  71              		@ sp needed
  72 0002 C003     		lsls	r0, r0, #15
  73 0004 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE38:
  77              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
  78              		.align	1
  79              		.global	HAL_RCC_GetPCLK1Freq
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  83              		.fpu softvfp
  85              	HAL_RCC_GetPCLK1Freq:
  86              	.LFB54:
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 E120     		movs	r0, #225
  92              		@ sp needed
  93 0002 C003     		lsls	r0, r0, #15
  94 0004 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE54:
  98              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
  99              		.align	1
 100              		.global	HAL_RCC_GetPCLK2Freq
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 104              		.fpu softvfp
 106              	HAL_RCC_GetPCLK2Freq:
 107              	.LFB56:
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0000 E120     		movs	r0, #225
 113              		@ sp needed
 114 0002 C003     		lsls	r0, r0, #15
 115 0004 7047     		bx	lr
 116              		.cfi_endproc
 117              	.LFE56:
 119              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 120              		.align	1
 121              		.global	HAL_RCC_OscConfig
 122              		.syntax unified
 123              		.code	16
 124              		.thumb_func
 125              		.fpu softvfp
 127              	HAL_RCC_OscConfig:
 128              	.LVL0:
 129              	.LFB41:
  64:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  65:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
  66:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  67:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  68:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  69:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  70:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  71:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
  72:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
  73:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
  74:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval PCLK2 frequency
  75:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  76:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
  77:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  78:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  79:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
  80:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return 7372800;
  81:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  82:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  83:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  84:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  85:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  86:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
  87:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  88:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  89:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  90:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
  91:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  92:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
  93:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
  94:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
  95:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
  96:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  97:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 130              		.loc 1 98 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 16
 133              		@ frame_needed = 0, uses_anonymous_args = 0
  99:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 134              		.loc 1 99 4 view .LVU13
 100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 102:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 135              		.loc 1 102 3 view .LVU14
 103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 136              		.loc 1 103 3 view .LVU15
 104:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 137              		.loc 1 106 3 view .LVU16
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 138              		.loc 1 98 1 is_stmt 0 view .LVU17
 139 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 140              	.LCFI0:
 141              		.cfi_def_cfa_offset 20
 142              		.cfi_offset 4, -20
 143              		.cfi_offset 5, -16
 144              		.cfi_offset 6, -12
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147              		.loc 1 106 5 view .LVU18
 148 0002 0368     		ldr	r3, [r0]
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 149              		.loc 1 98 1 view .LVU19
 150 0004 0500     		movs	r5, r0
 151 0006 85B0     		sub	sp, sp, #20
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 40
 154              		.loc 1 106 5 view .LVU20
 155 0008 DB07     		lsls	r3, r3, #31
 156 000a 2FD4     		bmi	.L8
 157              	.LVL1:
 158              	.L13:
 107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 110:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 118:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 125:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Check the HSE State */
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 131:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is ready */
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 138:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 140:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 141:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 142:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 159              		.loc 1 158 3 is_stmt 1 view .LVU21
 160              		.loc 1 158 5 is_stmt 0 view .LVU22
 161 000c 2B68     		ldr	r3, [r5]
 162 000e 9B07     		lsls	r3, r3, #30
 163 0010 00D5     		bpl	.LCB103
 164 0012 81E0     		b	.L9	@long jump
 165              	.LCB103:
 166              	.L25:
 159:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 160:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 170:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 175:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI State */
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 184:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is ready */
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                 
 200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 210:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 167              		.loc 1 223 3 is_stmt 1 view .LVU23
 168              		.loc 1 223 5 is_stmt 0 view .LVU24
 169 0014 2B68     		ldr	r3, [r5]
 170 0016 1B07     		lsls	r3, r3, #28
 171 0018 00D5     		bpl	.LCB111
 172 001a BCE0     		b	.L35	@long jump
 173              	.LCB111:
 174              	.L41:
 224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSI State */
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 237:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 239:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 241:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 242:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 248:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 175              		.loc 1 265 3 is_stmt 1 view .LVU25
 176              		.loc 1 265 5 is_stmt 0 view .LVU26
 177 001c 2B68     		ldr	r3, [r5]
 178 001e 5B07     		lsls	r3, r3, #29
 179 0020 00D5     		bpl	.LCB119
 180 0022 DFE0     		b	.L36	@long jump
 181              	.LCB119:
 182              	.L44:
 266:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 275:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 287:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 291:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 295:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 296:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 297:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 299:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 301:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 305:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 307:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 309:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 311:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 312:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 313:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 316:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 319:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 321:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 328:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 333:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 335:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 183              		.loc 1 337 3 is_stmt 1 view .LVU27
 184              		.loc 1 337 5 is_stmt 0 view .LVU28
 185 0024 2B68     		ldr	r3, [r5]
 186 0026 DB06     		lsls	r3, r3, #27
 187 0028 1AD5     		bpl	.L63
 338:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 188              		.loc 1 340 5 is_stmt 1 view .LVU29
 341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 189              		.loc 1 341 5 view .LVU30
 342:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the HSI14 State */
 344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 190              		.loc 1 344 5 view .LVU31
 191              		.loc 1 344 25 is_stmt 0 view .LVU32
 192 002a 6A69     		ldr	r2, [r5, #20]
 193 002c 0423     		movs	r3, #4
 194 002e B54C     		ldr	r4, .L104
 195              		.loc 1 344 7 view .LVU33
 196 0030 012A     		cmp	r2, #1
 197 0032 00D0     		beq	.LCB135
 198 0034 4AE1     		b	.L64	@long jump
 199              	.LCB135:
 345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 346:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 200              		.loc 1 347 7 is_stmt 1 view .LVU34
 201 0036 616B     		ldr	r1, [r4, #52]
 348:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_ENABLE();
 351:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 202              		.loc 1 356 13 is_stmt 0 view .LVU35
 203 0038 0227     		movs	r7, #2
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 204              		.loc 1 347 7 view .LVU36
 205 003a 0B43     		orrs	r3, r1
 206 003c 6363     		str	r3, [r4, #52]
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 207              		.loc 1 350 7 is_stmt 1 view .LVU37
 208 003e 636B     		ldr	r3, [r4, #52]
 209 0040 1A43     		orrs	r2, r3
 210 0042 6263     		str	r2, [r4, #52]
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 211              		.loc 1 353 7 view .LVU38
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 212              		.loc 1 353 19 is_stmt 0 view .LVU39
 213 0044 FFF7FEFF 		bl	HAL_GetTick
 214              	.LVL2:
 215 0048 0600     		movs	r6, r0
 216              	.LVL3:
 217              		.loc 1 356 7 is_stmt 1 view .LVU40
 218              	.L65:
 219              		.loc 1 356 12 view .LVU41
 220              		.loc 1 356 13 is_stmt 0 view .LVU42
 221 004a 636B     		ldr	r3, [r4, #52]
 222              		.loc 1 356 12 view .LVU43
 223 004c 3B42     		tst	r3, r7
 224 004e 00D1     		bne	.LCB157
 225 0050 35E1     		b	.L66	@long jump
 226              	.LCB157:
 227              	.LVL4:
 228              	.L102:
 357:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 360:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }      
 362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       } 
 363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 366:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 369:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 371:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 229              		.loc 1 373 7 is_stmt 1 view .LVU44
 230 0052 F821     		movs	r1, #248
 231 0054 626B     		ldr	r2, [r4, #52]
 232 0056 AB69     		ldr	r3, [r5, #24]
 233 0058 8A43     		bics	r2, r1
 234 005a DB00     		lsls	r3, r3, #3
 235 005c 1343     		orrs	r3, r2
 236 005e 6363     		str	r3, [r4, #52]
 237              	.L63:
 374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 379:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_DISABLE();
 382:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 393:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 397:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_HSI48_SUPPORT)
 398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 399:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 403:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 406:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 407:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 408:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 State */
 416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_ENABLE();
 420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 424:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         } 
 432:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_DISABLE();
 437:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 443:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 446:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 449:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_HSI48_SUPPORT */
 453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        
 454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 238              		.loc 1 456 3 view .LVU45
 457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 239              		.loc 1 457 3 view .LVU46
 240              		.loc 1 457 30 is_stmt 0 view .LVU47
 241 0060 296A     		ldr	r1, [r5, #32]
 242              		.loc 1 457 6 view .LVU48
 243 0062 0029     		cmp	r1, #0
 244 0064 00D0     		beq	.LCB176
 245 0066 59E1     		b	.L71	@long jump
 246              	.LCB176:
 247              	.LVL5:
 248              	.L77:
 458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the parameters */
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 477:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 480:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the main PLL. */
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 490:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 491:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 493:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 494:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is ready */
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 496:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 498:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 499:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 500:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 501:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 502:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 503:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 504:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 505:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 507:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 508:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 510:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 513:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 515:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 516:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 517:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 518:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 519:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 520:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 521:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 522:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 524:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 525:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 526:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 527:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 249              		.loc 1 527 10 view .LVU49
 250 0068 0020     		movs	r0, #0
 251 006a 13E0     		b	.L14
 252              	.LVL6:
 253              	.L8:
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 254              		.loc 1 109 5 is_stmt 1 view .LVU50
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 255              		.loc 1 112 5 view .LVU51
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 256              		.loc 1 112 9 is_stmt 0 view .LVU52
 257 006c 0C21     		movs	r1, #12
 258 006e A54C     		ldr	r4, .L104
 259 0070 6268     		ldr	r2, [r4, #4]
 260 0072 0A40     		ands	r2, r1
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 261              		.loc 1 112 7 view .LVU53
 262 0074 042A     		cmp	r2, #4
 263 0076 06D0     		beq	.L11
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 264              		.loc 1 113 13 view .LVU54
 265 0078 6368     		ldr	r3, [r4, #4]
 266 007a 0B40     		ands	r3, r1
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 267              		.loc 1 113 8 view .LVU55
 268 007c 082B     		cmp	r3, #8
 269 007e 0BD1     		bne	.L12
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 270              		.loc 1 113 82 discriminator 1 view .LVU56
 271 0080 6368     		ldr	r3, [r4, #4]
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 272              		.loc 1 113 78 discriminator 1 view .LVU57
 273 0082 DB03     		lsls	r3, r3, #15
 274 0084 08D5     		bpl	.L12
 275              	.L11:
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 276              		.loc 1 115 7 is_stmt 1 view .LVU58
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 277              		.loc 1 115 11 is_stmt 0 view .LVU59
 278 0086 2368     		ldr	r3, [r4]
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 279              		.loc 1 115 9 view .LVU60
 280 0088 9B03     		lsls	r3, r3, #14
 281 008a BFD5     		bpl	.L13
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 282              		.loc 1 115 57 discriminator 1 view .LVU61
 283 008c 6B68     		ldr	r3, [r5, #4]
 284 008e 002B     		cmp	r3, #0
 285 0090 BCD1     		bne	.L13
 286              	.LVL7:
 287              	.L29:
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 288              		.loc 1 117 16 view .LVU62
 289 0092 0120     		movs	r0, #1
 290              	.LVL8:
 291              	.L14:
 528:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 292              		.loc 1 528 1 view .LVU63
 293 0094 05B0     		add	sp, sp, #20
 294              		@ sp needed
 295 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 296              	.LVL9:
 297              	.L12:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 298              		.loc 1 123 7 is_stmt 1 view .LVU64
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 299              		.loc 1 123 7 view .LVU65
 300 0098 6B68     		ldr	r3, [r5, #4]
 301 009a 012B     		cmp	r3, #1
 302 009c 13D1     		bne	.L15
 303              	.L103:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 304              		.loc 1 123 7 discriminator 7 view .LVU66
 305 009e 8023     		movs	r3, #128
 306 00a0 2268     		ldr	r2, [r4]
 307 00a2 5B02     		lsls	r3, r3, #9
 308 00a4 1343     		orrs	r3, r2
 309              	.L99:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 310              		.loc 1 123 7 is_stmt 0 discriminator 8 view .LVU67
 311 00a6 2360     		str	r3, [r4]
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 312              		.loc 1 130 9 is_stmt 1 discriminator 8 view .LVU68
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 313              		.loc 1 130 21 is_stmt 0 discriminator 8 view .LVU69
 314 00a8 FFF7FEFF 		bl	HAL_GetTick
 315              	.LVL10:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 316              		.loc 1 133 15 discriminator 8 view .LVU70
 317 00ac 8027     		movs	r7, #128
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 318              		.loc 1 130 21 discriminator 8 view .LVU71
 319 00ae 0600     		movs	r6, r0
 320              	.LVL11:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 321              		.loc 1 133 9 is_stmt 1 discriminator 8 view .LVU72
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 322              		.loc 1 133 15 is_stmt 0 discriminator 8 view .LVU73
 323 00b0 BF02     		lsls	r7, r7, #10
 324              	.LVL12:
 325              	.L21:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 326              		.loc 1 133 14 is_stmt 1 view .LVU74
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 327              		.loc 1 133 15 is_stmt 0 view .LVU75
 328 00b2 2368     		ldr	r3, [r4]
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 329              		.loc 1 133 14 view .LVU76
 330 00b4 3B42     		tst	r3, r7
 331 00b6 A9D1     		bne	.L13
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 332              		.loc 1 135 11 is_stmt 1 view .LVU77
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 333              		.loc 1 135 15 is_stmt 0 view .LVU78
 334 00b8 FFF7FEFF 		bl	HAL_GetTick
 335              	.LVL13:
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 336              		.loc 1 135 29 view .LVU79
 337 00bc 801B     		subs	r0, r0, r6
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 338              		.loc 1 135 13 view .LVU80
 339 00be 6428     		cmp	r0, #100
 340 00c0 F7D9     		bls	.L21
 341              	.LVL14:
 342              	.L23:
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 343              		.loc 1 137 20 view .LVU81
 344 00c2 0320     		movs	r0, #3
 345 00c4 E6E7     		b	.L14
 346              	.LVL15:
 347              	.L15:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 348              		.loc 1 123 7 is_stmt 1 discriminator 2 view .LVU82
 349 00c6 002B     		cmp	r3, #0
 350 00c8 16D1     		bne	.L17
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 351              		.loc 1 123 7 discriminator 4 view .LVU83
 352 00ca 2368     		ldr	r3, [r4]
 353 00cc 8E4A     		ldr	r2, .L104+4
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 354              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU84
 355 00ce 8027     		movs	r7, #128
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 356              		.loc 1 123 7 discriminator 4 view .LVU85
 357 00d0 1340     		ands	r3, r2
 358 00d2 2360     		str	r3, [r4]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 359              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU86
 360 00d4 2368     		ldr	r3, [r4]
 361 00d6 8D4A     		ldr	r2, .L104+8
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 362              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU87
 363 00d8 BF02     		lsls	r7, r7, #10
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 364              		.loc 1 123 7 discriminator 4 view .LVU88
 365 00da 1340     		ands	r3, r2
 366 00dc 2360     		str	r3, [r4]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 367              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU89
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 368              		.loc 1 127 7 discriminator 4 view .LVU90
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 369              		.loc 1 144 9 discriminator 4 view .LVU91
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 370              		.loc 1 144 21 is_stmt 0 discriminator 4 view .LVU92
 371 00de FFF7FEFF 		bl	HAL_GetTick
 372              	.LVL16:
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 373              		.loc 1 144 21 discriminator 4 view .LVU93
 374 00e2 0600     		movs	r6, r0
 375              	.LVL17:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 376              		.loc 1 147 9 is_stmt 1 discriminator 4 view .LVU94
 377              	.L18:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 378              		.loc 1 147 14 view .LVU95
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 379              		.loc 1 147 15 is_stmt 0 view .LVU96
 380 00e4 2368     		ldr	r3, [r4]
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 381              		.loc 1 147 14 view .LVU97
 382 00e6 3B42     		tst	r3, r7
 383 00e8 00D1     		bne	.LCB312
 384 00ea 8FE7     		b	.L13	@long jump
 385              	.LCB312:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 386              		.loc 1 149 12 is_stmt 1 view .LVU98
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 387              		.loc 1 149 16 is_stmt 0 view .LVU99
 388 00ec FFF7FEFF 		bl	HAL_GetTick
 389              	.LVL18:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 390              		.loc 1 149 30 view .LVU100
 391 00f0 801B     		subs	r0, r0, r6
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 392              		.loc 1 149 14 view .LVU101
 393 00f2 6428     		cmp	r0, #100
 394 00f4 F6D9     		bls	.L18
 395 00f6 E4E7     		b	.L23
 396              	.LVL19:
 397              	.L17:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 398              		.loc 1 123 7 is_stmt 1 discriminator 5 view .LVU102
 399 00f8 052B     		cmp	r3, #5
 400 00fa 05D1     		bne	.L19
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 401              		.loc 1 123 7 discriminator 7 view .LVU103
 402 00fc 8023     		movs	r3, #128
 403 00fe 2268     		ldr	r2, [r4]
 404 0100 DB02     		lsls	r3, r3, #11
 405 0102 1343     		orrs	r3, r2
 406 0104 2360     		str	r3, [r4]
 407 0106 CAE7     		b	.L103
 408              	.L19:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 409              		.loc 1 123 7 discriminator 8 view .LVU104
 410 0108 2368     		ldr	r3, [r4]
 411 010a 7F4A     		ldr	r2, .L104+4
 412 010c 1340     		ands	r3, r2
 413 010e 2360     		str	r3, [r4]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 414              		.loc 1 123 7 discriminator 8 view .LVU105
 415 0110 2368     		ldr	r3, [r4]
 416 0112 7E4A     		ldr	r2, .L104+8
 417 0114 1340     		ands	r3, r2
 418 0116 C6E7     		b	.L99
 419              	.LVL20:
 420              	.L9:
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 421              		.loc 1 161 5 view .LVU106
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 422              		.loc 1 162 5 view .LVU107
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 423              		.loc 1 165 5 view .LVU108
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 424              		.loc 1 165 9 is_stmt 0 view .LVU109
 425 0118 0C22     		movs	r2, #12
 426 011a 7A4C     		ldr	r4, .L104
 427 011c 6368     		ldr	r3, [r4, #4]
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 428              		.loc 1 165 7 view .LVU110
 429 011e 1342     		tst	r3, r2
 430 0120 06D0     		beq	.L26
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 431              		.loc 1 166 13 view .LVU111
 432 0122 6368     		ldr	r3, [r4, #4]
 433 0124 1340     		ands	r3, r2
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 434              		.loc 1 166 8 view .LVU112
 435 0126 082B     		cmp	r3, #8
 436 0128 10D1     		bne	.L27
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 437              		.loc 1 166 82 discriminator 1 view .LVU113
 438 012a 6368     		ldr	r3, [r4, #4]
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 439              		.loc 1 166 78 discriminator 1 view .LVU114
 440 012c DB03     		lsls	r3, r3, #15
 441 012e 0DD4     		bmi	.L27
 442              	.L26:
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 443              		.loc 1 169 7 is_stmt 1 view .LVU115
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 444              		.loc 1 169 11 is_stmt 0 view .LVU116
 445 0130 2368     		ldr	r3, [r4]
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 446              		.loc 1 169 9 view .LVU117
 447 0132 9B07     		lsls	r3, r3, #30
 448 0134 02D5     		bpl	.L100
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 449              		.loc 1 169 57 discriminator 1 view .LVU118
 450 0136 EB68     		ldr	r3, [r5, #12]
 451 0138 012B     		cmp	r3, #1
 452 013a AAD1     		bne	.L29
 453              	.L100:
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 454              		.loc 1 201 9 is_stmt 1 view .LVU119
 455 013c F821     		movs	r1, #248
 456 013e 2268     		ldr	r2, [r4]
 457 0140 2B69     		ldr	r3, [r5, #16]
 458 0142 8A43     		bics	r2, r1
 459 0144 DB00     		lsls	r3, r3, #3
 460 0146 1343     		orrs	r3, r2
 461 0148 2360     		str	r3, [r4]
 462 014a 63E7     		b	.L25
 463              	.L27:
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 464              		.loc 1 183 7 view .LVU120
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 465              		.loc 1 183 9 is_stmt 0 view .LVU121
 466 014c EA68     		ldr	r2, [r5, #12]
 467 014e 0123     		movs	r3, #1
 468 0150 002A     		cmp	r2, #0
 469 0152 0FD0     		beq	.L30
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 470              		.loc 1 186 9 is_stmt 1 view .LVU122
 471 0154 2268     		ldr	r2, [r4]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 472              		.loc 1 192 15 is_stmt 0 view .LVU123
 473 0156 0227     		movs	r7, #2
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 474              		.loc 1 186 9 view .LVU124
 475 0158 1343     		orrs	r3, r2
 476 015a 2360     		str	r3, [r4]
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 477              		.loc 1 189 9 is_stmt 1 view .LVU125
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 478              		.loc 1 189 21 is_stmt 0 view .LVU126
 479 015c FFF7FEFF 		bl	HAL_GetTick
 480              	.LVL21:
 481 0160 0600     		movs	r6, r0
 482              	.LVL22:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 483              		.loc 1 192 9 is_stmt 1 view .LVU127
 484              	.L31:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 485              		.loc 1 192 14 view .LVU128
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 486              		.loc 1 192 15 is_stmt 0 view .LVU129
 487 0162 2368     		ldr	r3, [r4]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 488              		.loc 1 192 14 view .LVU130
 489 0164 3B42     		tst	r3, r7
 490 0166 E9D1     		bne	.L100
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 491              		.loc 1 194 11 is_stmt 1 view .LVU131
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 492              		.loc 1 194 15 is_stmt 0 view .LVU132
 493 0168 FFF7FEFF 		bl	HAL_GetTick
 494              	.LVL23:
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 495              		.loc 1 194 29 view .LVU133
 496 016c 801B     		subs	r0, r0, r6
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 497              		.loc 1 194 13 view .LVU134
 498 016e 0228     		cmp	r0, #2
 499 0170 F7D9     		bls	.L31
 500 0172 A6E7     		b	.L23
 501              	.LVL24:
 502              	.L30:
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 503              		.loc 1 206 9 is_stmt 1 view .LVU135
 504 0174 2268     		ldr	r2, [r4]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 505              		.loc 1 212 15 is_stmt 0 view .LVU136
 506 0176 0227     		movs	r7, #2
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 507              		.loc 1 206 9 view .LVU137
 508 0178 9A43     		bics	r2, r3
 509 017a 2260     		str	r2, [r4]
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 510              		.loc 1 209 9 is_stmt 1 view .LVU138
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511              		.loc 1 209 21 is_stmt 0 view .LVU139
 512 017c FFF7FEFF 		bl	HAL_GetTick
 513              	.LVL25:
 514 0180 0600     		movs	r6, r0
 515              	.LVL26:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 516              		.loc 1 212 9 is_stmt 1 view .LVU140
 517              	.L33:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 518              		.loc 1 212 14 view .LVU141
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 519              		.loc 1 212 15 is_stmt 0 view .LVU142
 520 0182 2368     		ldr	r3, [r4]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 521              		.loc 1 212 14 view .LVU143
 522 0184 3B42     		tst	r3, r7
 523 0186 00D1     		bne	.LCB450
 524 0188 44E7     		b	.L25	@long jump
 525              	.LCB450:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 526              		.loc 1 214 11 is_stmt 1 view .LVU144
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 527              		.loc 1 214 15 is_stmt 0 view .LVU145
 528 018a FFF7FEFF 		bl	HAL_GetTick
 529              	.LVL27:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 530              		.loc 1 214 29 view .LVU146
 531 018e 801B     		subs	r0, r0, r6
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 532              		.loc 1 214 13 view .LVU147
 533 0190 0228     		cmp	r0, #2
 534 0192 F6D9     		bls	.L33
 535 0194 95E7     		b	.L23
 536              	.LVL28:
 537              	.L35:
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 538              		.loc 1 226 5 is_stmt 1 view .LVU148
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 539              		.loc 1 229 5 view .LVU149
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 540              		.loc 1 229 7 is_stmt 0 view .LVU150
 541 0196 EA69     		ldr	r2, [r5, #28]
 542 0198 0123     		movs	r3, #1
 543 019a 5A4C     		ldr	r4, .L104
 544 019c 002A     		cmp	r2, #0
 545 019e 10D0     		beq	.L38
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 546              		.loc 1 232 7 is_stmt 1 view .LVU151
 547 01a0 626A     		ldr	r2, [r4, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 548              		.loc 1 238 13 is_stmt 0 view .LVU152
 549 01a2 0227     		movs	r7, #2
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 550              		.loc 1 232 7 view .LVU153
 551 01a4 1343     		orrs	r3, r2
 552 01a6 6362     		str	r3, [r4, #36]
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 553              		.loc 1 235 7 is_stmt 1 view .LVU154
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 554              		.loc 1 235 19 is_stmt 0 view .LVU155
 555 01a8 FFF7FEFF 		bl	HAL_GetTick
 556              	.LVL29:
 557 01ac 0600     		movs	r6, r0
 558              	.LVL30:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 559              		.loc 1 238 7 is_stmt 1 view .LVU156
 560              	.L39:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 561              		.loc 1 238 12 view .LVU157
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 562              		.loc 1 238 13 is_stmt 0 view .LVU158
 563 01ae 636A     		ldr	r3, [r4, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 564              		.loc 1 238 12 view .LVU159
 565 01b0 3B42     		tst	r3, r7
 566 01b2 00D0     		beq	.LCB488
 567 01b4 32E7     		b	.L41	@long jump
 568              	.LCB488:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 569              		.loc 1 240 9 is_stmt 1 view .LVU160
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 570              		.loc 1 240 13 is_stmt 0 view .LVU161
 571 01b6 FFF7FEFF 		bl	HAL_GetTick
 572              	.LVL31:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 573              		.loc 1 240 27 view .LVU162
 574 01ba 801B     		subs	r0, r0, r6
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 575              		.loc 1 240 11 view .LVU163
 576 01bc 0228     		cmp	r0, #2
 577 01be F6D9     		bls	.L39
 578 01c0 7FE7     		b	.L23
 579              	.LVL32:
 580              	.L38:
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 581              		.loc 1 249 7 is_stmt 1 view .LVU164
 582 01c2 626A     		ldr	r2, [r4, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 583              		.loc 1 255 13 is_stmt 0 view .LVU165
 584 01c4 0227     		movs	r7, #2
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 585              		.loc 1 249 7 view .LVU166
 586 01c6 9A43     		bics	r2, r3
 587 01c8 6262     		str	r2, [r4, #36]
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 588              		.loc 1 252 7 is_stmt 1 view .LVU167
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 589              		.loc 1 252 19 is_stmt 0 view .LVU168
 590 01ca FFF7FEFF 		bl	HAL_GetTick
 591              	.LVL33:
 592 01ce 0600     		movs	r6, r0
 593              	.LVL34:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 594              		.loc 1 255 7 is_stmt 1 view .LVU169
 595              	.L42:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 596              		.loc 1 255 12 view .LVU170
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 597              		.loc 1 255 13 is_stmt 0 view .LVU171
 598 01d0 636A     		ldr	r3, [r4, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 599              		.loc 1 255 12 view .LVU172
 600 01d2 3B42     		tst	r3, r7
 601 01d4 00D1     		bne	.LCB517
 602 01d6 21E7     		b	.L41	@long jump
 603              	.LCB517:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 604              		.loc 1 257 9 is_stmt 1 view .LVU173
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 605              		.loc 1 257 13 is_stmt 0 view .LVU174
 606 01d8 FFF7FEFF 		bl	HAL_GetTick
 607              	.LVL35:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 608              		.loc 1 257 27 view .LVU175
 609 01dc 801B     		subs	r0, r0, r6
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 610              		.loc 1 257 11 view .LVU176
 611 01de 0228     		cmp	r0, #2
 612 01e0 F6D9     		bls	.L42
 613 01e2 6EE7     		b	.L23
 614              	.LVL36:
 615              	.L36:
 616              	.LBB12:
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 617              		.loc 1 267 5 is_stmt 1 view .LVU177
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 618              		.loc 1 270 5 view .LVU178
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 619              		.loc 1 274 5 view .LVU179
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 620              		.loc 1 274 8 is_stmt 0 view .LVU180
 621 01e4 8022     		movs	r2, #128
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 622              		.loc 1 267 22 view .LVU181
 623 01e6 0021     		movs	r1, #0
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624              		.loc 1 274 8 view .LVU182
 625 01e8 464C     		ldr	r4, .L104
 626 01ea 5205     		lsls	r2, r2, #21
 627 01ec E369     		ldr	r3, [r4, #28]
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 628              		.loc 1 267 22 view .LVU183
 629 01ee 0091     		str	r1, [sp]
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 630              		.loc 1 274 7 view .LVU184
 631 01f0 1342     		tst	r3, r2
 632 01f2 08D1     		bne	.L45
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 633              		.loc 1 276 7 is_stmt 1 view .LVU185
 634              	.LBB13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 635              		.loc 1 276 7 view .LVU186
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 636              		.loc 1 276 7 view .LVU187
 637 01f4 E369     		ldr	r3, [r4, #28]
 638 01f6 1343     		orrs	r3, r2
 639 01f8 E361     		str	r3, [r4, #28]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 640              		.loc 1 276 7 view .LVU188
 641 01fa E369     		ldr	r3, [r4, #28]
 642 01fc 1340     		ands	r3, r2
 643 01fe 0393     		str	r3, [sp, #12]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 644              		.loc 1 276 7 view .LVU189
 645 0200 039B     		ldr	r3, [sp, #12]
 646              	.LBE13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 647              		.loc 1 276 7 view .LVU190
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 648              		.loc 1 277 7 view .LVU191
 649              	.LVL37:
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 650              		.loc 1 277 21 is_stmt 0 view .LVU192
 651 0202 0123     		movs	r3, #1
 652 0204 0093     		str	r3, [sp]
 653              	.LVL38:
 654              	.L45:
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 655              		.loc 1 280 5 is_stmt 1 view .LVU193
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 656              		.loc 1 280 8 is_stmt 0 view .LVU194
 657 0206 8027     		movs	r7, #128
 658 0208 414E     		ldr	r6, .L104+12
 659 020a 7F00     		lsls	r7, r7, #1
 660 020c 3368     		ldr	r3, [r6]
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 661              		.loc 1 280 7 view .LVU195
 662 020e 3B42     		tst	r3, r7
 663 0210 06D0     		beq	.L46
 664              	.L51:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 665              		.loc 1 298 5 is_stmt 1 view .LVU196
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 666              		.loc 1 298 5 view .LVU197
 667 0212 AB68     		ldr	r3, [r5, #8]
 668 0214 012B     		cmp	r3, #1
 669 0216 13D1     		bne	.L98
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 670              		.loc 1 298 5 discriminator 1 view .LVU198
 671 0218 226A     		ldr	r2, [r4, #32]
 672 021a 1343     		orrs	r3, r2
 673              	.L101:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 674              		.loc 1 298 5 is_stmt 0 discriminator 8 view .LVU199
 675 021c 2362     		str	r3, [r4, #32]
 676 021e 30E0     		b	.L52
 677              	.L46:
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 678              		.loc 1 283 7 is_stmt 1 view .LVU200
 679 0220 3368     		ldr	r3, [r6]
 680 0222 3B43     		orrs	r3, r7
 681 0224 3360     		str	r3, [r6]
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 682              		.loc 1 286 7 view .LVU201
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 683              		.loc 1 286 19 is_stmt 0 view .LVU202
 684 0226 FFF7FEFF 		bl	HAL_GetTick
 685              	.LVL39:
 686 022a 0190     		str	r0, [sp, #4]
 687              	.LVL40:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 688              		.loc 1 288 7 is_stmt 1 view .LVU203
 689              	.L49:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 690              		.loc 1 288 12 view .LVU204
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 691              		.loc 1 288 13 is_stmt 0 view .LVU205
 692 022c 3368     		ldr	r3, [r6]
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 693              		.loc 1 288 12 view .LVU206
 694 022e 3B42     		tst	r3, r7
 695 0230 EFD1     		bne	.L51
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 696              		.loc 1 290 9 is_stmt 1 view .LVU207
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 697              		.loc 1 290 13 is_stmt 0 view .LVU208
 698 0232 FFF7FEFF 		bl	HAL_GetTick
 699              	.LVL41:
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 700              		.loc 1 290 27 view .LVU209
 701 0236 019B     		ldr	r3, [sp, #4]
 702 0238 C01A     		subs	r0, r0, r3
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 703              		.loc 1 290 11 view .LVU210
 704 023a 6428     		cmp	r0, #100
 705 023c F6D9     		bls	.L49
 706 023e 40E7     		b	.L23
 707              	.LVL42:
 708              	.L98:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 709              		.loc 1 298 5 is_stmt 1 discriminator 2 view .LVU211
 710 0240 0122     		movs	r2, #1
 711 0242 002B     		cmp	r3, #0
 712 0244 14D1     		bne	.L53
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 713              		.loc 1 298 5 discriminator 4 view .LVU212
 714 0246 236A     		ldr	r3, [r4, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 715              		.loc 1 320 13 is_stmt 0 discriminator 4 view .LVU213
 716 0248 0227     		movs	r7, #2
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 717              		.loc 1 298 5 discriminator 4 view .LVU214
 718 024a 9343     		bics	r3, r2
 719 024c 2362     		str	r3, [r4, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 720              		.loc 1 298 5 is_stmt 1 discriminator 4 view .LVU215
 721 024e 236A     		ldr	r3, [r4, #32]
 722 0250 0332     		adds	r2, r2, #3
 723 0252 9343     		bics	r3, r2
 724 0254 2362     		str	r3, [r4, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 725              		.loc 1 298 5 discriminator 4 view .LVU216
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 726              		.loc 1 300 5 discriminator 4 view .LVU217
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 727              		.loc 1 317 7 discriminator 4 view .LVU218
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 728              		.loc 1 317 19 is_stmt 0 discriminator 4 view .LVU219
 729 0256 FFF7FEFF 		bl	HAL_GetTick
 730              	.LVL43:
 731 025a 0600     		movs	r6, r0
 732              	.LVL44:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 733              		.loc 1 320 7 is_stmt 1 discriminator 4 view .LVU220
 734              	.L54:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 735              		.loc 1 320 12 view .LVU221
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 736              		.loc 1 320 13 is_stmt 0 view .LVU222
 737 025c 236A     		ldr	r3, [r4, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 738              		.loc 1 320 12 view .LVU223
 739 025e 3B42     		tst	r3, r7
 740 0260 16D0     		beq	.L61
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 741              		.loc 1 322 9 is_stmt 1 view .LVU224
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 742              		.loc 1 322 13 is_stmt 0 view .LVU225
 743 0262 FFF7FEFF 		bl	HAL_GetTick
 744              	.LVL45:
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 745              		.loc 1 322 11 view .LVU226
 746 0266 2B4B     		ldr	r3, .L104+16
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 747              		.loc 1 322 27 view .LVU227
 748 0268 801B     		subs	r0, r0, r6
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 749              		.loc 1 322 11 view .LVU228
 750 026a 9842     		cmp	r0, r3
 751 026c F6D9     		bls	.L54
 752 026e 28E7     		b	.L23
 753              	.LVL46:
 754              	.L53:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 755              		.loc 1 298 5 is_stmt 1 discriminator 5 view .LVU229
 756 0270 052B     		cmp	r3, #5
 757 0272 16D1     		bne	.L55
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 758              		.loc 1 298 5 discriminator 7 view .LVU230
 759 0274 216A     		ldr	r1, [r4, #32]
 760 0276 013B     		subs	r3, r3, #1
 761 0278 0B43     		orrs	r3, r1
 762 027a 2362     		str	r3, [r4, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 763              		.loc 1 298 5 discriminator 7 view .LVU231
 764 027c 236A     		ldr	r3, [r4, #32]
 765 027e 1A43     		orrs	r2, r3
 766 0280 2262     		str	r2, [r4, #32]
 767              	.L52:
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 768              		.loc 1 303 7 view .LVU232
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 769              		.loc 1 303 19 is_stmt 0 view .LVU233
 770 0282 FFF7FEFF 		bl	HAL_GetTick
 771              	.LVL47:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 772              		.loc 1 306 13 view .LVU234
 773 0286 0227     		movs	r7, #2
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 774              		.loc 1 303 19 view .LVU235
 775 0288 0600     		movs	r6, r0
 776              	.LVL48:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 777              		.loc 1 306 7 is_stmt 1 view .LVU236
 778              	.L57:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 779              		.loc 1 306 12 view .LVU237
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 780              		.loc 1 306 13 is_stmt 0 view .LVU238
 781 028a 236A     		ldr	r3, [r4, #32]
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 782              		.loc 1 306 12 view .LVU239
 783 028c 3B42     		tst	r3, r7
 784 028e 0FD0     		beq	.L58
 785              	.L61:
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 786              		.loc 1 330 5 is_stmt 1 view .LVU240
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 787              		.loc 1 330 7 is_stmt 0 view .LVU241
 788 0290 009B     		ldr	r3, [sp]
 789 0292 012B     		cmp	r3, #1
 790 0294 00D0     		beq	.LCB696
 791 0296 C5E6     		b	.L44	@long jump
 792              	.LCB696:
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 793              		.loc 1 332 7 is_stmt 1 view .LVU242
 794 0298 E369     		ldr	r3, [r4, #28]
 795 029a 1F4A     		ldr	r2, .L104+20
 796 029c 1340     		ands	r3, r2
 797 029e E361     		str	r3, [r4, #28]
 798 02a0 C0E6     		b	.L44
 799              	.LVL49:
 800              	.L55:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 801              		.loc 1 298 5 discriminator 8 view .LVU243
 802 02a2 236A     		ldr	r3, [r4, #32]
 803 02a4 9343     		bics	r3, r2
 804 02a6 0422     		movs	r2, #4
 805 02a8 2362     		str	r3, [r4, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 806              		.loc 1 298 5 discriminator 8 view .LVU244
 807 02aa 236A     		ldr	r3, [r4, #32]
 808 02ac 9343     		bics	r3, r2
 809 02ae B5E7     		b	.L101
 810              	.LVL50:
 811              	.L58:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 812              		.loc 1 308 9 view .LVU245
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 813              		.loc 1 308 13 is_stmt 0 view .LVU246
 814 02b0 FFF7FEFF 		bl	HAL_GetTick
 815              	.LVL51:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 816              		.loc 1 308 11 view .LVU247
 817 02b4 174B     		ldr	r3, .L104+16
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 818              		.loc 1 308 27 view .LVU248
 819 02b6 801B     		subs	r0, r0, r6
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 820              		.loc 1 308 11 view .LVU249
 821 02b8 9842     		cmp	r0, r3
 822 02ba E6D9     		bls	.L57
 823 02bc 01E7     		b	.L23
 824              	.LVL52:
 825              	.L66:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 826              		.loc 1 308 11 view .LVU250
 827              	.LBE12:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 828              		.loc 1 358 9 is_stmt 1 view .LVU251
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 829              		.loc 1 358 13 is_stmt 0 view .LVU252
 830 02be FFF7FEFF 		bl	HAL_GetTick
 831              	.LVL53:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 832              		.loc 1 358 27 view .LVU253
 833 02c2 801B     		subs	r0, r0, r6
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 834              		.loc 1 358 11 view .LVU254
 835 02c4 0228     		cmp	r0, #2
 836 02c6 00D8     		bhi	.LCB740
 837 02c8 BFE6     		b	.L65	@long jump
 838              	.LCB740:
 839 02ca FAE6     		b	.L23
 840              	.LVL54:
 841              	.L64:
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 842              		.loc 1 367 10 is_stmt 1 view .LVU255
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 843              		.loc 1 367 12 is_stmt 0 view .LVU256
 844 02cc 0532     		adds	r2, r2, #5
 845 02ce 03D1     		bne	.L67
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 846              		.loc 1 370 7 is_stmt 1 view .LVU257
 847 02d0 626B     		ldr	r2, [r4, #52]
 848 02d2 9A43     		bics	r2, r3
 849 02d4 6263     		str	r2, [r4, #52]
 850 02d6 BCE6     		b	.L102
 851              	.L67:
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 852              		.loc 1 378 7 view .LVU258
 853 02d8 626B     		ldr	r2, [r4, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 854              		.loc 1 387 13 is_stmt 0 view .LVU259
 855 02da 0227     		movs	r7, #2
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 856              		.loc 1 378 7 view .LVU260
 857 02dc 1343     		orrs	r3, r2
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 858              		.loc 1 381 7 view .LVU261
 859 02de 0122     		movs	r2, #1
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 860              		.loc 1 378 7 view .LVU262
 861 02e0 6363     		str	r3, [r4, #52]
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 862              		.loc 1 381 7 is_stmt 1 view .LVU263
 863 02e2 636B     		ldr	r3, [r4, #52]
 864 02e4 9343     		bics	r3, r2
 865 02e6 6363     		str	r3, [r4, #52]
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 866              		.loc 1 384 7 view .LVU264
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 867              		.loc 1 384 19 is_stmt 0 view .LVU265
 868 02e8 FFF7FEFF 		bl	HAL_GetTick
 869              	.LVL55:
 870 02ec 0600     		movs	r6, r0
 871              	.LVL56:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 872              		.loc 1 387 7 is_stmt 1 view .LVU266
 873              	.L68:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 874              		.loc 1 387 12 view .LVU267
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 875              		.loc 1 387 13 is_stmt 0 view .LVU268
 876 02ee 636B     		ldr	r3, [r4, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 877              		.loc 1 387 12 view .LVU269
 878 02f0 3B42     		tst	r3, r7
 879 02f2 00D1     		bne	.LCB779
 880 02f4 B4E6     		b	.L63	@long jump
 881              	.LCB779:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 882              		.loc 1 389 9 is_stmt 1 view .LVU270
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 883              		.loc 1 389 13 is_stmt 0 view .LVU271
 884 02f6 FFF7FEFF 		bl	HAL_GetTick
 885              	.LVL57:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 886              		.loc 1 389 27 view .LVU272
 887 02fa 801B     		subs	r0, r0, r6
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 888              		.loc 1 389 11 view .LVU273
 889 02fc 0228     		cmp	r0, #2
 890 02fe F6D9     		bls	.L68
 891 0300 DFE6     		b	.L23
 892              	.L105:
 893 0302 C046     		.align	2
 894              	.L104:
 895 0304 00100240 		.word	1073876992
 896 0308 FFFFFEFF 		.word	-65537
 897 030c FFFFFBFF 		.word	-262145
 898 0310 00700040 		.word	1073770496
 899 0314 88130000 		.word	5000
 900 0318 FFFFFFEF 		.word	-268435457
 901              	.LVL58:
 902              	.L71:
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 903              		.loc 1 460 5 is_stmt 1 view .LVU274
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 904              		.loc 1 460 8 is_stmt 0 view .LVU275
 905 031c 0C22     		movs	r2, #12
 906 031e 264C     		ldr	r4, .L106
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 907              		.loc 1 523 14 view .LVU276
 908 0320 0120     		movs	r0, #1
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 909              		.loc 1 460 8 view .LVU277
 910 0322 6368     		ldr	r3, [r4, #4]
 911 0324 1340     		ands	r3, r2
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 912              		.loc 1 460 7 view .LVU278
 913 0326 082B     		cmp	r3, #8
 914 0328 00D1     		bne	.LCB810
 915 032a B3E6     		b	.L14	@long jump
 916              	.LCB810:
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 917              		.loc 1 462 7 is_stmt 1 view .LVU279
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 918              		.loc 1 470 9 is_stmt 0 view .LVU280
 919 032c 2368     		ldr	r3, [r4]
 920 032e 234A     		ldr	r2, .L106+4
 921 0330 1340     		ands	r3, r2
 922 0332 2360     		str	r3, [r4]
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 923              		.loc 1 462 9 view .LVU281
 924 0334 0229     		cmp	r1, #2
 925 0336 2FD1     		bne	.L72
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 926              		.loc 1 465 9 is_stmt 1 view .LVU282
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 927              		.loc 1 466 9 view .LVU283
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 928              		.loc 1 467 9 view .LVU284
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929              		.loc 1 470 9 view .LVU285
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 930              		.loc 1 473 9 view .LVU286
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 931              		.loc 1 473 21 is_stmt 0 view .LVU287
 932 0338 FFF7FEFF 		bl	HAL_GetTick
 933              	.LVL59:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 934              		.loc 1 476 15 view .LVU288
 935 033c 8027     		movs	r7, #128
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 936              		.loc 1 473 21 view .LVU289
 937 033e 0600     		movs	r6, r0
 938              	.LVL60:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 939              		.loc 1 476 9 is_stmt 1 view .LVU290
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 940              		.loc 1 476 15 is_stmt 0 view .LVU291
 941 0340 BF04     		lsls	r7, r7, #18
 942              	.LVL61:
 943              	.L73:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 944              		.loc 1 476 14 is_stmt 1 view .LVU292
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 945              		.loc 1 476 15 is_stmt 0 view .LVU293
 946 0342 2368     		ldr	r3, [r4]
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 947              		.loc 1 476 14 view .LVU294
 948 0344 3B42     		tst	r3, r7
 949 0346 21D1     		bne	.L74
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 950              		.loc 1 485 9 is_stmt 1 view .LVU295
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 951              		.loc 1 485 9 view .LVU296
 952 0348 0F22     		movs	r2, #15
 953 034a E36A     		ldr	r3, [r4, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 954              		.loc 1 495 15 is_stmt 0 view .LVU297
 955 034c 8026     		movs	r6, #128
 956              	.LVL62:
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 957              		.loc 1 485 9 view .LVU298
 958 034e 9343     		bics	r3, r2
 959 0350 EA6A     		ldr	r2, [r5, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 960              		.loc 1 495 15 view .LVU299
 961 0352 B604     		lsls	r6, r6, #18
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 962              		.loc 1 485 9 view .LVU300
 963 0354 1343     		orrs	r3, r2
 964 0356 E362     		str	r3, [r4, #44]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 965              		.loc 1 485 9 is_stmt 1 view .LVU301
 966 0358 696A     		ldr	r1, [r5, #36]
 967 035a AB6A     		ldr	r3, [r5, #40]
 968 035c 6268     		ldr	r2, [r4, #4]
 969 035e 0B43     		orrs	r3, r1
 970 0360 1749     		ldr	r1, .L106+8
 971 0362 0A40     		ands	r2, r1
 972 0364 1343     		orrs	r3, r2
 973 0366 6360     		str	r3, [r4, #4]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 974              		.loc 1 485 9 view .LVU302
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 975              		.loc 1 489 9 view .LVU303
 976 0368 8023     		movs	r3, #128
 977 036a 2268     		ldr	r2, [r4]
 978 036c 5B04     		lsls	r3, r3, #17
 979 036e 1343     		orrs	r3, r2
 980 0370 2360     		str	r3, [r4]
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 981              		.loc 1 492 9 view .LVU304
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 982              		.loc 1 492 21 is_stmt 0 view .LVU305
 983 0372 FFF7FEFF 		bl	HAL_GetTick
 984              	.LVL63:
 985 0376 0500     		movs	r5, r0
 986              	.LVL64:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 987              		.loc 1 495 9 is_stmt 1 view .LVU306
 988              	.L75:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 989              		.loc 1 495 14 view .LVU307
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 990              		.loc 1 495 15 is_stmt 0 view .LVU308
 991 0378 2368     		ldr	r3, [r4]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 992              		.loc 1 495 14 view .LVU309
 993 037a 3342     		tst	r3, r6
 994 037c 00D0     		beq	.LCB878
 995 037e 73E6     		b	.L77	@long jump
 996              	.LCB878:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 997              		.loc 1 497 11 is_stmt 1 view .LVU310
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 998              		.loc 1 497 15 is_stmt 0 view .LVU311
 999 0380 FFF7FEFF 		bl	HAL_GetTick
 1000              	.LVL65:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1001              		.loc 1 497 29 view .LVU312
 1002 0384 401B     		subs	r0, r0, r5
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1003              		.loc 1 497 13 view .LVU313
 1004 0386 0228     		cmp	r0, #2
 1005 0388 F6D9     		bls	.L75
 1006 038a 9AE6     		b	.L23
 1007              	.LVL66:
 1008              	.L74:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1009              		.loc 1 478 11 is_stmt 1 view .LVU314
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1010              		.loc 1 478 15 is_stmt 0 view .LVU315
 1011 038c FFF7FEFF 		bl	HAL_GetTick
 1012              	.LVL67:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1013              		.loc 1 478 29 view .LVU316
 1014 0390 801B     		subs	r0, r0, r6
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1015              		.loc 1 478 13 view .LVU317
 1016 0392 0228     		cmp	r0, #2
 1017 0394 D5D9     		bls	.L73
 1018 0396 94E6     		b	.L23
 1019              	.LVL68:
 1020              	.L72:
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 1021              		.loc 1 506 9 is_stmt 1 view .LVU318
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1022              		.loc 1 509 9 view .LVU319
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1023              		.loc 1 509 21 is_stmt 0 view .LVU320
 1024 0398 FFF7FEFF 		bl	HAL_GetTick
 1025              	.LVL69:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1026              		.loc 1 512 15 view .LVU321
 1027 039c 8026     		movs	r6, #128
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1028              		.loc 1 509 21 view .LVU322
 1029 039e 0500     		movs	r5, r0
 1030              	.LVL70:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1031              		.loc 1 512 9 is_stmt 1 view .LVU323
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1032              		.loc 1 512 15 is_stmt 0 view .LVU324
 1033 03a0 B604     		lsls	r6, r6, #18
 1034              	.LVL71:
 1035              	.L78:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1036              		.loc 1 512 14 is_stmt 1 view .LVU325
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1037              		.loc 1 512 15 is_stmt 0 view .LVU326
 1038 03a2 2368     		ldr	r3, [r4]
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1039              		.loc 1 512 14 view .LVU327
 1040 03a4 3342     		tst	r3, r6
 1041 03a6 00D1     		bne	.LCB918
 1042 03a8 5EE6     		b	.L77	@long jump
 1043              	.LCB918:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1044              		.loc 1 514 11 is_stmt 1 view .LVU328
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1045              		.loc 1 514 15 is_stmt 0 view .LVU329
 1046 03aa FFF7FEFF 		bl	HAL_GetTick
 1047              	.LVL72:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1048              		.loc 1 514 29 view .LVU330
 1049 03ae 401B     		subs	r0, r0, r5
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1050              		.loc 1 514 13 view .LVU331
 1051 03b0 0228     		cmp	r0, #2
 1052 03b2 F6D9     		bls	.L78
 1053 03b4 85E6     		b	.L23
 1054              	.L107:
 1055 03b6 C046     		.align	2
 1056              	.L106:
 1057 03b8 00100240 		.word	1073876992
 1058 03bc FFFFFFFE 		.word	-16777217
 1059 03c0 FFFFC2FF 		.word	-3997697
 1060              		.cfi_endproc
 1061              	.LFE41:
 1063              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1064              		.align	1
 1065              		.global	HAL_RCC_ClockConfig
 1066              		.syntax unified
 1067              		.code	16
 1068              		.thumb_func
 1069              		.fpu softvfp
 1071              	HAL_RCC_ClockConfig:
 1072              	.LVL73:
 1073              	.LFB42:
 529:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 530:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 531:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 532:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 533:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 534:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 535:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 536:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 537:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 538:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 539:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
 540:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 541:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 542:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 543:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 544:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *           
 545:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 546:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 547:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 548:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 549:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 550:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         currently used as system clock source.
 551:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
 552:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 553:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1074              		.loc 1 554 1 is_stmt 1 view -0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 8
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 555:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1078              		.loc 1 555 3 view .LVU333
 556:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 557:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 558:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1079              		.loc 1 558 3 view .LVU334
 559:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1080              		.loc 1 559 3 view .LVU335
 560:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1081              		.loc 1 560 3 view .LVU336
 561:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 562:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 563:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 564:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     (HCLK) of the device. */
 565:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 566:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 567:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1082              		.loc 1 567 3 view .LVU337
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1083              		.loc 1 554 1 is_stmt 0 view .LVU338
 1084 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1085              	.LCFI2:
 1086              		.cfi_def_cfa_offset 32
 1087              		.cfi_offset 0, -32
 1088              		.cfi_offset 1, -28
 1089              		.cfi_offset 2, -24
 1090              		.cfi_offset 4, -20
 1091              		.cfi_offset 5, -16
 1092              		.cfi_offset 6, -12
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095              		.loc 1 567 29 view .LVU339
 1096 0002 0122     		movs	r2, #1
 1097              		.loc 1 567 23 view .LVU340
 1098 0004 3E4C     		ldr	r4, .L146
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1099              		.loc 1 554 1 view .LVU341
 1100 0006 0500     		movs	r5, r0
 1101              		.loc 1 567 23 view .LVU342
 1102 0008 2368     		ldr	r3, [r4]
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1103              		.loc 1 554 1 view .LVU343
 1104 000a 0F00     		movs	r7, r1
 1105              		.loc 1 567 29 view .LVU344
 1106 000c 1340     		ands	r3, r2
 1107              		.loc 1 567 5 view .LVU345
 1108 000e 8B42     		cmp	r3, r1
 1109 0010 12D3     		bcc	.L109
 1110              	.L112:
 568:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 569:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 571:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 572:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 573:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 575:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 577:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 578:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 579:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 580:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 581:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1111              		.loc 1 581 3 is_stmt 1 view .LVU346
 1112              		.loc 1 581 25 is_stmt 0 view .LVU347
 1113 0012 2A68     		ldr	r2, [r5]
 1114              		.loc 1 581 5 view .LVU348
 1115 0014 9307     		lsls	r3, r2, #30
 1116 0016 19D4     		bmi	.L110
 1117              	.LVL74:
 1118              	.L111:
 582:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 585:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 586:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 587:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 588:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1119              		.loc 1 588 3 is_stmt 1 view .LVU349
 1120              		.loc 1 588 5 is_stmt 0 view .LVU350
 1121 0018 D307     		lsls	r3, r2, #31
 1122 001a 1FD4     		bmi	.L114
 1123              	.LVL75:
 1124              	.L124:
 589:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 591:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 592:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 594:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 595:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 597:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 598:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 599:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 600:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 601:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 603:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 604:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 606:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 607:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 608:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 609:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 610:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 611:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI48 is selected as System Clock Source */
 612:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 613:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 614:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 ready flag */
 615:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 616:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 617:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 618:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 619:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 620:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 621:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 622:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 623:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 626:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 627:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 628:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 629:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 631:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 632:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get Start Tick */
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 634:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 636:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 638:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 640:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 642:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 643:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 644:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 646:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 648:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 650:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 652:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 653:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 654:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 655:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 656:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 657:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 658:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 659:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 660:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 661:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 662:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 663:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 664:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 665:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 666:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 667:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 668:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 670:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 672:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 674:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 675:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 676:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }      
 677:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 678:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 679:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1125              		.loc 1 679 3 is_stmt 1 view .LVU351
 1126              		.loc 1 679 29 is_stmt 0 view .LVU352
 1127 001c 0123     		movs	r3, #1
 1128              		.loc 1 679 23 view .LVU353
 1129 001e 2268     		ldr	r2, [r4]
 1130              		.loc 1 679 29 view .LVU354
 1131 0020 1A40     		ands	r2, r3
 1132              		.loc 1 679 5 view .LVU355
 1133 0022 BA42     		cmp	r2, r7
 1134 0024 5DD8     		bhi	.L115
 1135              	.L116:
 680:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 681:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 683:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 684:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 685:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 687:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 688:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 689:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 690:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 691:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 692:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 693:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1136              		.loc 1 693 3 is_stmt 1 view .LVU356
 1137              		.loc 1 693 5 is_stmt 0 view .LVU357
 1138 0026 2B68     		ldr	r3, [r5]
 1139 0028 5B07     		lsls	r3, r3, #29
 1140 002a 61D4     		bmi	.L130
 1141              	.L131:
 694:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 697:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 698:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 699:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 700:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   SystemCoreClock = 7372800;
 1142              		.loc 1 701 3 is_stmt 1 view .LVU358
 1143              		.loc 1 701 19 is_stmt 0 view .LVU359
 1144 002c E122     		movs	r2, #225
 1145 002e 354B     		ldr	r3, .L146+4
 1146 0030 D203     		lsls	r2, r2, #15
 702:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 703:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 704:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 705:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 706:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1147              		.loc 1 706 10 view .LVU360
 1148 0032 0020     		movs	r0, #0
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1149              		.loc 1 701 19 view .LVU361
 1150 0034 1A60     		str	r2, [r3]
 1151              		.loc 1 706 3 is_stmt 1 view .LVU362
 1152              		.loc 1 706 10 is_stmt 0 view .LVU363
 1153 0036 08E0     		b	.L113
 1154              	.LVL76:
 1155              	.L109:
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1156              		.loc 1 570 5 is_stmt 1 view .LVU364
 1157 0038 2368     		ldr	r3, [r4]
 1158 003a 9343     		bics	r3, r2
 1159 003c 0B43     		orrs	r3, r1
 1160 003e 2360     		str	r3, [r4]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1161              		.loc 1 574 5 view .LVU365
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1162              		.loc 1 574 14 is_stmt 0 view .LVU366
 1163 0040 2368     		ldr	r3, [r4]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1164              		.loc 1 574 20 view .LVU367
 1165 0042 1340     		ands	r3, r2
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1166              		.loc 1 574 7 view .LVU368
 1167 0044 8B42     		cmp	r3, r1
 1168 0046 E4D0     		beq	.L112
 1169              	.LVL77:
 1170              	.L118:
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1171              		.loc 1 576 14 view .LVU369
 1172 0048 0120     		movs	r0, #1
 1173              	.L113:
 707:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1174              		.loc 1 707 1 view .LVU370
 1175              		@ sp needed
 1176              	.LVL78:
 1177              	.LVL79:
 1178              		.loc 1 707 1 view .LVU371
 1179 004a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1180              	.LVL80:
 1181              	.L110:
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1182              		.loc 1 583 5 is_stmt 1 view .LVU372
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1183              		.loc 1 584 5 view .LVU373
 1184 004c F020     		movs	r0, #240
 1185              	.LVL81:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1186              		.loc 1 584 5 is_stmt 0 view .LVU374
 1187 004e 2E49     		ldr	r1, .L146+8
 1188              	.LVL82:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1189              		.loc 1 584 5 view .LVU375
 1190 0050 4B68     		ldr	r3, [r1, #4]
 1191 0052 8343     		bics	r3, r0
 1192 0054 A868     		ldr	r0, [r5, #8]
 1193 0056 0343     		orrs	r3, r0
 1194 0058 4B60     		str	r3, [r1, #4]
 1195 005a DDE7     		b	.L111
 1196              	.L114:
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1197              		.loc 1 590 5 is_stmt 1 view .LVU376
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1198              		.loc 1 593 5 view .LVU377
 1199 005c 2A4E     		ldr	r6, .L146+8
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1200              		.loc 1 593 25 is_stmt 0 view .LVU378
 1201 005e 6A68     		ldr	r2, [r5, #4]
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1202              		.loc 1 596 10 view .LVU379
 1203 0060 3368     		ldr	r3, [r6]
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1204              		.loc 1 593 7 view .LVU380
 1205 0062 012A     		cmp	r2, #1
 1206 0064 1AD1     		bne	.L117
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1207              		.loc 1 596 7 is_stmt 1 view .LVU381
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1208              		.loc 1 596 9 is_stmt 0 view .LVU382
 1209 0066 9B03     		lsls	r3, r3, #14
 1210 0068 EED5     		bpl	.L118
 1211              	.L119:
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1212              		.loc 1 630 5 is_stmt 1 view .LVU383
 1213 006a 0321     		movs	r1, #3
 1214 006c 7368     		ldr	r3, [r6, #4]
 1215 006e 8B43     		bics	r3, r1
 1216 0070 1343     		orrs	r3, r2
 1217 0072 7360     		str	r3, [r6, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1218              		.loc 1 633 5 view .LVU384
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1219              		.loc 1 633 17 is_stmt 0 view .LVU385
 1220 0074 FFF7FEFF 		bl	HAL_GetTick
 1221              	.LVL83:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1222              		.loc 1 635 25 view .LVU386
 1223 0078 6B68     		ldr	r3, [r5, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1224              		.loc 1 633 17 view .LVU387
 1225 007a 0190     		str	r0, [sp, #4]
 1226              	.LVL84:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1227              		.loc 1 635 5 is_stmt 1 view .LVU388
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1228              		.loc 1 635 7 is_stmt 0 view .LVU389
 1229 007c 012B     		cmp	r3, #1
 1230 007e 15D1     		bne	.L144
 1231              	.LVL85:
 1232              	.L121:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1233              		.loc 1 637 13 is_stmt 1 view .LVU390
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1234              		.loc 1 637 14 is_stmt 0 view .LVU391
 1235 0080 0C22     		movs	r2, #12
 1236 0082 7368     		ldr	r3, [r6, #4]
 1237 0084 1340     		ands	r3, r2
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1238              		.loc 1 637 13 view .LVU392
 1239 0086 042B     		cmp	r3, #4
 1240 0088 C8D0     		beq	.L124
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1241              		.loc 1 639 9 is_stmt 1 view .LVU393
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1242              		.loc 1 639 13 is_stmt 0 view .LVU394
 1243 008a FFF7FEFF 		bl	HAL_GetTick
 1244              	.LVL86:
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1245              		.loc 1 639 27 view .LVU395
 1246 008e 019B     		ldr	r3, [sp, #4]
 1247 0090 C01A     		subs	r0, r0, r3
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1248              		.loc 1 639 11 view .LVU396
 1249 0092 1E4B     		ldr	r3, .L146+12
 1250 0094 9842     		cmp	r0, r3
 1251 0096 F3D9     		bls	.L121
 1252              	.L127:
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1253              		.loc 1 641 18 view .LVU397
 1254 0098 0320     		movs	r0, #3
 1255 009a D6E7     		b	.L113
 1256              	.LVL87:
 1257              	.L117:
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1258              		.loc 1 602 10 is_stmt 1 view .LVU398
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1259              		.loc 1 602 12 is_stmt 0 view .LVU399
 1260 009c 022A     		cmp	r2, #2
 1261 009e 02D1     		bne	.L120
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1262              		.loc 1 605 7 is_stmt 1 view .LVU400
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1263              		.loc 1 605 9 is_stmt 0 view .LVU401
 1264 00a0 9B01     		lsls	r3, r3, #6
 1265 00a2 E2D4     		bmi	.L119
 1266 00a4 D0E7     		b	.L118
 1267              	.L120:
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1268              		.loc 1 625 7 is_stmt 1 view .LVU402
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1269              		.loc 1 625 9 is_stmt 0 view .LVU403
 1270 00a6 9B07     		lsls	r3, r3, #30
 1271 00a8 DFD4     		bmi	.L119
 1272 00aa CDE7     		b	.L118
 1273              	.LVL88:
 1274              	.L144:
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1275              		.loc 1 645 10 is_stmt 1 view .LVU404
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1276              		.loc 1 645 12 is_stmt 0 view .LVU405
 1277 00ac 022B     		cmp	r3, #2
 1278 00ae 12D0     		beq	.L125
 1279              	.LVL89:
 1280              	.L126:
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1281              		.loc 1 669 13 is_stmt 1 view .LVU406
 1282 00b0 0C22     		movs	r2, #12
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1283              		.loc 1 669 14 is_stmt 0 view .LVU407
 1284 00b2 7368     		ldr	r3, [r6, #4]
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1285              		.loc 1 669 13 view .LVU408
 1286 00b4 1342     		tst	r3, r2
 1287 00b6 B1D0     		beq	.L124
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1288              		.loc 1 671 9 is_stmt 1 view .LVU409
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1289              		.loc 1 671 13 is_stmt 0 view .LVU410
 1290 00b8 FFF7FEFF 		bl	HAL_GetTick
 1291              	.LVL90:
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1292              		.loc 1 671 27 view .LVU411
 1293 00bc 019B     		ldr	r3, [sp, #4]
 1294 00be C01A     		subs	r0, r0, r3
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1295              		.loc 1 671 11 view .LVU412
 1296 00c0 124B     		ldr	r3, .L146+12
 1297 00c2 9842     		cmp	r0, r3
 1298 00c4 F4D9     		bls	.L126
 1299 00c6 E7E7     		b	.L127
 1300              	.L128:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1301              		.loc 1 649 9 is_stmt 1 view .LVU413
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1302              		.loc 1 649 13 is_stmt 0 view .LVU414
 1303 00c8 FFF7FEFF 		bl	HAL_GetTick
 1304              	.LVL91:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1305              		.loc 1 649 27 view .LVU415
 1306 00cc 019B     		ldr	r3, [sp, #4]
 1307 00ce C01A     		subs	r0, r0, r3
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1308              		.loc 1 649 11 view .LVU416
 1309 00d0 0E4B     		ldr	r3, .L146+12
 1310 00d2 9842     		cmp	r0, r3
 1311 00d4 E0D8     		bhi	.L127
 1312              	.L125:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1313              		.loc 1 647 13 is_stmt 1 view .LVU417
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1314              		.loc 1 647 14 is_stmt 0 view .LVU418
 1315 00d6 0C22     		movs	r2, #12
 1316 00d8 7368     		ldr	r3, [r6, #4]
 1317 00da 1340     		ands	r3, r2
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1318              		.loc 1 647 13 view .LVU419
 1319 00dc 082B     		cmp	r3, #8
 1320 00de F3D1     		bne	.L128
 1321 00e0 9CE7     		b	.L124
 1322              	.LVL92:
 1323              	.L115:
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1324              		.loc 1 682 5 is_stmt 1 view .LVU420
 1325 00e2 2268     		ldr	r2, [r4]
 1326 00e4 9A43     		bics	r2, r3
 1327 00e6 2260     		str	r2, [r4]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1328              		.loc 1 686 5 view .LVU421
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1329              		.loc 1 686 14 is_stmt 0 view .LVU422
 1330 00e8 2268     		ldr	r2, [r4]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1331              		.loc 1 686 7 view .LVU423
 1332 00ea 1A42     		tst	r2, r3
 1333 00ec 9BD0     		beq	.L116
 1334 00ee ABE7     		b	.L118
 1335              	.L130:
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1336              		.loc 1 695 5 is_stmt 1 view .LVU424
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1337              		.loc 1 696 5 view .LVU425
 1338 00f0 054A     		ldr	r2, .L146+8
 1339 00f2 0749     		ldr	r1, .L146+16
 1340 00f4 5368     		ldr	r3, [r2, #4]
 1341 00f6 0B40     		ands	r3, r1
 1342 00f8 E968     		ldr	r1, [r5, #12]
 1343 00fa 0B43     		orrs	r3, r1
 1344 00fc 5360     		str	r3, [r2, #4]
 1345 00fe 95E7     		b	.L131
 1346              	.L147:
 1347              		.align	2
 1348              	.L146:
 1349 0100 00200240 		.word	1073881088
 1350 0104 00000000 		.word	.LANCHOR1
 1351 0108 00100240 		.word	1073876992
 1352 010c 88130000 		.word	5000
 1353 0110 FFF8FFFF 		.word	-1793
 1354              		.cfi_endproc
 1355              	.LFE42:
 1357              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
 1358              		.align	1
 1359              		.global	HAL_RCCEx_PeriphCLKConfig
 1360              		.syntax unified
 1361              		.code	16
 1362              		.thumb_func
 1363              		.fpu softvfp
 1365              	HAL_RCCEx_PeriphCLKConfig:
 1366              	.LVL93:
 1367              	.LFB43:
 708:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 709:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1368              		.loc 1 710 1 view -0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 16
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 711:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1372              		.loc 1 711 3 view .LVU427
 712:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp_reg = 0U;
 1373              		.loc 1 712 3 view .LVU428
 713:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 714:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 715:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 1374              		.loc 1 715 3 view .LVU429
 716:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 717:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*---------------------------- RTC configuration -------------------------------*/
 718:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 1375              		.loc 1 718 3 view .LVU430
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1376              		.loc 1 710 1 is_stmt 0 view .LVU431
 1377 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1378              	.LCFI3:
 1379              		.cfi_def_cfa_offset 20
 1380              		.cfi_offset 4, -20
 1381              		.cfi_offset 5, -16
 1382              		.cfi_offset 6, -12
 1383              		.cfi_offset 7, -8
 1384              		.cfi_offset 14, -4
 1385              		.loc 1 718 5 view .LVU432
 1386 0002 0368     		ldr	r3, [r0]
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1387              		.loc 1 710 1 view .LVU433
 1388 0004 0500     		movs	r5, r0
 1389 0006 85B0     		sub	sp, sp, #20
 1390              	.LCFI4:
 1391              		.cfi_def_cfa_offset 40
 1392              		.loc 1 718 5 view .LVU434
 1393 0008 DB03     		lsls	r3, r3, #15
 1394 000a 2AD5     		bpl	.L150
 1395              	.LBB14:
 719:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 720:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* check for RTC Parameters used to output RTCCLK */
 721:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 1396              		.loc 1 721 5 is_stmt 1 view .LVU435
 722:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 1397              		.loc 1 723 5 view .LVU436
 1398              	.LVL94:
 724:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 725:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* As soon as function is called to change RTC clock source, activation of the 
 726:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        power domain is done. */
 727:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 728:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 1399              		.loc 1 728 5 view .LVU437
 1400              		.loc 1 728 8 is_stmt 0 view .LVU438
 1401 000c 8022     		movs	r2, #128
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1402              		.loc 1 723 22 view .LVU439
 1403 000e 0021     		movs	r1, #0
 1404              		.loc 1 728 8 view .LVU440
 1405 0010 384C     		ldr	r4, .L175
 1406 0012 5205     		lsls	r2, r2, #21
 1407 0014 E369     		ldr	r3, [r4, #28]
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1408              		.loc 1 723 22 view .LVU441
 1409 0016 0091     		str	r1, [sp]
 1410              		.loc 1 728 7 view .LVU442
 1411 0018 1342     		tst	r3, r2
 1412 001a 08D1     		bne	.L151
 729:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 730:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 1413              		.loc 1 730 5 is_stmt 1 view .LVU443
 1414              	.LBB15:
 1415              		.loc 1 730 5 view .LVU444
 1416              		.loc 1 730 5 view .LVU445
 1417 001c E369     		ldr	r3, [r4, #28]
 1418 001e 1343     		orrs	r3, r2
 1419 0020 E361     		str	r3, [r4, #28]
 1420              		.loc 1 730 5 view .LVU446
 1421 0022 E369     		ldr	r3, [r4, #28]
 1422 0024 1340     		ands	r3, r2
 1423 0026 0393     		str	r3, [sp, #12]
 1424              		.loc 1 730 5 view .LVU447
 1425 0028 039B     		ldr	r3, [sp, #12]
 1426              	.LBE15:
 1427              		.loc 1 730 5 view .LVU448
 731:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 1428              		.loc 1 731 7 view .LVU449
 1429              	.LVL95:
 1430              		.loc 1 731 21 is_stmt 0 view .LVU450
 1431 002a 0123     		movs	r3, #1
 1432 002c 0093     		str	r3, [sp]
 1433              	.LVL96:
 1434              	.L151:
 732:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 733:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 734:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1435              		.loc 1 734 5 is_stmt 1 view .LVU451
 1436              		.loc 1 734 8 is_stmt 0 view .LVU452
 1437 002e 8027     		movs	r7, #128
 1438 0030 314E     		ldr	r6, .L175+4
 1439 0032 7F00     		lsls	r7, r7, #1
 1440 0034 3368     		ldr	r3, [r6]
 1441              		.loc 1 734 7 view .LVU453
 1442 0036 3B42     		tst	r3, r7
 1443 0038 28D0     		beq	.L152
 1444              	.LVL97:
 1445              	.L158:
 735:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 736:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 738:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 739:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 741:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 743:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 745:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 747:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 748:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 749:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 750:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 751:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 1446              		.loc 1 752 5 is_stmt 1 view .LVU454
 1447              		.loc 1 752 20 is_stmt 0 view .LVU455
 1448 003a 226A     		ldr	r2, [r4, #32]
 1449              		.loc 1 752 14 view .LVU456
 1450 003c C023     		movs	r3, #192
 1451 003e 1100     		movs	r1, r2
 1452 0040 9B00     		lsls	r3, r3, #2
 1453 0042 2E4E     		ldr	r6, .L175+8
 1454 0044 1940     		ands	r1, r3
 1455              	.LVL98:
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 1456              		.loc 1 753 5 is_stmt 1 view .LVU457
 1457              		.loc 1 753 7 is_stmt 0 view .LVU458
 1458 0046 1A42     		tst	r2, r3
 1459 0048 32D1     		bne	.L153
 1460              	.LVL99:
 1461              	.L154:
 754:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 755:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 757:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 760:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       RCC->BDCR = temp_reg;
 762:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for LSERDY if LSE was enabled */
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 765:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 766:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 768:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 769:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till LSE is ready */  
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 771:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 773:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 774:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 775:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 776:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 777:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 778:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 779:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1462              		.loc 1 779 5 is_stmt 1 view .LVU459
 1463 004a 236A     		ldr	r3, [r4, #32]
 1464 004c 1E40     		ands	r6, r3
 1465 004e 6B68     		ldr	r3, [r5, #4]
 1466 0050 1E43     		orrs	r6, r3
 780:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 781:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 782:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 1467              		.loc 1 782 7 is_stmt 0 view .LVU460
 1468 0052 009B     		ldr	r3, [sp]
 779:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1469              		.loc 1 779 5 view .LVU461
 1470 0054 2662     		str	r6, [r4, #32]
 1471              		.loc 1 782 5 is_stmt 1 view .LVU462
 1472              		.loc 1 782 7 is_stmt 0 view .LVU463
 1473 0056 012B     		cmp	r3, #1
 1474 0058 03D1     		bne	.L150
 783:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 784:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1475              		.loc 1 784 7 is_stmt 1 view .LVU464
 1476 005a E369     		ldr	r3, [r4, #28]
 1477 005c 284A     		ldr	r2, .L175+12
 1478 005e 1340     		ands	r3, r2
 1479 0060 E361     		str	r3, [r4, #28]
 1480              	.LVL100:
 1481              	.L150:
 1482              		.loc 1 784 7 is_stmt 0 view .LVU465
 1483              	.LBE14:
 785:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 786:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 787:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 788:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- USART1 Configuration ------------------------*/ 
 789:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 1484              		.loc 1 789 3 is_stmt 1 view .LVU466
 1485              		.loc 1 789 21 is_stmt 0 view .LVU467
 1486 0062 2A68     		ldr	r2, [r5]
 1487              		.loc 1 789 5 view .LVU468
 1488 0064 D307     		lsls	r3, r2, #31
 1489 0066 06D5     		bpl	.L164
 790:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 791:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 792:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 1490              		.loc 1 792 5 is_stmt 1 view .LVU469
 793:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 794:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART1 clock source */
 795:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 1491              		.loc 1 795 5 view .LVU470
 1492 0068 0320     		movs	r0, #3
 1493 006a 2249     		ldr	r1, .L175
 1494 006c 0B6B     		ldr	r3, [r1, #48]
 1495 006e 8343     		bics	r3, r0
 1496 0070 A868     		ldr	r0, [r5, #8]
 1497 0072 0343     		orrs	r3, r0
 1498 0074 0B63     		str	r3, [r1, #48]
 1499              	.L164:
 796:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 797:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 798:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 799:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 800:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART2 Configuration --------------------------*/ 
 801:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 802:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 803:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 804:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 805:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 806:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART2 clock source */
 807:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 808:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 809:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 810:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 811:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 812:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 813:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART3 Configuration --------------------------*/ 
 814:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 815:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 816:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 817:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 818:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 819:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART3 clock source */
 820:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 821:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 822:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F091xC || STM32F098xx */  
 823:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 824:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ I2C1 Configuration ------------------------*/ 
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 1500              		.loc 1 825 3 view .LVU471
 826:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 827:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 829:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 830:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the I2C1 clock source */
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 832:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 833:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 834:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 835:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ USB Configuration ------------------------*/ 
 836:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 837:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 838:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 839:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 840:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 841:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USB clock source */
 842:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 843:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 844:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 845:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 846:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 847:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 848:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 849:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 850:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ CEC clock Configuration -------------------*/ 
 851:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 852:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 853:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 854:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 855:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 856:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the CEC clock source */
 857:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 858:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 859:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 860:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F051x8 || STM32F058xx ||                */
 861:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 862:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 863:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 864:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1501              		.loc 1 864 10 is_stmt 0 view .LVU472
 1502 0076 0020     		movs	r0, #0
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 1503              		.loc 1 825 5 view .LVU473
 1504 0078 9306     		lsls	r3, r2, #26
 1505 007a 17D5     		bpl	.L156
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1506              		.loc 1 828 5 is_stmt 1 view .LVU474
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1507              		.loc 1 831 5 view .LVU475
 1508 007c 1021     		movs	r1, #16
 1509 007e 1D4A     		ldr	r2, .L175
 1510 0080 136B     		ldr	r3, [r2, #48]
 1511 0082 8B43     		bics	r3, r1
 1512 0084 E968     		ldr	r1, [r5, #12]
 1513 0086 0B43     		orrs	r3, r1
 1514 0088 1363     		str	r3, [r2, #48]
 1515 008a 0FE0     		b	.L156
 1516              	.LVL101:
 1517              	.L152:
 1518              	.LBB16:
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1519              		.loc 1 737 7 view .LVU476
 1520 008c 3368     		ldr	r3, [r6]
 1521 008e 3B43     		orrs	r3, r7
 1522 0090 3360     		str	r3, [r6]
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1523              		.loc 1 740 7 view .LVU477
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1524              		.loc 1 740 19 is_stmt 0 view .LVU478
 1525 0092 FFF7FEFF 		bl	HAL_GetTick
 1526              	.LVL102:
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1527              		.loc 1 740 19 view .LVU479
 1528 0096 0190     		str	r0, [sp, #4]
 1529              	.LVL103:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1530              		.loc 1 742 7 is_stmt 1 view .LVU480
 1531              	.L155:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1532              		.loc 1 742 12 view .LVU481
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1533              		.loc 1 742 13 is_stmt 0 view .LVU482
 1534 0098 3368     		ldr	r3, [r6]
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1535              		.loc 1 742 12 view .LVU483
 1536 009a 3B42     		tst	r3, r7
 1537 009c CDD1     		bne	.L158
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1538              		.loc 1 744 9 is_stmt 1 view .LVU484
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1539              		.loc 1 744 13 is_stmt 0 view .LVU485
 1540 009e FFF7FEFF 		bl	HAL_GetTick
 1541              	.LVL104:
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1542              		.loc 1 744 27 view .LVU486
 1543 00a2 019B     		ldr	r3, [sp, #4]
 1544 00a4 C01A     		subs	r0, r0, r3
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1545              		.loc 1 744 11 view .LVU487
 1546 00a6 6428     		cmp	r0, #100
 1547 00a8 F6D9     		bls	.L155
 1548              	.LVL105:
 1549              	.L162:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1550              		.loc 1 746 18 view .LVU488
 1551 00aa 0320     		movs	r0, #3
 1552              	.LVL106:
 1553              	.L156:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1554              		.loc 1 746 18 view .LVU489
 1555              	.LBE16:
 865:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1556              		.loc 1 865 1 view .LVU490
 1557 00ac 05B0     		add	sp, sp, #20
 1558              		@ sp needed
 1559              	.LVL107:
 1560              		.loc 1 865 1 view .LVU491
 1561 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 1562              	.LVL108:
 1563              	.L153:
 1564              	.LBB17:
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1565              		.loc 1 753 84 discriminator 1 view .LVU492
 1566 00b0 6A68     		ldr	r2, [r5, #4]
 1567 00b2 1340     		ands	r3, r2
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1568              		.loc 1 753 34 discriminator 1 view .LVU493
 1569 00b4 8B42     		cmp	r3, r1
 1570 00b6 C8D0     		beq	.L154
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1571              		.loc 1 756 7 is_stmt 1 view .LVU494
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1572              		.loc 1 758 7 is_stmt 0 view .LVU495
 1573 00b8 8023     		movs	r3, #128
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1574              		.loc 1 756 22 view .LVU496
 1575 00ba 226A     		ldr	r2, [r4, #32]
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1576              		.loc 1 758 7 view .LVU497
 1577 00bc 206A     		ldr	r0, [r4, #32]
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1578              		.loc 1 756 16 view .LVU498
 1579 00be 1100     		movs	r1, r2
 1580              	.LVL109:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1581              		.loc 1 758 7 view .LVU499
 1582 00c0 5B02     		lsls	r3, r3, #9
 1583 00c2 0343     		orrs	r3, r0
 1584 00c4 2362     		str	r3, [r4, #32]
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1585              		.loc 1 759 7 view .LVU500
 1586 00c6 236A     		ldr	r3, [r4, #32]
 1587 00c8 0E48     		ldr	r0, .L175+16
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1588              		.loc 1 756 16 view .LVU501
 1589 00ca 3140     		ands	r1, r6
 1590              	.LVL110:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1591              		.loc 1 758 7 is_stmt 1 view .LVU502
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1592              		.loc 1 759 7 view .LVU503
 1593 00cc 0340     		ands	r3, r0
 1594 00ce 2362     		str	r3, [r4, #32]
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1595              		.loc 1 761 7 view .LVU504
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1596              		.loc 1 761 17 is_stmt 0 view .LVU505
 1597 00d0 2162     		str	r1, [r4, #32]
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1598              		.loc 1 764 7 is_stmt 1 view .LVU506
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1599              		.loc 1 764 10 is_stmt 0 view .LVU507
 1600 00d2 D307     		lsls	r3, r2, #31
 1601 00d4 B9D5     		bpl	.L154
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1602              		.loc 1 767 9 is_stmt 1 view .LVU508
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1603              		.loc 1 767 21 is_stmt 0 view .LVU509
 1604 00d6 FFF7FEFF 		bl	HAL_GetTick
 1605              	.LVL111:
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1606              		.loc 1 767 21 view .LVU510
 1607 00da 0700     		movs	r7, r0
 1608              	.LVL112:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1609              		.loc 1 770 9 is_stmt 1 view .LVU511
 1610              	.L161:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1611              		.loc 1 770 14 view .LVU512
 1612 00dc 0222     		movs	r2, #2
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1613              		.loc 1 770 15 is_stmt 0 view .LVU513
 1614 00de 236A     		ldr	r3, [r4, #32]
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1615              		.loc 1 770 14 view .LVU514
 1616 00e0 1342     		tst	r3, r2
 1617 00e2 B2D1     		bne	.L154
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1618              		.loc 1 772 11 is_stmt 1 view .LVU515
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1619              		.loc 1 772 15 is_stmt 0 view .LVU516
 1620 00e4 FFF7FEFF 		bl	HAL_GetTick
 1621              	.LVL113:
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1622              		.loc 1 772 13 view .LVU517
 1623 00e8 074B     		ldr	r3, .L175+20
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1624              		.loc 1 772 29 view .LVU518
 1625 00ea C01B     		subs	r0, r0, r7
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1626              		.loc 1 772 13 view .LVU519
 1627 00ec 9842     		cmp	r0, r3
 1628 00ee F5D9     		bls	.L161
 1629 00f0 DBE7     		b	.L162
 1630              	.L176:
 1631 00f2 C046     		.align	2
 1632              	.L175:
 1633 00f4 00100240 		.word	1073876992
 1634 00f8 00700040 		.word	1073770496
 1635 00fc FFFCFFFF 		.word	-769
 1636 0100 FFFFFFEF 		.word	-268435457
 1637 0104 FFFFFEFF 		.word	-65537
 1638 0108 88130000 		.word	5000
 1639              	.LBE17:
 1640              		.cfi_endproc
 1641              	.LFE43:
 1643              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 1644              		.align	1
 1645              		.global	HAL_GPIO_Init
 1646              		.syntax unified
 1647              		.code	16
 1648              		.thumb_func
 1649              		.fpu softvfp
 1651              	HAL_GPIO_Init:
 1652              	.LVL114:
 1653              	.LFB44:
 866:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 867:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 868:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 869:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 870:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 871:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 872:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 873:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 874:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 875:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 876:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 877:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 878:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 879:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 880:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 881:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 882:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 883:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 884:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 885:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 886:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_USART1_CLK_ENABLE()   do { \
 887:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 888:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 889:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 890:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 891:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 892:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 893:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 894:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 895:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 896:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 897:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 898:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 899:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
 900:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 901:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** { 
 1654              		.loc 1 902 1 is_stmt 1 view -0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 24
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1658              		.loc 1 903 3 view .LVU521
 904:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1659              		.loc 1 904 3 view .LVU522
 905:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 1660              		.loc 1 905 3 view .LVU523
 906:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 907:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 908:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 1661              		.loc 1 908 3 view .LVU524
 909:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 1662              		.loc 1 909 3 view .LVU525
 910:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 1663              		.loc 1 910 3 view .LVU526
 911:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 1664              		.loc 1 911 3 view .LVU527
 912:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 913:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the port pins */
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 1665              		.loc 1 914 3 view .LVU528
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1666              		.loc 1 903 12 is_stmt 0 view .LVU529
 1667 0000 0023     		movs	r3, #0
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1668              		.loc 1 902 1 view .LVU530
 1669 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1670              	.LCFI5:
 1671              		.cfi_def_cfa_offset 20
 1672              		.cfi_offset 4, -20
 1673              		.cfi_offset 5, -16
 1674              		.cfi_offset 6, -12
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0004 87B0     		sub	sp, sp, #28
 1678              	.LCFI6:
 1679              		.cfi_def_cfa_offset 48
 1680              	.LVL115:
 1681              	.L178:
 1682              		.loc 1 914 9 is_stmt 1 view .LVU531
 1683              		.loc 1 914 21 is_stmt 0 view .LVU532
 1684 0006 0A68     		ldr	r2, [r1]
 1685              		.loc 1 914 28 view .LVU533
 1686 0008 1400     		movs	r4, r2
 1687 000a DC40     		lsrs	r4, r4, r3
 1688              		.loc 1 914 9 view .LVU534
 1689 000c 01D1     		bne	.L193
 915:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 916:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get current io position */
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 918:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(iocurrent)
 920:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 921:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 922:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 924:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 925:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 928:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */ 
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 934:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 935:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 936:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->MODER;
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 941:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 942:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 944:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 945:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 946:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Speed parameter */
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 948:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR; 
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 953:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 954:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Output Type */
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 959:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 960:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 961:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 966:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 967:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 968:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 970:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 971:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 973:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 978:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 979:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->IMR;
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 983:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 985:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->IMR = temp;
 987:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->EMR;
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 991:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 993:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->EMR = temp;
 995:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 996:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->RTSR;
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
1000:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1002:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->RTSR = temp;
1004:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->FTSR;
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
1008:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1010:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->FTSR = temp;
1012:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1013:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1014:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     position++;
1016:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
1017:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1690              		.loc 1 1017 1 view .LVU535
 1691 000e 07B0     		add	sp, sp, #28
 1692              		@ sp needed
 1693 0010 F0BD     		pop	{r4, r5, r6, r7, pc}
 1694              	.L193:
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1695              		.loc 1 917 5 is_stmt 1 view .LVU536
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1696              		.loc 1 917 40 is_stmt 0 view .LVU537
 1697 0012 0126     		movs	r6, #1
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1698              		.loc 1 917 15 view .LVU538
 1699 0014 1400     		movs	r4, r2
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1700              		.loc 1 917 40 view .LVU539
 1701 0016 9E40     		lsls	r6, r6, r3
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1702              		.loc 1 917 15 view .LVU540
 1703 0018 3440     		ands	r4, r6
 1704 001a 0294     		str	r4, [sp, #8]
 1705              	.LVL116:
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1706              		.loc 1 919 5 is_stmt 1 view .LVU541
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1707              		.loc 1 919 7 is_stmt 0 view .LVU542
 1708 001c 3242     		tst	r2, r6
 1709 001e 00D1     		bne	.LCB1555
 1710 0020 92E0     		b	.L180	@long jump
 1711              	.LCB1555:
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1712              		.loc 1 923 7 is_stmt 1 view .LVU543
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1713              		.loc 1 923 20 is_stmt 0 view .LVU544
 1714 0022 4A68     		ldr	r2, [r1, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1715              		.loc 1 923 9 view .LVU545
 1716 0024 1500     		movs	r5, r2
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1717              		.loc 1 923 20 view .LVU546
 1718 0026 0192     		str	r2, [sp, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1719              		.loc 1 923 9 view .LVU547
 1720 0028 1022     		movs	r2, #16
 1721 002a 9543     		bics	r5, r2
 1722 002c 0395     		str	r5, [sp, #12]
 1723 002e 022D     		cmp	r5, #2
 1724 0030 0DD1     		bne	.L181
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 1725              		.loc 1 926 9 is_stmt 1 view .LVU548
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1726              		.loc 1 927 9 view .LVU549
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1727              		.loc 1 930 9 view .LVU550
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1728              		.loc 1 931 9 is_stmt 0 view .LVU551
 1729 0032 0724     		movs	r4, #7
 1730              	.LVL117:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1731              		.loc 1 931 9 view .LVU552
 1732 0034 0F25     		movs	r5, #15
 1733 0036 1C40     		ands	r4, r3
 1734 0038 A400     		lsls	r4, r4, #2
 1735 003a A540     		lsls	r5, r5, r4
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1736              		.loc 1 930 36 view .LVU553
 1737 003c DA08     		lsrs	r2, r3, #3
 1738 003e 9200     		lsls	r2, r2, #2
 1739 0040 8218     		adds	r2, r0, r2
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1740              		.loc 1 930 14 view .LVU554
 1741 0042 176A     		ldr	r7, [r2, #32]
 1742              	.LVL118:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1743              		.loc 1 931 9 is_stmt 1 view .LVU555
 1744 0044 AF43     		bics	r7, r5
 1745              	.LVL119:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1746              		.loc 1 932 9 view .LVU556
 1747 0046 0D69     		ldr	r5, [r1, #16]
 1748 0048 A540     		lsls	r5, r5, r4
 1749 004a 2F43     		orrs	r7, r5
 1750              	.LVL120:
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1751              		.loc 1 933 9 view .LVU557
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1752              		.loc 1 933 36 is_stmt 0 view .LVU558
 1753 004c 1762     		str	r7, [r2, #32]
 1754              	.LVL121:
 1755              	.L181:
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1756              		.loc 1 937 7 is_stmt 1 view .LVU559
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1757              		.loc 1 938 7 is_stmt 0 view .LVU560
 1758 004e 0322     		movs	r2, #3
 1759 0050 5C00     		lsls	r4, r3, #1
 1760 0052 A240     		lsls	r2, r2, r4
 1761 0054 D543     		mvns	r5, r2
 1762 0056 AC46     		mov	ip, r5
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1763              		.loc 1 939 7 view .LVU561
 1764 0058 0325     		movs	r5, #3
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1765              		.loc 1 937 12 view .LVU562
 1766 005a 0768     		ldr	r7, [r0]
 1767              	.LVL122:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1768              		.loc 1 938 7 is_stmt 1 view .LVU563
 1769 005c 9743     		bics	r7, r2
 1770              	.LVL123:
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1771              		.loc 1 939 7 view .LVU564
 1772 005e 019A     		ldr	r2, [sp, #4]
 1773 0060 2A40     		ands	r2, r5
 1774 0062 A240     		lsls	r2, r2, r4
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1775              		.loc 1 943 10 is_stmt 0 view .LVU565
 1776 0064 039D     		ldr	r5, [sp, #12]
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1777              		.loc 1 939 7 view .LVU566
 1778 0066 3A43     		orrs	r2, r7
 1779              	.LVL124:
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1780              		.loc 1 940 7 is_stmt 1 view .LVU567
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1781              		.loc 1 943 10 is_stmt 0 view .LVU568
 1782 0068 013D     		subs	r5, r5, #1
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1783              		.loc 1 940 20 view .LVU569
 1784 006a 0260     		str	r2, [r0]
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1785              		.loc 1 943 7 is_stmt 1 view .LVU570
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1786              		.loc 1 943 10 is_stmt 0 view .LVU571
 1787 006c 012D     		cmp	r5, #1
 1788 006e 0FD8     		bhi	.L182
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 1789              		.loc 1 947 9 is_stmt 1 view .LVU572
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1790              		.loc 1 949 9 view .LVU573
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1791              		.loc 1 950 9 is_stmt 0 view .LVU574
 1792 0070 6246     		mov	r2, ip
 1793              	.LVL125:
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1794              		.loc 1 949 14 view .LVU575
 1795 0072 8568     		ldr	r5, [r0, #8]
 1796              	.LVL126:
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1797              		.loc 1 950 9 is_stmt 1 view .LVU576
 1798 0074 1540     		ands	r5, r2
 1799              	.LVL127:
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1800              		.loc 1 951 9 view .LVU577
 1801 0076 CA68     		ldr	r2, [r1, #12]
 1802 0078 A240     		lsls	r2, r2, r4
 1803 007a 2A43     		orrs	r2, r5
 1804              	.LVL128:
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1805              		.loc 1 952 9 view .LVU578
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1806              		.loc 1 952 24 is_stmt 0 view .LVU579
 1807 007c 8260     		str	r2, [r0, #8]
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1808              		.loc 1 955 9 is_stmt 1 view .LVU580
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1809              		.loc 1 955 14 is_stmt 0 view .LVU581
 1810 007e 4568     		ldr	r5, [r0, #4]
 1811              	.LVL129:
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1812              		.loc 1 956 9 is_stmt 1 view .LVU582
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1813              		.loc 1 957 9 is_stmt 0 view .LVU583
 1814 0080 019A     		ldr	r2, [sp, #4]
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1815              		.loc 1 956 9 view .LVU584
 1816 0082 B543     		bics	r5, r6
 1817              	.LVL130:
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1818              		.loc 1 957 9 is_stmt 1 view .LVU585
 1819 0084 0126     		movs	r6, #1
 1820 0086 1209     		lsrs	r2, r2, #4
 1821 0088 3240     		ands	r2, r6
 1822 008a 9A40     		lsls	r2, r2, r3
 1823 008c 2A43     		orrs	r2, r5
 1824              	.LVL131:
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1825              		.loc 1 958 9 view .LVU586
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1826              		.loc 1 958 23 is_stmt 0 view .LVU587
 1827 008e 4260     		str	r2, [r0, #4]
 1828              	.LVL132:
 1829              	.L182:
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1830              		.loc 1 962 7 is_stmt 1 view .LVU588
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1831              		.loc 1 963 7 is_stmt 0 view .LVU589
 1832 0090 6546     		mov	r5, ip
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1833              		.loc 1 962 12 view .LVU590
 1834 0092 C268     		ldr	r2, [r0, #12]
 1835              	.LVL133:
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1836              		.loc 1 963 7 is_stmt 1 view .LVU591
 1837 0094 2A40     		ands	r2, r5
 1838              	.LVL134:
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1839              		.loc 1 964 7 view .LVU592
 1840 0096 8D68     		ldr	r5, [r1, #8]
 1841 0098 A540     		lsls	r5, r5, r4
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1842              		.loc 1 969 9 is_stmt 0 view .LVU593
 1843 009a 8024     		movs	r4, #128
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1844              		.loc 1 964 7 view .LVU594
 1845 009c 2A43     		orrs	r2, r5
 1846              	.LVL135:
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1847              		.loc 1 965 7 is_stmt 1 view .LVU595
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1848              		.loc 1 965 20 is_stmt 0 view .LVU596
 1849 009e C260     		str	r2, [r0, #12]
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1850              		.loc 1 969 7 is_stmt 1 view .LVU597
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1851              		.loc 1 969 9 is_stmt 0 view .LVU598
 1852 00a0 019A     		ldr	r2, [sp, #4]
 1853              	.LVL136:
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1854              		.loc 1 969 9 view .LVU599
 1855 00a2 6405     		lsls	r4, r4, #21
 1856 00a4 2242     		tst	r2, r4
 1857 00a6 4FD0     		beq	.L180
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1858              		.loc 1 972 9 is_stmt 1 view .LVU600
 1859              	.LBB18:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1860              		.loc 1 972 9 view .LVU601
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1861              		.loc 1 972 9 view .LVU602
 1862 00a8 0125     		movs	r5, #1
 1863              	.LBE18:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1864              		.loc 1 975 9 is_stmt 0 view .LVU603
 1865 00aa 0F27     		movs	r7, #15
 1866              	.LBB19:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1867              		.loc 1 972 9 view .LVU604
 1868 00ac 274A     		ldr	r2, .L201
 1869 00ae 9469     		ldr	r4, [r2, #24]
 1870 00b0 2C43     		orrs	r4, r5
 1871 00b2 9461     		str	r4, [r2, #24]
 1872              	.LVL137:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1873              		.loc 1 972 9 is_stmt 1 view .LVU605
 1874 00b4 9269     		ldr	r2, [r2, #24]
 1875              	.LBE19:
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1876              		.loc 1 974 40 is_stmt 0 view .LVU606
 1877 00b6 9C08     		lsrs	r4, r3, #2
 1878              	.LBB20:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1879              		.loc 1 972 9 view .LVU607
 1880 00b8 2A40     		ands	r2, r5
 1881              	.LBE20:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1882              		.loc 1 975 9 view .LVU608
 1883 00ba 0235     		adds	r5, r5, #2
 1884 00bc 1D40     		ands	r5, r3
 1885 00be AD00     		lsls	r5, r5, #2
 1886 00c0 AF40     		lsls	r7, r7, r5
 1887              	.LBB21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1888              		.loc 1 972 9 view .LVU609
 1889 00c2 0592     		str	r2, [sp, #20]
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1890              		.loc 1 972 9 is_stmt 1 view .LVU610
 1891 00c4 059A     		ldr	r2, [sp, #20]
 1892              	.LBE21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1893              		.loc 1 972 9 view .LVU611
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1894              		.loc 1 974 9 view .LVU612
 1895 00c6 224A     		ldr	r2, .L201+4
 1896 00c8 A400     		lsls	r4, r4, #2
 1897 00ca A418     		adds	r4, r4, r2
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1898              		.loc 1 974 14 is_stmt 0 view .LVU613
 1899 00cc A668     		ldr	r6, [r4, #8]
 1900              	.LVL138:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1901              		.loc 1 975 9 is_stmt 1 view .LVU614
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1902              		.loc 1 976 9 is_stmt 0 view .LVU615
 1903 00ce 0022     		movs	r2, #0
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1904              		.loc 1 975 9 view .LVU616
 1905 00d0 BE43     		bics	r6, r7
 1906              	.LVL139:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1907              		.loc 1 976 9 is_stmt 1 view .LVU617
 1908 00d2 9027     		movs	r7, #144
 1909 00d4 FF05     		lsls	r7, r7, #23
 1910 00d6 B842     		cmp	r0, r7
 1911 00d8 0CD0     		beq	.L184
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1912              		.loc 1 976 9 is_stmt 0 discriminator 1 view .LVU618
 1913 00da 1E4F     		ldr	r7, .L201+8
 1914 00dc 0132     		adds	r2, r2, #1
 1915 00de B842     		cmp	r0, r7
 1916 00e0 08D0     		beq	.L184
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1917              		.loc 1 976 9 discriminator 3 view .LVU619
 1918 00e2 1D4F     		ldr	r7, .L201+12
 1919 00e4 0132     		adds	r2, r2, #1
 1920 00e6 B842     		cmp	r0, r7
 1921 00e8 04D0     		beq	.L184
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1922              		.loc 1 976 9 discriminator 5 view .LVU620
 1923 00ea 1C4F     		ldr	r7, .L201+16
 1924 00ec 0132     		adds	r2, r2, #1
 1925 00ee B842     		cmp	r0, r7
 1926 00f0 00D0     		beq	.L184
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1927              		.loc 1 976 9 view .LVU621
 1928 00f2 0232     		adds	r2, r2, #2
 1929              	.L184:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1930              		.loc 1 976 9 discriminator 16 view .LVU622
 1931 00f4 AA40     		lsls	r2, r2, r5
 1932 00f6 3243     		orrs	r2, r6
 1933              	.LVL140:
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1934              		.loc 1 977 9 is_stmt 1 discriminator 16 view .LVU623
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1935              		.loc 1 977 39 is_stmt 0 discriminator 16 view .LVU624
 1936 00f8 A260     		str	r2, [r4, #8]
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1937              		.loc 1 980 9 is_stmt 1 discriminator 16 view .LVU625
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1938              		.loc 1 980 14 is_stmt 0 discriminator 16 view .LVU626
 1939 00fa 194A     		ldr	r2, .L201+20
 1940              	.LVL141:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1941              		.loc 1 981 9 discriminator 16 view .LVU627
 1942 00fc 029C     		ldr	r4, [sp, #8]
 1943              	.LVL142:
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1944              		.loc 1 980 14 discriminator 16 view .LVU628
 1945 00fe 1668     		ldr	r6, [r2]
 1946              	.LVL143:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1947              		.loc 1 981 9 is_stmt 1 discriminator 16 view .LVU629
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1948              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU630
 1949 0100 029D     		ldr	r5, [sp, #8]
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1950              		.loc 1 982 11 discriminator 16 view .LVU631
 1951 0102 019F     		ldr	r7, [sp, #4]
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1952              		.loc 1 981 9 discriminator 16 view .LVU632
 1953 0104 E443     		mvns	r4, r4
 1954              	.LVL144:
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1955              		.loc 1 982 9 is_stmt 1 discriminator 16 view .LVU633
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1956              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU634
 1957 0106 3543     		orrs	r5, r6
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1958              		.loc 1 982 11 discriminator 16 view .LVU635
 1959 0108 FF03     		lsls	r7, r7, #15
 1960 010a 01D4     		bmi	.L186
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1961              		.loc 1 981 9 view .LVU636
 1962 010c 3500     		movs	r5, r6
 1963 010e 2540     		ands	r5, r4
 1964              	.LVL145:
 1965              	.L186:
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1966              		.loc 1 986 9 is_stmt 1 view .LVU637
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1967              		.loc 1 986 19 is_stmt 0 view .LVU638
 1968 0110 1560     		str	r5, [r2]
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1969              		.loc 1 988 9 is_stmt 1 view .LVU639
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1970              		.loc 1 988 14 is_stmt 0 view .LVU640
 1971 0112 5668     		ldr	r6, [r2, #4]
 1972              	.LVL146:
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1973              		.loc 1 989 9 is_stmt 1 view .LVU641
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1974              		.loc 1 990 9 view .LVU642
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1975              		.loc 1 992 11 is_stmt 0 view .LVU643
 1976 0114 029D     		ldr	r5, [sp, #8]
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1977              		.loc 1 990 11 view .LVU644
 1978 0116 019F     		ldr	r7, [sp, #4]
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1979              		.loc 1 992 11 view .LVU645
 1980 0118 3543     		orrs	r5, r6
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1981              		.loc 1 990 11 view .LVU646
 1982 011a BF03     		lsls	r7, r7, #14
 1983 011c 01D4     		bmi	.L188
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1984              		.loc 1 989 9 view .LVU647
 1985 011e 3500     		movs	r5, r6
 1986 0120 2540     		ands	r5, r4
 1987              	.LVL147:
 1988              	.L188:
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1989              		.loc 1 994 9 is_stmt 1 view .LVU648
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1990              		.loc 1 994 19 is_stmt 0 view .LVU649
 1991 0122 5560     		str	r5, [r2, #4]
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1992              		.loc 1 997 9 is_stmt 1 view .LVU650
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1993              		.loc 1 997 14 is_stmt 0 view .LVU651
 1994 0124 9668     		ldr	r6, [r2, #8]
 1995              	.LVL148:
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 1996              		.loc 1 998 9 is_stmt 1 view .LVU652
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1997              		.loc 1 999 9 view .LVU653
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1998              		.loc 1 1001 11 is_stmt 0 view .LVU654
 1999 0126 029D     		ldr	r5, [sp, #8]
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2000              		.loc 1 999 11 view .LVU655
 2001 0128 019F     		ldr	r7, [sp, #4]
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2002              		.loc 1 1001 11 view .LVU656
 2003 012a 3543     		orrs	r5, r6
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2004              		.loc 1 999 11 view .LVU657
 2005 012c FF02     		lsls	r7, r7, #11
 2006 012e 01D4     		bmi	.L190
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2007              		.loc 1 998 9 view .LVU658
 2008 0130 3500     		movs	r5, r6
 2009 0132 2540     		ands	r5, r4
 2010              	.LVL149:
 2011              	.L190:
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2012              		.loc 1 1003 9 is_stmt 1 view .LVU659
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2013              		.loc 1 1003 20 is_stmt 0 view .LVU660
 2014 0134 9560     		str	r5, [r2, #8]
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2015              		.loc 1 1005 9 is_stmt 1 view .LVU661
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2016              		.loc 1 1005 14 is_stmt 0 view .LVU662
 2017 0136 D568     		ldr	r5, [r2, #12]
 2018              	.LVL150:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2019              		.loc 1 1006 9 is_stmt 1 view .LVU663
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2020              		.loc 1 1007 9 view .LVU664
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2021              		.loc 1 1009 11 is_stmt 0 view .LVU665
 2022 0138 029E     		ldr	r6, [sp, #8]
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2023              		.loc 1 1007 11 view .LVU666
 2024 013a 019F     		ldr	r7, [sp, #4]
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2025              		.loc 1 1009 11 view .LVU667
 2026 013c 2E43     		orrs	r6, r5
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2027              		.loc 1 1007 11 view .LVU668
 2028 013e BF02     		lsls	r7, r7, #10
 2029 0140 01D4     		bmi	.L192
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2030              		.loc 1 1006 9 view .LVU669
 2031 0142 2540     		ands	r5, r4
 2032              	.LVL151:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2033              		.loc 1 1006 9 view .LVU670
 2034 0144 2E00     		movs	r6, r5
 2035              	.LVL152:
 2036              	.L192:
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2037              		.loc 1 1011 9 is_stmt 1 view .LVU671
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2038              		.loc 1 1011 20 is_stmt 0 view .LVU672
 2039 0146 D660     		str	r6, [r2, #12]
 2040              	.LVL153:
 2041              	.L180:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2042              		.loc 1 1015 5 is_stmt 1 view .LVU673
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2043              		.loc 1 1015 13 is_stmt 0 view .LVU674
 2044 0148 0133     		adds	r3, r3, #1
 2045              	.LVL154:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2046              		.loc 1 1015 13 view .LVU675
 2047 014a 5CE7     		b	.L178
 2048              	.L202:
 2049              		.align	2
 2050              	.L201:
 2051 014c 00100240 		.word	1073876992
 2052 0150 00000140 		.word	1073807360
 2053 0154 00040048 		.word	1207960576
 2054 0158 00080048 		.word	1207961600
 2055 015c 000C0048 		.word	1207962624
 2056 0160 00040140 		.word	1073808384
 2057              		.cfi_endproc
 2058              	.LFE44:
 2060              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2061              		.align	1
 2062              		.global	HAL_GPIO_WritePin
 2063              		.syntax unified
 2064              		.code	16
 2065              		.thumb_func
 2066              		.fpu softvfp
 2068              	HAL_GPIO_WritePin:
 2069              	.LVL155:
 2070              	.LFB45:
1018:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1019:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1020:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
1021:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
1022:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
1023:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the read and the modify access.
1024:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
1025:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..H) to select the GPIO peripheral for STM32F0 family
1026:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
1027:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
1028:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
1029:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
1030:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
1031:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
1032:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
1033:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1034:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
1035:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2071              		.loc 1 1035 1 is_stmt 1 view -0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 0
 2074              		@ frame_needed = 0, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
1036:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1037:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 2076              		.loc 1 1037 3 view .LVU677
1038:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2077              		.loc 1 1038 3 view .LVU678
1039:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1040:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (PinState != GPIO_PIN_RESET)
 2078              		.loc 1 1040 3 view .LVU679
 2079              		.loc 1 1040 6 is_stmt 0 view .LVU680
 2080 0000 002A     		cmp	r2, #0
 2081 0002 01D0     		beq	.L204
1041:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1042:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 2082              		.loc 1 1042 5 is_stmt 1 view .LVU681
 2083              		.loc 1 1042 17 is_stmt 0 view .LVU682
 2084 0004 8161     		str	r1, [r0, #24]
 2085              	.L203:
1043:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1044:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1045:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
1047:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1048:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }										  
 2086              		.loc 1 1048 1 view .LVU683
 2087              		@ sp needed
 2088 0006 7047     		bx	lr
 2089              	.L204:
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2090              		.loc 1 1046 5 is_stmt 1 view .LVU684
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2091              		.loc 1 1046 16 is_stmt 0 view .LVU685
 2092 0008 8162     		str	r1, [r0, #40]
 2093              		.loc 1 1048 1 view .LVU686
 2094 000a FCE7     		b	.L203
 2095              		.cfi_endproc
 2096              	.LFE45:
 2098              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2099              		.align	1
 2100              		.global	UART_WaitOnFlagUntilTimeout
 2101              		.syntax unified
 2102              		.code	16
 2103              		.thumb_func
 2104              		.fpu softvfp
 2106              	UART_WaitOnFlagUntilTimeout:
 2107              	.LVL156:
 2108              	.LFB46:
1049:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1050:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1051:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1052:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  huart UART handle.
1053:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1054:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1055:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1056:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1057:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1058:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1059:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2109              		.loc 1 1060 1 is_stmt 1 view -0
 2110              		.cfi_startproc
 2111              		@ args = 4, pretend = 0, frame = 0
 2112              		@ frame_needed = 0, uses_anonymous_args = 0
 2113              		.loc 1 1060 1 is_stmt 0 view .LVU688
 2114 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2115              	.LCFI7:
 2116              		.cfi_def_cfa_offset 24
 2117              		.cfi_offset 3, -24
 2118              		.cfi_offset 4, -20
 2119              		.cfi_offset 5, -16
 2120              		.cfi_offset 6, -12
 2121              		.cfi_offset 7, -8
 2122              		.cfi_offset 14, -4
 2123 0002 0400     		movs	r4, r0
 2124 0004 0D00     		movs	r5, r1
 2125 0006 1700     		movs	r7, r2
 2126 0008 1E00     		movs	r6, r3
1061:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2127              		.loc 1 1062 3 is_stmt 1 view .LVU689
 2128              	.LVL157:
 2129              	.L207:
 2130              		.loc 1 1062 10 is_stmt 0 view .LVU690
 2131 000a 2268     		ldr	r2, [r4]
 2132              	.L208:
 2133              		.loc 1 1062 8 is_stmt 1 view .LVU691
 2134              		.loc 1 1062 10 is_stmt 0 view .LVU692
 2135 000c D369     		ldr	r3, [r2, #28]
 2136 000e 2B40     		ands	r3, r5
 2137              		.loc 1 1062 49 view .LVU693
 2138 0010 5B1B     		subs	r3, r3, r5
 2139 0012 5942     		rsbs	r1, r3, #0
 2140 0014 4B41     		adcs	r3, r3, r1
 2141              		.loc 1 1062 8 view .LVU694
 2142 0016 BB42     		cmp	r3, r7
 2143 0018 01D0     		beq	.L212
1063:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1064:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check for the Timeout */
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1066:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
1068:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1069:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1072:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1075:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1076:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Process Unlocked */
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1079:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1080:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1081:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1082:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 2144              		.loc 1 1082 10 view .LVU695
 2145 001a 0020     		movs	r0, #0
 2146 001c 18E0     		b	.L210
 2147              	.L212:
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2148              		.loc 1 1065 5 is_stmt 1 view .LVU696
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2149              		.loc 1 1065 7 is_stmt 0 view .LVU697
 2150 001e 069B     		ldr	r3, [sp, #24]
 2151 0020 0133     		adds	r3, r3, #1
 2152 0022 F3D0     		beq	.L208
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2153              		.loc 1 1067 7 is_stmt 1 view .LVU698
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2154              		.loc 1 1067 9 is_stmt 0 view .LVU699
 2155 0024 069B     		ldr	r3, [sp, #24]
 2156 0026 002B     		cmp	r3, #0
 2157 0028 13D1     		bne	.L209
 2158              	.L211:
 2159              	.LVL158:
 2160              	.LBB24:
 2161              	.LBI24:
1059:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2162              		.loc 1 1059 19 is_stmt 1 view .LVU700
 2163              	.LBB25:
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2164              		.loc 1 1070 9 view .LVU701
 2165 002a 2368     		ldr	r3, [r4]
 2166 002c 0C49     		ldr	r1, .L215
 2167 002e 1A68     		ldr	r2, [r3]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2168              		.loc 1 1077 9 is_stmt 0 view .LVU702
 2169 0030 0320     		movs	r0, #3
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2170              		.loc 1 1070 9 view .LVU703
 2171 0032 0A40     		ands	r2, r1
 2172 0034 1A60     		str	r2, [r3]
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2173              		.loc 1 1071 9 is_stmt 1 view .LVU704
 2174 0036 9A68     		ldr	r2, [r3, #8]
 2175 0038 A331     		adds	r1, r1, #163
 2176 003a FF31     		adds	r1, r1, #255
 2177 003c 8A43     		bics	r2, r1
 2178 003e 9A60     		str	r2, [r3, #8]
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2179              		.loc 1 1073 9 view .LVU705
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2180              		.loc 1 1073 24 is_stmt 0 view .LVU706
 2181 0040 2200     		movs	r2, r4
 2182 0042 2023     		movs	r3, #32
 2183 0044 6932     		adds	r2, r2, #105
 2184 0046 1370     		strb	r3, [r2]
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2185              		.loc 1 1074 9 is_stmt 1 view .LVU707
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2186              		.loc 1 1074 24 is_stmt 0 view .LVU708
 2187 0048 5370     		strb	r3, [r2, #1]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2188              		.loc 1 1077 9 is_stmt 1 view .LVU709
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2189              		.loc 1 1077 9 view .LVU710
 2190 004a 0023     		movs	r3, #0
 2191 004c 6834     		adds	r4, r4, #104
 2192              	.LVL159:
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2193              		.loc 1 1077 9 is_stmt 0 view .LVU711
 2194 004e 2370     		strb	r3, [r4]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2195              		.loc 1 1077 9 is_stmt 1 view .LVU712
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2196              		.loc 1 1078 9 view .LVU713
 2197              	.LVL160:
 2198              	.L210:
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2199              		.loc 1 1078 9 is_stmt 0 view .LVU714
 2200              	.LBE25:
 2201              	.LBE24:
1083:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2202              		.loc 1 1083 1 view .LVU715
 2203              		@ sp needed
 2204              	.LVL161:
 2205              	.LVL162:
 2206              		.loc 1 1083 1 view .LVU716
 2207 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2208              	.LVL163:
 2209              	.L209:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2210              		.loc 1 1067 31 discriminator 1 view .LVU717
 2211 0052 FFF7FEFF 		bl	HAL_GetTick
 2212              	.LVL164:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2213              		.loc 1 1067 26 discriminator 1 view .LVU718
 2214 0056 069B     		ldr	r3, [sp, #24]
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2215              		.loc 1 1067 44 discriminator 1 view .LVU719
 2216 0058 801B     		subs	r0, r0, r6
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2217              		.loc 1 1067 26 discriminator 1 view .LVU720
 2218 005a 9842     		cmp	r0, r3
 2219 005c D5D9     		bls	.L207
 2220 005e E4E7     		b	.L211
 2221              	.L216:
 2222              		.align	2
 2223              	.L215:
 2224 0060 5FFEFFFF 		.word	-417
 2225              		.cfi_endproc
 2226              	.LFE46:
 2228              		.section	.text.UART_CheckIdleState,"ax",%progbits
 2229              		.align	1
 2230              		.global	UART_CheckIdleState
 2231              		.syntax unified
 2232              		.code	16
 2233              		.thumb_func
 2234              		.fpu softvfp
 2236              	UART_CheckIdleState:
 2237              	.LVL165:
 2238              	.LFB47:
1084:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1085:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1086:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Check the UART Idle State.
1087:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart UART handle.
1088:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1089:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2239              		.loc 1 1091 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
 2243              		@ link register save eliminated.
1092:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1093:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
1094:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1095:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1096:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2244              		.loc 1 1097 3 view .LVU722
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 2245              		.loc 1 1091 1 is_stmt 0 view .LVU723
 2246 0000 0300     		movs	r3, r0
 2247              		.loc 1 1097 20 view .LVU724
 2248 0002 0020     		movs	r0, #0
 2249              	.LVL166:
1098:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1099:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
1101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tickstart = HAL_GetTick();
1102:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1104:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
1107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Transmitter is enabled */
1109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1110:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until TEACK flag is set */
1112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1118:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Receiver is enabled */
1120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until REACK flag is set */
1123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1125:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1130:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1131:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART State */
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
 2250              		.loc 1 1133 18 view .LVU725
 2251 0004 1900     		movs	r1, r3
 2252 0006 2022     		movs	r2, #32
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2253              		.loc 1 1097 20 view .LVU726
 2254 0008 D866     		str	r0, [r3, #108]
 2255              		.loc 1 1133 3 is_stmt 1 view .LVU727
 2256              		.loc 1 1133 18 is_stmt 0 view .LVU728
 2257 000a 6931     		adds	r1, r1, #105
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
1135:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Process Unlocked */
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
 2258              		.loc 1 1137 3 view .LVU729
 2259 000c 6833     		adds	r3, r3, #104
 2260              	.LVL167:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2261              		.loc 1 1133 18 view .LVU730
 2262 000e 0A70     		strb	r2, [r1]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2263              		.loc 1 1134 3 is_stmt 1 view .LVU731
1138:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
1140:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2264              		.loc 1 1140 1 is_stmt 0 view .LVU732
 2265              		@ sp needed
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2266              		.loc 1 1134 18 view .LVU733
 2267 0010 4A70     		strb	r2, [r1, #1]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2268              		.loc 1 1137 3 is_stmt 1 view .LVU734
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2269              		.loc 1 1137 3 view .LVU735
 2270 0012 1870     		strb	r0, [r3]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2271              		.loc 1 1137 3 view .LVU736
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2272              		.loc 1 1139 3 view .LVU737
 2273              		.loc 1 1140 1 is_stmt 0 view .LVU738
 2274 0014 7047     		bx	lr
 2275              		.cfi_endproc
 2276              	.LFE47:
 2278              		.global	__aeabi_uidiv
 2279              		.section	.text.UART_SetConfig,"ax",%progbits
 2280              		.align	1
 2281              		.global	UART_SetConfig
 2282              		.syntax unified
 2283              		.code	16
 2284              		.thumb_func
 2285              		.fpu softvfp
 2287              	UART_SetConfig:
 2288              	.LVL168:
 2289              	.LFB48:
1141:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1142:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2290              		.loc 1 1143 1 is_stmt 1 view -0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
1144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2294              		.loc 1 1144 3 view .LVU740
1145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 2295              		.loc 1 1145 3 view .LVU741
1146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 2296              		.loc 1 1146 3 view .LVU742
1147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 2297              		.loc 1 1147 3 view .LVU743
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2298              		.loc 1 1148 3 view .LVU744
1149:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 2299              		.loc 1 1151 3 view .LVU745
1152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2300              		.loc 1 1152 3 view .LVU746
1153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2301              		.loc 1 1153 3 view .LVU747
1154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2302              		.loc 1 1154 3 view .LVU748
1155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2303              		.loc 1 1155 3 view .LVU749
1156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2304              		.loc 1 1156 3 view .LVU750
1157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2305              		.loc 1 1157 3 view .LVU751
1158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2306              		.loc 1 1158 3 view .LVU752
1159:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1160:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
1165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
1167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2307              		.loc 1 1168 3 view .LVU753
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2308              		.loc 1 1143 1 is_stmt 0 view .LVU754
 2309 0000 0300     		movs	r3, r0
 2310 0002 70B5     		push	{r4, r5, r6, lr}
 2311              	.LCFI8:
 2312              		.cfi_def_cfa_offset 16
 2313              		.cfi_offset 4, -16
 2314              		.cfi_offset 5, -12
 2315              		.cfi_offset 6, -8
 2316              		.cfi_offset 14, -4
 2317              		.loc 1 1168 45 view .LVU755
 2318 0004 9A68     		ldr	r2, [r3, #8]
 2319 0006 1D69     		ldr	r5, [r3, #16]
1169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2320              		.loc 1 1169 3 view .LVU756
 2321 0008 0468     		ldr	r4, [r0]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2322              		.loc 1 1168 45 view .LVU757
 2323 000a 2A43     		orrs	r2, r5
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2324              		.loc 1 1168 66 view .LVU758
 2325 000c 5D69     		ldr	r5, [r3, #20]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2326              		.loc 1 1168 98 view .LVU759
 2327 000e C169     		ldr	r1, [r0, #28]
 2328              	.LVL169:
 2329              		.loc 1 1169 3 is_stmt 1 view .LVU760
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2330              		.loc 1 1168 66 is_stmt 0 view .LVU761
 2331 0010 2A43     		orrs	r2, r5
 2332              		.loc 1 1169 3 view .LVU762
 2333 0012 2068     		ldr	r0, [r4]
 2334              	.LVL170:
 2335              		.loc 1 1169 3 view .LVU763
 2336 0014 334D     		ldr	r5, .L238
 2337              	.LVL171:
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2338              		.loc 1 1168 10 view .LVU764
 2339 0016 0A43     		orrs	r2, r1
 2340              		.loc 1 1169 3 view .LVU765
 2341 0018 2840     		ands	r0, r5
 2342 001a 0243     		orrs	r2, r0
 2343 001c 2260     		str	r2, [r4]
1170:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * to huart->Init.StopBits value */
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2344              		.loc 1 1174 3 is_stmt 1 view .LVU766
 2345 001e 6268     		ldr	r2, [r4, #4]
 2346 0020 3148     		ldr	r0, .L238+4
1175:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure
1178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
1180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
1181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2347              		.loc 1 1182 10 is_stmt 0 view .LVU767
 2348 0022 1D6A     		ldr	r5, [r3, #32]
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2349              		.loc 1 1174 3 view .LVU768
 2350 0024 0240     		ands	r2, r0
 2351 0026 D868     		ldr	r0, [r3, #12]
 2352 0028 0243     		orrs	r2, r0
 2353 002a 6260     		str	r2, [r4, #4]
 2354              		.loc 1 1182 3 is_stmt 1 view .LVU769
 2355              	.LVL172:
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2356              		.loc 1 1183 3 view .LVU770
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2357              		.loc 1 1182 10 is_stmt 0 view .LVU771
 2358 002c 9A69     		ldr	r2, [r3, #24]
 2359              		.loc 1 1183 3 view .LVU772
 2360 002e A068     		ldr	r0, [r4, #8]
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2361              		.loc 1 1182 10 view .LVU773
 2362 0030 2A43     		orrs	r2, r5
 2363              		.loc 1 1183 3 view .LVU774
 2364 0032 2E4D     		ldr	r5, .L238+8
 2365 0034 2840     		ands	r0, r5
 2366 0036 0243     		orrs	r2, r0
1184:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2367              		.loc 1 1186 3 view .LVU775
 2368 0038 0320     		movs	r0, #3
 2369 003a 8025     		movs	r5, #128
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2370              		.loc 1 1183 3 view .LVU776
 2371 003c A260     		str	r2, [r4, #8]
 2372              		.loc 1 1186 3 is_stmt 1 view .LVU777
 2373              		.loc 1 1186 3 view .LVU778
 2374 003e 2C4A     		ldr	r2, .L238+12
 2375 0040 2D02     		lsls	r5, r5, #8
 2376 0042 126B     		ldr	r2, [r2, #48]
 2377 0044 0240     		ands	r2, r0
 2378 0046 013A     		subs	r2, r2, #1
 2379 0048 022A     		cmp	r2, #2
 2380 004a 43D8     		bhi	.L219
 2381 004c 2948     		ldr	r0, .L238+16
 2382 004e 805C     		ldrb	r0, [r0, r2]
 2383              	.LVL173:
 2384              		.loc 1 1186 3 view .LVU779
1187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
1188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2385              		.loc 1 1189 3 view .LVU780
 2386              		.loc 1 1189 6 is_stmt 0 view .LVU781
 2387 0050 A942     		cmp	r1, r5
 2388 0052 20D1     		bne	.L220
1190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
 2389              		.loc 1 1191 5 is_stmt 1 view .LVU782
 2390 0054 0828     		cmp	r0, #8
 2391 0056 1BD8     		bhi	.L233
 2392 0058 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2393              	.L223:
 2394 005c 3E       		.byte	(.L224-.L223)/2
 2395 005d 1A       		.byte	(.L233-.L223)/2
 2396 005e 05       		.byte	(.L225-.L223)/2
 2397 005f 1A       		.byte	(.L233-.L223)/2
 2398 0060 3E       		.byte	(.L224-.L223)/2
 2399 0061 1A       		.byte	(.L233-.L223)/2
 2400 0062 1A       		.byte	(.L233-.L223)/2
 2401 0063 1A       		.byte	(.L233-.L223)/2
 2402 0064 15       		.byte	(.L222-.L223)/2
 2403 0065 00       		.p2align 1
 2404              	.L225:
1192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 2405              		.loc 1 1197 9 view .LVU783
 2406              		.loc 1 1197 31 is_stmt 0 view .LVU784
 2407 0066 5968     		ldr	r1, [r3, #4]
 2408 0068 234B     		ldr	r3, .L238+20
 2409              	.LVL174:
 2410              		.loc 1 1197 31 view .LVU785
 2411 006a 4808     		lsrs	r0, r1, #1
 2412              	.LVL175:
 2413              	.L236:
1198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 2414              		.loc 1 1203 31 view .LVU786
 2415 006c C018     		adds	r0, r0, r3
 2416 006e FFF7FEFF 		bl	__aeabi_uidiv
 2417              	.LVL176:
 2418              		.loc 1 1203 18 view .LVU787
 2419 0072 83B2     		uxth	r3, r0
 2420              	.LVL177:
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2421              		.loc 1 1204 9 is_stmt 1 view .LVU788
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2422              		.loc 1 1148 21 is_stmt 0 view .LVU789
 2423 0074 0020     		movs	r0, #0
 2424              	.LVL178:
 2425              	.L221:
1205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1210:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
 2426              		.loc 1 1211 5 is_stmt 1 view .LVU790
 2427              		.loc 1 1211 13 is_stmt 0 view .LVU791
 2428 0076 1900     		movs	r1, r3
 2429 0078 0F22     		movs	r2, #15
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2430              		.loc 1 1212 16 view .LVU792
 2431 007a 1B07     		lsls	r3, r3, #28
 2432              	.LVL179:
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2433              		.loc 1 1211 13 view .LVU793
 2434 007c 9143     		bics	r1, r2
 2435              	.LVL180:
 2436              		.loc 1 1212 5 is_stmt 1 view .LVU794
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2437              		.loc 1 1213 5 view .LVU795
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2438              		.loc 1 1212 16 is_stmt 0 view .LVU796
 2439 007e 5B0F     		lsrs	r3, r3, #29
 2440              		.loc 1 1213 26 view .LVU797
 2441 0080 0B43     		orrs	r3, r1
 2442 0082 E360     		str	r3, [r4, #12]
 2443              	.LVL181:
 2444              	.L235:
1214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1237:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return ret;
1239:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1240:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2445              		.loc 1 1240 1 view .LVU798
 2446              		@ sp needed
 2447 0084 70BD     		pop	{r4, r5, r6, pc}
 2448              	.LVL182:
 2449              	.L222:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2450              		.loc 1 1203 9 is_stmt 1 view .LVU799
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2451              		.loc 1 1203 31 is_stmt 0 view .LVU800
 2452 0086 5968     		ldr	r1, [r3, #4]
 2453 0088 8023     		movs	r3, #128
 2454              	.LVL183:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2455              		.loc 1 1203 31 view .LVU801
 2456 008a 4808     		lsrs	r0, r1, #1
 2457              	.LVL184:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2458              		.loc 1 1203 31 view .LVU802
 2459 008c 5B02     		lsls	r3, r3, #9
 2460 008e EDE7     		b	.L236
 2461              	.LVL185:
 2462              	.L233:
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2463              		.loc 1 1189 6 view .LVU803
 2464 0090 0120     		movs	r0, #1
 2465              	.LVL186:
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2466              		.loc 1 1189 6 view .LVU804
 2467 0092 0023     		movs	r3, #0
 2468              	.LVL187:
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2469              		.loc 1 1189 6 view .LVU805
 2470 0094 EFE7     		b	.L221
 2471              	.LVL188:
 2472              	.L220:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2473              		.loc 1 1217 5 is_stmt 1 view .LVU806
 2474 0096 0828     		cmp	r0, #8
 2475 0098 1AD8     		bhi	.L234
 2476 009a FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2477              	.L229:
 2478 009e 0F       		.byte	(.L230-.L229)/2
 2479 009f 19       		.byte	(.L234-.L229)/2
 2480 00a0 05       		.byte	(.L231-.L229)/2
 2481 00a1 19       		.byte	(.L234-.L229)/2
 2482 00a2 0F       		.byte	(.L230-.L229)/2
 2483 00a3 19       		.byte	(.L234-.L229)/2
 2484 00a4 19       		.byte	(.L234-.L229)/2
 2485 00a5 19       		.byte	(.L234-.L229)/2
 2486 00a6 14       		.byte	(.L228-.L229)/2
 2487 00a7 00       		.p2align 1
 2488              	.L231:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2489              		.loc 1 1223 9 view .LVU807
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2490              		.loc 1 1223 43 is_stmt 0 view .LVU808
 2491 00a8 5968     		ldr	r1, [r3, #4]
 2492 00aa 144B     		ldr	r3, .L238+24
 2493              	.LVL189:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2494              		.loc 1 1223 43 view .LVU809
 2495 00ac 4808     		lsrs	r0, r1, #1
 2496              	.LVL190:
 2497              	.L237:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2498              		.loc 1 1229 43 view .LVU810
 2499 00ae C018     		adds	r0, r0, r3
 2500 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 2501              	.LVL191:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2502              		.loc 1 1229 43 view .LVU811
 2503 00b4 80B2     		uxth	r0, r0
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2504              		.loc 1 1229 30 view .LVU812
 2505 00b6 E060     		str	r0, [r4, #12]
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2506              		.loc 1 1230 9 is_stmt 1 view .LVU813
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2507              		.loc 1 1148 21 is_stmt 0 view .LVU814
 2508 00b8 0020     		movs	r0, #0
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 2509              		.loc 1 1230 9 view .LVU815
 2510 00ba E3E7     		b	.L235
 2511              	.LVL192:
 2512              	.L230:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2513              		.loc 1 1226 9 is_stmt 1 view .LVU816
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2514              		.loc 1 62 2 view .LVU817
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2515              		.loc 1 1226 43 is_stmt 0 view .LVU818
 2516 00bc 5968     		ldr	r1, [r3, #4]
 2517 00be E123     		movs	r3, #225
 2518              	.LVL193:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2519              		.loc 1 1226 43 view .LVU819
 2520 00c0 4808     		lsrs	r0, r1, #1
 2521 00c2 DB03     		lsls	r3, r3, #15
 2522 00c4 F3E7     		b	.L237
 2523              	.LVL194:
 2524              	.L228:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2525              		.loc 1 1229 9 is_stmt 1 view .LVU820
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2526              		.loc 1 1229 43 is_stmt 0 view .LVU821
 2527 00c6 5968     		ldr	r1, [r3, #4]
 2528 00c8 8023     		movs	r3, #128
 2529              	.LVL195:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2530              		.loc 1 1229 43 view .LVU822
 2531 00ca 4808     		lsrs	r0, r1, #1
 2532              	.LVL196:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2533              		.loc 1 1229 43 view .LVU823
 2534 00cc 1B02     		lsls	r3, r3, #8
 2535 00ce EEE7     		b	.L237
 2536              	.LVL197:
 2537              	.L234:
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2538              		.loc 1 1189 6 view .LVU824
 2539 00d0 0120     		movs	r0, #1
 2540              	.LVL198:
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2541              		.loc 1 1238 3 is_stmt 1 view .LVU825
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2542              		.loc 1 1238 10 is_stmt 0 view .LVU826
 2543 00d2 D7E7     		b	.L235
 2544              	.LVL199:
 2545              	.L219:
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2546              		.loc 1 1186 3 is_stmt 1 view .LVU827
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2547              		.loc 1 1189 3 view .LVU828
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2548              		.loc 1 1189 6 is_stmt 0 view .LVU829
 2549 00d4 A942     		cmp	r1, r5
 2550 00d6 F1D1     		bne	.L230
 2551              	.LVL200:
 2552              	.L224:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2553              		.loc 1 1200 9 is_stmt 1 view .LVU830
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2554              		.loc 1 62 2 view .LVU831
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2555              		.loc 1 1200 31 is_stmt 0 view .LVU832
 2556 00d8 5968     		ldr	r1, [r3, #4]
 2557 00da E123     		movs	r3, #225
 2558              	.LVL201:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2559              		.loc 1 1200 31 view .LVU833
 2560 00dc 4808     		lsrs	r0, r1, #1
 2561 00de 1B04     		lsls	r3, r3, #16
 2562 00e0 C4E7     		b	.L236
 2563              	.L239:
 2564 00e2 C046     		.align	2
 2565              	.L238:
 2566 00e4 F369FFFF 		.word	-38413
 2567 00e8 FFCFFFFF 		.word	-12289
 2568 00ec FFF4FFFF 		.word	-2817
 2569 00f0 00100240 		.word	1073876992
 2570 00f4 00000000 		.word	.LANCHOR2
 2571 00f8 0048E801 		.word	32000000
 2572 00fc 0024F400 		.word	16000000
 2573              		.cfi_endproc
 2574              	.LFE48:
 2576              		.section	.text.HAL_UART_Init,"ax",%progbits
 2577              		.align	1
 2578              		.global	HAL_UART_Init
 2579              		.syntax unified
 2580              		.code	16
 2581              		.thumb_func
 2582              		.fpu softvfp
 2584              	HAL_UART_Init:
 2585              	.LVL202:
 2586              	.LFB49:
1241:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1242:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
1244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
1245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1248:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2587              		.loc 1 1249 1 is_stmt 1 view -0
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 0
 2590              		@ frame_needed = 0, uses_anonymous_args = 0
1250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
1251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart == NULL)
 2591              		.loc 1 1251 3 view .LVU835
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2592              		.loc 1 1249 1 is_stmt 0 view .LVU836
 2593 0000 70B5     		push	{r4, r5, r6, lr}
 2594              	.LCFI9:
 2595              		.cfi_def_cfa_offset 16
 2596              		.cfi_offset 4, -16
 2597              		.cfi_offset 5, -12
 2598              		.cfi_offset 6, -8
 2599              		.cfi_offset 14, -4
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2600              		.loc 1 1249 1 view .LVU837
 2601 0002 041E     		subs	r4, r0, #0
 2602              		.loc 1 1251 5 view .LVU838
 2603 0004 01D1     		bne	.L241
 2604              	.LVL203:
 2605              	.L244:
1252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
 2606              		.loc 1 1253 12 view .LVU839
 2607 0006 0120     		movs	r0, #1
 2608              	.LVL204:
 2609              	.L242:
1254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1255:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
1257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
1260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
1265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1266:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
1268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1275:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
1277:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Disable the Peripheral */
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
1280:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
1283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
1285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1291:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
1294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
1295:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR2_LINEN)
1296:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1297:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
1299:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1300:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_SCEN)
1301:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1303:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1305:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1306:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1307:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
1309:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
1311:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1312:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1313:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Enable the Peripheral */
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1316:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return (UART_CheckIdleState(huart));
1319:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2610              		.loc 1 1319 1 view .LVU840
 2611              		@ sp needed
 2612 0008 70BD     		pop	{r4, r5, r6, pc}
 2613              	.LVL205:
 2614              	.L241:
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2615              		.loc 1 1256 3 is_stmt 1 view .LVU841
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2616              		.loc 1 1264 5 view .LVU842
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2617              		.loc 1 1267 3 view .LVU843
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2618              		.loc 1 1267 11 is_stmt 0 view .LVU844
 2619 000a 0500     		movs	r5, r0
 2620 000c 6935     		adds	r5, r5, #105
 2621 000e 2B78     		ldrb	r3, [r5]
 2622 0010 DAB2     		uxtb	r2, r3
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2623              		.loc 1 1267 5 view .LVU845
 2624 0012 002B     		cmp	r3, #0
 2625 0014 02D1     		bne	.L243
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2626              		.loc 1 1270 5 is_stmt 1 view .LVU846
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2627              		.loc 1 1270 17 is_stmt 0 view .LVU847
 2628 0016 0300     		movs	r3, r0
 2629 0018 6833     		adds	r3, r3, #104
 2630 001a 1A70     		strb	r2, [r3]
 2631              	.L243:
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2632              		.loc 1 1276 3 is_stmt 1 view .LVU848
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2633              		.loc 1 1276 17 is_stmt 0 view .LVU849
 2634 001c 2423     		movs	r3, #36
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2635              		.loc 1 1279 3 view .LVU850
 2636 001e 0126     		movs	r6, #1
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2637              		.loc 1 1276 17 view .LVU851
 2638 0020 2B70     		strb	r3, [r5]
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2639              		.loc 1 1279 3 is_stmt 1 view .LVU852
 2640 0022 2268     		ldr	r2, [r4]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2641              		.loc 1 1282 7 is_stmt 0 view .LVU853
 2642 0024 2000     		movs	r0, r4
 2643              	.LVL206:
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2644              		.loc 1 1279 3 view .LVU854
 2645 0026 1368     		ldr	r3, [r2]
 2646 0028 B343     		bics	r3, r6
 2647 002a 1360     		str	r3, [r2]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2648              		.loc 1 1282 3 is_stmt 1 view .LVU855
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2649              		.loc 1 1282 7 is_stmt 0 view .LVU856
 2650 002c FFF7FEFF 		bl	UART_SetConfig
 2651              	.LVL207:
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2652              		.loc 1 1282 6 view .LVU857
 2653 0030 B042     		cmp	r0, r6
 2654 0032 E8D0     		beq	.L244
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2655              		.loc 1 1287 3 is_stmt 1 view .LVU858
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2656              		.loc 1 1290 3 view .LVU859
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2657              		.loc 1 1298 3 view .LVU860
 2658 0034 2368     		ldr	r3, [r4]
 2659 0036 0A49     		ldr	r1, .L248
 2660 0038 5A68     		ldr	r2, [r3, #4]
 2661              	.LBB26:
 2662              	.LBB27:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2663              		.loc 1 1097 20 is_stmt 0 view .LVU861
 2664 003a 0020     		movs	r0, #0
 2665              	.LBE27:
 2666              	.LBE26:
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2667              		.loc 1 1298 3 view .LVU862
 2668 003c 0A40     		ands	r2, r1
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2669              		.loc 1 1310 3 view .LVU863
 2670 003e 0821     		movs	r1, #8
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2671              		.loc 1 1298 3 view .LVU864
 2672 0040 5A60     		str	r2, [r3, #4]
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2673              		.loc 1 1310 3 is_stmt 1 view .LVU865
 2674 0042 9A68     		ldr	r2, [r3, #8]
 2675 0044 8A43     		bics	r2, r1
 2676 0046 9A60     		str	r2, [r3, #8]
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2677              		.loc 1 1315 3 view .LVU866
 2678 0048 1A68     		ldr	r2, [r3]
 2679 004a 1643     		orrs	r6, r2
 2680              	.LBB30:
 2681              	.LBB28:
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2682              		.loc 1 1134 18 is_stmt 0 view .LVU867
 2683 004c 2200     		movs	r2, r4
 2684              	.LBE28:
 2685              	.LBE30:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2686              		.loc 1 1315 3 view .LVU868
 2687 004e 1E60     		str	r6, [r3]
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2688              		.loc 1 1318 3 is_stmt 1 view .LVU869
 2689              	.LVL208:
 2690              	.LBB31:
 2691              	.LBI26:
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2692              		.loc 1 1090 19 view .LVU870
 2693              	.LBB29:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2694              		.loc 1 1097 3 view .LVU871
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2695              		.loc 1 1133 18 is_stmt 0 view .LVU872
 2696 0050 2023     		movs	r3, #32
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2697              		.loc 1 1097 20 view .LVU873
 2698 0052 E066     		str	r0, [r4, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2699              		.loc 1 1133 3 is_stmt 1 view .LVU874
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2700              		.loc 1 1134 18 is_stmt 0 view .LVU875
 2701 0054 6A32     		adds	r2, r2, #106
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2702              		.loc 1 1137 3 view .LVU876
 2703 0056 6834     		adds	r4, r4, #104
 2704              	.LVL209:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2705              		.loc 1 1133 18 view .LVU877
 2706 0058 2B70     		strb	r3, [r5]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2707              		.loc 1 1134 3 is_stmt 1 view .LVU878
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2708              		.loc 1 1134 18 is_stmt 0 view .LVU879
 2709 005a 1370     		strb	r3, [r2]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2710              		.loc 1 1137 3 is_stmt 1 view .LVU880
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2711              		.loc 1 1137 3 view .LVU881
 2712 005c 2070     		strb	r0, [r4]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2713              		.loc 1 1137 3 view .LVU882
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2714              		.loc 1 1139 3 view .LVU883
 2715              	.LVL210:
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2716              		.loc 1 1139 3 is_stmt 0 view .LVU884
 2717              	.LBE29:
 2718              	.LBE31:
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2719              		.loc 1 1318 11 view .LVU885
 2720 005e D3E7     		b	.L242
 2721              	.L249:
 2722              		.align	2
 2723              	.L248:
 2724 0060 FFF7FFFF 		.word	-2049
 2725              		.cfi_endproc
 2726              	.LFE49:
 2728              		.section	.text.HAL_UART_Receive,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_UART_Receive
 2731              		.syntax unified
 2732              		.code	16
 2733              		.thumb_func
 2734              		.fpu softvfp
 2736              	HAL_UART_Receive:
 2737              	.LVL211:
 2738              	.LFB50:
1320:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1321:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1328:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1333:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2739              		.loc 1 1334 1 is_stmt 1 view -0
 2740              		.cfi_startproc
 2741              		@ args = 0, pretend = 0, frame = 8
 2742              		@ frame_needed = 0, uses_anonymous_args = 0
1335:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2743              		.loc 1 1335 3 view .LVU887
1336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t uhMask;
 2744              		.loc 1 1336 3 view .LVU888
1337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0;
 2745              		.loc 1 1337 3 view .LVU889
1338:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 2746              		.loc 1 1340 3 view .LVU890
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2747              		.loc 1 1334 1 is_stmt 0 view .LVU891
 2748 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2749              	.LCFI10:
 2750              		.cfi_def_cfa_offset 20
 2751              		.cfi_offset 4, -20
 2752              		.cfi_offset 5, -16
 2753              		.cfi_offset 6, -12
 2754              		.cfi_offset 7, -8
 2755              		.cfi_offset 14, -4
 2756 0002 85B0     		sub	sp, sp, #20
 2757              	.LCFI11:
 2758              		.cfi_def_cfa_offset 40
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2759              		.loc 1 1334 1 view .LVU892
 2760 0004 0393     		str	r3, [sp, #12]
 2761              		.loc 1 1340 11 view .LVU893
 2762 0006 0300     		movs	r3, r0
 2763              	.LVL212:
 2764              		.loc 1 1340 11 view .LVU894
 2765 0008 6A33     		adds	r3, r3, #106
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2766              		.loc 1 1334 1 view .LVU895
 2767 000a 1700     		movs	r7, r2
 2768              		.loc 1 1340 11 view .LVU896
 2769 000c 1A78     		ldrb	r2, [r3]
 2770              	.LVL213:
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2771              		.loc 1 1334 1 view .LVU897
 2772 000e 0400     		movs	r4, r0
 2773 0010 0D00     		movs	r5, r1
1341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1346:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1348:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
1349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1351:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1357:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
1360:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
1366:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferSize = Size;
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
1369:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
1373:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* as long as data have to be received */
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
1376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->RxXferCount--;
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1379:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
1387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1393:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
1396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1397:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1399:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
1401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1403:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
 2774              		.loc 1 1404 12 view .LVU898
 2775 0012 0220     		movs	r0, #2
 2776              	.LVL214:
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2777              		.loc 1 1340 5 view .LVU899
 2778 0014 202A     		cmp	r2, #32
 2779 0016 39D1     		bne	.L251
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2780              		.loc 1 1342 5 is_stmt 1 view .LVU900
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 2781              		.loc 1 1344 15 is_stmt 0 view .LVU901
 2782 0018 0138     		subs	r0, r0, #1
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2783              		.loc 1 1342 7 view .LVU902
 2784 001a 0029     		cmp	r1, #0
 2785 001c 36D0     		beq	.L251
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2786              		.loc 1 1342 25 discriminator 1 view .LVU903
 2787 001e 002F     		cmp	r7, #0
 2788 0020 34D0     		beq	.L251
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2789              		.loc 1 1350 5 is_stmt 1 view .LVU904
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2790              		.loc 1 1350 8 is_stmt 0 view .LVU905
 2791 0022 8022     		movs	r2, #128
 2792 0024 A168     		ldr	r1, [r4, #8]
 2793              	.LVL215:
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2794              		.loc 1 1350 8 view .LVU906
 2795 0026 5201     		lsls	r2, r2, #5
 2796 0028 9142     		cmp	r1, r2
 2797 002a 04D1     		bne	.L252
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2798              		.loc 1 1350 56 discriminator 1 view .LVU907
 2799 002c 2269     		ldr	r2, [r4, #16]
 2800 002e 002A     		cmp	r2, #0
 2801 0030 01D1     		bne	.L252
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2802              		.loc 1 1352 7 is_stmt 1 view .LVU908
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2803              		.loc 1 1352 9 is_stmt 0 view .LVU909
 2804 0032 0542     		tst	r5, r0
 2805 0034 2AD1     		bne	.L251
 2806              	.L252:
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2807              		.loc 1 1359 5 is_stmt 1 view .LVU910
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2808              		.loc 1 1359 5 view .LVU911
 2809 0036 2200     		movs	r2, r4
 2810 0038 6832     		adds	r2, r2, #104
 2811 003a 1178     		ldrb	r1, [r2]
 2812              		.loc 1 1404 12 is_stmt 0 view .LVU912
 2813 003c 0220     		movs	r0, #2
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2814              		.loc 1 1359 5 view .LVU913
 2815 003e 0129     		cmp	r1, #1
 2816 0040 24D0     		beq	.L251
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2817              		.loc 1 1359 5 is_stmt 1 discriminator 2 view .LVU914
 2818 0042 0121     		movs	r1, #1
 2819 0044 1170     		strb	r1, [r2]
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2820              		.loc 1 1359 5 discriminator 2 view .LVU915
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2821              		.loc 1 1361 5 discriminator 2 view .LVU916
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2822              		.loc 1 1361 22 is_stmt 0 discriminator 2 view .LVU917
 2823 0046 0022     		movs	r2, #0
 2824 0048 E266     		str	r2, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2825              		.loc 1 1362 5 is_stmt 1 discriminator 2 view .LVU918
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2826              		.loc 1 1362 20 is_stmt 0 discriminator 2 view .LVU919
 2827 004a 2232     		adds	r2, r2, #34
 2828 004c 1A70     		strb	r2, [r3]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2829              		.loc 1 1365 5 is_stmt 1 discriminator 2 view .LVU920
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2830              		.loc 1 1365 17 is_stmt 0 discriminator 2 view .LVU921
 2831 004e FFF7FEFF 		bl	HAL_GetTick
 2832              	.LVL216:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2833              		.loc 1 1367 23 discriminator 2 view .LVU922
 2834 0052 2300     		movs	r3, r4
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2835              		.loc 1 1371 5 discriminator 2 view .LVU923
 2836 0054 8021     		movs	r1, #128
 2837 0056 A268     		ldr	r2, [r4, #8]
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2838              		.loc 1 1367 23 discriminator 2 view .LVU924
 2839 0058 5833     		adds	r3, r3, #88
 2840 005a 1F80     		strh	r7, [r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2841              		.loc 1 1368 24 discriminator 2 view .LVU925
 2842 005c 5F80     		strh	r7, [r3, #2]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2843              		.loc 1 1365 17 discriminator 2 view .LVU926
 2844 005e 0600     		movs	r6, r0
 2845              	.LVL217:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2846              		.loc 1 1367 5 is_stmt 1 discriminator 2 view .LVU927
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2847              		.loc 1 1368 5 discriminator 2 view .LVU928
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2848              		.loc 1 1371 5 discriminator 2 view .LVU929
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2849              		.loc 1 1371 5 discriminator 2 view .LVU930
 2850 0060 4901     		lsls	r1, r1, #5
 2851 0062 0433     		adds	r3, r3, #4
 2852 0064 8A42     		cmp	r2, r1
 2853 0066 15D1     		bne	.L253
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2854              		.loc 1 1371 5 discriminator 1 view .LVU931
 2855 0068 2269     		ldr	r2, [r4, #16]
 2856 006a 002A     		cmp	r2, #0
 2857 006c 10D1     		bne	.L254
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2858              		.loc 1 1371 5 discriminator 3 view .LVU932
 2859 006e 1F4A     		ldr	r2, .L270
 2860              	.L269:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2861              		.loc 1 1371 5 is_stmt 0 discriminator 8 view .LVU933
 2862 0070 1A80     		strh	r2, [r3]
 2863              	.L255:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2864              		.loc 1 1371 5 is_stmt 1 discriminator 10 view .LVU934
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2865              		.loc 1 1372 5 discriminator 10 view .LVU935
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2866              		.loc 1 1372 12 is_stmt 0 discriminator 10 view .LVU936
 2867 0072 1F88     		ldrh	r7, [r3]
 2868              	.LVL218:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2869              		.loc 1 1375 5 is_stmt 1 discriminator 10 view .LVU937
 2870              	.L256:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2871              		.loc 1 1375 10 view .LVU938
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2872              		.loc 1 1375 16 is_stmt 0 view .LVU939
 2873 0074 2200     		movs	r2, r4
 2874 0076 5A32     		adds	r2, r2, #90
 2875 0078 1388     		ldrh	r3, [r2]
 2876 007a 98B2     		uxth	r0, r3
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2877              		.loc 1 1375 10 view .LVU940
 2878 007c 002B     		cmp	r3, #0
 2879 007e 10D1     		bne	.L259
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2880              		.loc 1 1395 5 is_stmt 1 view .LVU941
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2881              		.loc 1 1395 20 is_stmt 0 view .LVU942
 2882 0080 2300     		movs	r3, r4
 2883 0082 2022     		movs	r2, #32
 2884 0084 6A33     		adds	r3, r3, #106
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2885              		.loc 1 1398 5 view .LVU943
 2886 0086 6834     		adds	r4, r4, #104
 2887              	.LVL219:
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2888              		.loc 1 1395 20 view .LVU944
 2889 0088 1A70     		strb	r2, [r3]
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2890              		.loc 1 1398 5 is_stmt 1 view .LVU945
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2891              		.loc 1 1398 5 view .LVU946
 2892 008a 2070     		strb	r0, [r4]
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2893              		.loc 1 1398 5 view .LVU947
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2894              		.loc 1 1400 5 view .LVU948
 2895              	.LVL220:
 2896              	.L251:
1405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1406:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2897              		.loc 1 1406 1 is_stmt 0 view .LVU949
 2898 008c 05B0     		add	sp, sp, #20
 2899              		@ sp needed
 2900              	.LVL221:
 2901              		.loc 1 1406 1 view .LVU950
 2902 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 2903              	.LVL222:
 2904              	.L254:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2905              		.loc 1 1371 5 is_stmt 1 discriminator 4 view .LVU951
 2906 0090 FF22     		movs	r2, #255
 2907 0092 EDE7     		b	.L269
 2908              	.L253:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2909              		.loc 1 1371 5 discriminator 2 view .LVU952
 2910 0094 002A     		cmp	r2, #0
 2911 0096 ECD1     		bne	.L255
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2912              		.loc 1 1371 5 discriminator 5 view .LVU953
 2913 0098 2269     		ldr	r2, [r4, #16]
 2914 009a 002A     		cmp	r2, #0
 2915 009c F8D0     		beq	.L254
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2916              		.loc 1 1371 5 discriminator 8 view .LVU954
 2917 009e 7F22     		movs	r2, #127
 2918 00a0 E6E7     		b	.L269
 2919              	.LVL223:
 2920              	.L259:
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2921              		.loc 1 1377 7 view .LVU955
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2922              		.loc 1 1377 12 is_stmt 0 view .LVU956
 2923 00a2 1388     		ldrh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2924              		.loc 1 1378 10 view .LVU957
 2925 00a4 2021     		movs	r1, #32
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2926              		.loc 1 1377 25 view .LVU958
 2927 00a6 013B     		subs	r3, r3, #1
 2928 00a8 9BB2     		uxth	r3, r3
 2929 00aa 1380     		strh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2930              		.loc 1 1378 7 is_stmt 1 view .LVU959
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2931              		.loc 1 1378 10 is_stmt 0 view .LVU960
 2932 00ac 039B     		ldr	r3, [sp, #12]
 2933 00ae 0022     		movs	r2, #0
 2934 00b0 0093     		str	r3, [sp]
 2935 00b2 2000     		movs	r0, r4
 2936 00b4 3300     		movs	r3, r6
 2937 00b6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2938              	.LVL224:
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2939              		.loc 1 1378 9 view .LVU961
 2940 00ba 0028     		cmp	r0, #0
 2941 00bc 13D1     		bne	.L265
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2942              		.loc 1 1382 7 is_stmt 1 view .LVU962
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2943              		.loc 1 1382 10 is_stmt 0 view .LVU963
 2944 00be A268     		ldr	r2, [r4, #8]
 2945 00c0 2368     		ldr	r3, [r4]
 2946 00c2 1100     		movs	r1, r2
 2947 00c4 8022     		movs	r2, #128
 2948 00c6 5201     		lsls	r2, r2, #5
 2949 00c8 9142     		cmp	r1, r2
 2950 00ca 07D1     		bne	.L257
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2951              		.loc 1 1382 58 discriminator 1 view .LVU964
 2952 00cc 2269     		ldr	r2, [r4, #16]
 2953 00ce 002A     		cmp	r2, #0
 2954 00d0 04D1     		bne	.L257
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 2955              		.loc 1 1384 9 is_stmt 1 view .LVU965
 2956              	.LVL225:
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2957              		.loc 1 1385 9 view .LVU966
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2958              		.loc 1 1385 42 is_stmt 0 view .LVU967
 2959 00d2 9B8C     		ldrh	r3, [r3, #36]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2960              		.loc 1 1385 16 view .LVU968
 2961 00d4 3B40     		ands	r3, r7
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2962              		.loc 1 1385 14 view .LVU969
 2963 00d6 2B80     		strh	r3, [r5]
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2964              		.loc 1 1386 9 is_stmt 1 view .LVU970
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2965              		.loc 1 1386 15 is_stmt 0 view .LVU971
 2966 00d8 0235     		adds	r5, r5, #2
 2967              	.LVL226:
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2968              		.loc 1 1386 15 view .LVU972
 2969 00da CBE7     		b	.L256
 2970              	.LVL227:
 2971              	.L257:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2972              		.loc 1 1390 9 is_stmt 1 view .LVU973
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2973              		.loc 1 1390 45 is_stmt 0 view .LVU974
 2974 00dc 9B8C     		ldrh	r3, [r3, #36]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2975              		.loc 1 1390 20 view .LVU975
 2976 00de 3B40     		ands	r3, r7
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2977              		.loc 1 1390 18 view .LVU976
 2978 00e0 2B70     		strb	r3, [r5]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2979              		.loc 1 1390 15 view .LVU977
 2980 00e2 0135     		adds	r5, r5, #1
 2981              	.LVL228:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2982              		.loc 1 1390 15 view .LVU978
 2983 00e4 C6E7     		b	.L256
 2984              	.L265:
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2985              		.loc 1 1380 16 view .LVU979
 2986 00e6 0320     		movs	r0, #3
 2987 00e8 D0E7     		b	.L251
 2988              	.L271:
 2989 00ea C046     		.align	2
 2990              	.L270:
 2991 00ec FF010000 		.word	511
 2992              		.cfi_endproc
 2993              	.LFE50:
 2995              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2996              		.align	1
 2997              		.global	HAL_UART_Transmit
 2998              		.syntax unified
 2999              		.code	16
 3000              		.thumb_func
 3001              		.fpu softvfp
 3003              	HAL_UART_Transmit:
 3004              	.LVL229:
 3005              	.LFB51:
1407:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1408:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3006              		.loc 1 1421 1 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 8
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
1422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3010              		.loc 1 1422 3 view .LVU981
1423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3011              		.loc 1 1423 3 view .LVU982
1424:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 3012              		.loc 1 1426 3 view .LVU983
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3013              		.loc 1 1421 1 is_stmt 0 view .LVU984
 3014 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3015              	.LCFI12:
 3016              		.cfi_def_cfa_offset 20
 3017              		.cfi_offset 4, -20
 3018              		.cfi_offset 5, -16
 3019              		.cfi_offset 6, -12
 3020              		.cfi_offset 7, -8
 3021              		.cfi_offset 14, -4
 3022 0002 85B0     		sub	sp, sp, #20
 3023              	.LCFI13:
 3024              		.cfi_def_cfa_offset 40
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3025              		.loc 1 1421 1 view .LVU985
 3026 0004 0393     		str	r3, [sp, #12]
 3027              		.loc 1 1426 11 view .LVU986
 3028 0006 0300     		movs	r3, r0
 3029              	.LVL230:
 3030              		.loc 1 1426 11 view .LVU987
 3031 0008 6933     		adds	r3, r3, #105
 3032 000a 0293     		str	r3, [sp, #8]
 3033 000c 1B78     		ldrb	r3, [r3]
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3034              		.loc 1 1421 1 view .LVU988
 3035 000e 0400     		movs	r4, r0
 3036 0010 0D00     		movs	r5, r1
 3037 0012 1600     		movs	r6, r2
1427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1432:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
1435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1437:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1443:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
1446:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1449:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
1452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferSize = Size;
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
1456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->TxXferCount--;
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
1467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_TIMEOUT;
1476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1477:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
1480:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
1483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
1485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
 3038              		.loc 1 1488 12 view .LVU989
 3039 0014 0220     		movs	r0, #2
 3040              	.LVL231:
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3041              		.loc 1 1426 5 view .LVU990
 3042 0016 202B     		cmp	r3, #32
 3043 0018 48D1     		bne	.L273
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3044              		.loc 1 1428 5 is_stmt 1 view .LVU991
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 3045              		.loc 1 1430 15 is_stmt 0 view .LVU992
 3046 001a 0138     		subs	r0, r0, #1
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3047              		.loc 1 1428 7 view .LVU993
 3048 001c 0029     		cmp	r1, #0
 3049 001e 45D0     		beq	.L273
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3050              		.loc 1 1428 25 discriminator 1 view .LVU994
 3051 0020 002A     		cmp	r2, #0
 3052 0022 43D0     		beq	.L273
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3053              		.loc 1 1436 5 is_stmt 1 view .LVU995
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3054              		.loc 1 1436 8 is_stmt 0 view .LVU996
 3055 0024 8023     		movs	r3, #128
 3056 0026 A268     		ldr	r2, [r4, #8]
 3057              	.LVL232:
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3058              		.loc 1 1436 8 view .LVU997
 3059 0028 5B01     		lsls	r3, r3, #5
 3060 002a 9A42     		cmp	r2, r3
 3061 002c 04D1     		bne	.L274
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3062              		.loc 1 1436 56 discriminator 1 view .LVU998
 3063 002e 2369     		ldr	r3, [r4, #16]
 3064 0030 002B     		cmp	r3, #0
 3065 0032 01D1     		bne	.L274
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3066              		.loc 1 1438 7 is_stmt 1 view .LVU999
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3067              		.loc 1 1438 9 is_stmt 0 view .LVU1000
 3068 0034 0142     		tst	r1, r0
 3069 0036 39D1     		bne	.L273
 3070              	.L274:
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3071              		.loc 1 1445 5 is_stmt 1 view .LVU1001
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3072              		.loc 1 1445 5 view .LVU1002
 3073 0038 2300     		movs	r3, r4
 3074 003a 6833     		adds	r3, r3, #104
 3075 003c 1A78     		ldrb	r2, [r3]
 3076              		.loc 1 1488 12 is_stmt 0 view .LVU1003
 3077 003e 0220     		movs	r0, #2
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3078              		.loc 1 1445 5 view .LVU1004
 3079 0040 012A     		cmp	r2, #1
 3080 0042 33D0     		beq	.L273
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3081              		.loc 1 1445 5 is_stmt 1 discriminator 2 view .LVU1005
 3082 0044 0122     		movs	r2, #1
 3083 0046 1A70     		strb	r2, [r3]
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3084              		.loc 1 1445 5 discriminator 2 view .LVU1006
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3085              		.loc 1 1447 5 discriminator 2 view .LVU1007
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3086              		.loc 1 1447 22 is_stmt 0 discriminator 2 view .LVU1008
 3087 0048 0023     		movs	r3, #0
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3088              		.loc 1 1448 19 discriminator 2 view .LVU1009
 3089 004a 029A     		ldr	r2, [sp, #8]
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3090              		.loc 1 1447 22 discriminator 2 view .LVU1010
 3091 004c E366     		str	r3, [r4, #108]
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3092              		.loc 1 1448 5 is_stmt 1 discriminator 2 view .LVU1011
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3093              		.loc 1 1448 19 is_stmt 0 discriminator 2 view .LVU1012
 3094 004e 2133     		adds	r3, r3, #33
 3095 0050 1370     		strb	r3, [r2]
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3096              		.loc 1 1451 5 is_stmt 1 discriminator 2 view .LVU1013
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3097              		.loc 1 1451 17 is_stmt 0 discriminator 2 view .LVU1014
 3098 0052 FFF7FEFF 		bl	HAL_GetTick
 3099              	.LVL233:
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3100              		.loc 1 1453 23 discriminator 2 view .LVU1015
 3101 0056 2300     		movs	r3, r4
 3102 0058 5033     		adds	r3, r3, #80
 3103 005a 1E80     		strh	r6, [r3]
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 3104              		.loc 1 1454 24 discriminator 2 view .LVU1016
 3105 005c 5E80     		strh	r6, [r3, #2]
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3106              		.loc 1 1462 10 discriminator 2 view .LVU1017
 3107 005e 8026     		movs	r6, #128
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3108              		.loc 1 1451 17 discriminator 2 view .LVU1018
 3109 0060 0700     		movs	r7, r0
 3110              	.LVL234:
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3111              		.loc 1 1453 5 is_stmt 1 discriminator 2 view .LVU1019
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 3112              		.loc 1 1454 5 discriminator 2 view .LVU1020
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3113              		.loc 1 1455 5 discriminator 2 view .LVU1021
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3114              		.loc 1 1462 10 is_stmt 0 discriminator 2 view .LVU1022
 3115 0062 7601     		lsls	r6, r6, #5
 3116              	.LVL235:
 3117              	.L275:
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3118              		.loc 1 1455 10 is_stmt 1 view .LVU1023
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3119              		.loc 1 1455 16 is_stmt 0 view .LVU1024
 3120 0064 2100     		movs	r1, r4
 3121 0066 5231     		adds	r1, r1, #82
 3122 0068 0B88     		ldrh	r3, [r1]
 3123 006a 9AB2     		uxth	r2, r3
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3124              		.loc 1 1455 10 view .LVU1025
 3125 006c 002B     		cmp	r3, #0
 3126 006e 0ED1     		bne	.L279
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3127              		.loc 1 1473 5 is_stmt 1 view .LVU1026
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3128              		.loc 1 1473 8 is_stmt 0 view .LVU1027
 3129 0070 039B     		ldr	r3, [sp, #12]
 3130 0072 4021     		movs	r1, #64
 3131 0074 0093     		str	r3, [sp]
 3132 0076 2000     		movs	r0, r4
 3133 0078 3B00     		movs	r3, r7
 3134 007a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3135              	.LVL236:
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3136              		.loc 1 1473 7 view .LVU1028
 3137 007e 0028     		cmp	r0, #0
 3138 0080 13D1     		bne	.L280
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3139              		.loc 1 1479 5 is_stmt 1 view .LVU1029
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3140              		.loc 1 1479 19 is_stmt 0 view .LVU1030
 3141 0082 2023     		movs	r3, #32
 3142 0084 029A     		ldr	r2, [sp, #8]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3143              		.loc 1 1482 5 view .LVU1031
 3144 0086 6834     		adds	r4, r4, #104
 3145              	.LVL237:
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3146              		.loc 1 1479 19 view .LVU1032
 3147 0088 1370     		strb	r3, [r2]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3148              		.loc 1 1482 5 is_stmt 1 view .LVU1033
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3149              		.loc 1 1482 5 view .LVU1034
 3150 008a 2070     		strb	r0, [r4]
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3151              		.loc 1 1482 5 view .LVU1035
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3152              		.loc 1 1484 5 view .LVU1036
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3153              		.loc 1 1484 12 is_stmt 0 view .LVU1037
 3154 008c 0EE0     		b	.L273
 3155              	.LVL238:
 3156              	.L279:
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3157              		.loc 1 1457 7 is_stmt 1 view .LVU1038
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3158              		.loc 1 1457 12 is_stmt 0 view .LVU1039
 3159 008e 0B88     		ldrh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3160              		.loc 1 1458 10 view .LVU1040
 3161 0090 0022     		movs	r2, #0
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3162              		.loc 1 1457 25 view .LVU1041
 3163 0092 013B     		subs	r3, r3, #1
 3164 0094 9BB2     		uxth	r3, r3
 3165 0096 0B80     		strh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3166              		.loc 1 1458 7 is_stmt 1 view .LVU1042
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3167              		.loc 1 1458 10 is_stmt 0 view .LVU1043
 3168 0098 039B     		ldr	r3, [sp, #12]
 3169 009a 8021     		movs	r1, #128
 3170 009c 0093     		str	r3, [sp]
 3171 009e 2000     		movs	r0, r4
 3172 00a0 3B00     		movs	r3, r7
 3173 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3174              	.LVL239:
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3175              		.loc 1 1458 9 view .LVU1044
 3176 00a6 0028     		cmp	r0, #0
 3177 00a8 02D0     		beq	.L276
 3178              	.L280:
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3179              		.loc 1 1460 16 view .LVU1045
 3180 00aa 0320     		movs	r0, #3
 3181              	.LVL240:
 3182              	.L273:
1489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1490:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3183              		.loc 1 1490 1 view .LVU1046
 3184 00ac 05B0     		add	sp, sp, #20
 3185              		@ sp needed
 3186              	.LVL241:
 3187              		.loc 1 1490 1 view .LVU1047
 3188 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 3189              	.LVL242:
 3190              	.L276:
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3191              		.loc 1 1462 7 is_stmt 1 view .LVU1048
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3192              		.loc 1 1462 10 is_stmt 0 view .LVU1049
 3193 00b0 A368     		ldr	r3, [r4, #8]
 3194 00b2 2268     		ldr	r2, [r4]
 3195 00b4 B342     		cmp	r3, r6
 3196 00b6 08D1     		bne	.L277
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3197              		.loc 1 1462 58 discriminator 1 view .LVU1050
 3198 00b8 2369     		ldr	r3, [r4, #16]
 3199 00ba 002B     		cmp	r3, #0
 3200 00bc 05D1     		bne	.L277
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3201              		.loc 1 1464 9 is_stmt 1 view .LVU1051
 3202              	.LVL243:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3203              		.loc 1 1465 9 view .LVU1052
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3204              		.loc 1 1465 38 is_stmt 0 view .LVU1053
 3205 00be 2B88     		ldrh	r3, [r5]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3206              		.loc 1 1466 15 view .LVU1054
 3207 00c0 0235     		adds	r5, r5, #2
 3208              	.LVL244:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3209              		.loc 1 1465 38 view .LVU1055
 3210 00c2 DB05     		lsls	r3, r3, #23
 3211 00c4 DB0D     		lsrs	r3, r3, #23
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3212              		.loc 1 1465 30 view .LVU1056
 3213 00c6 1385     		strh	r3, [r2, #40]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3214              		.loc 1 1466 9 is_stmt 1 view .LVU1057
 3215              	.LVL245:
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3216              		.loc 1 1466 15 is_stmt 0 view .LVU1058
 3217 00c8 CCE7     		b	.L275
 3218              	.LVL246:
 3219              	.L277:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3220              		.loc 1 1470 9 is_stmt 1 view .LVU1059
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3221              		.loc 1 1470 33 is_stmt 0 view .LVU1060
 3222 00ca 2B78     		ldrb	r3, [r5]
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3223              		.loc 1 1470 39 view .LVU1061
 3224 00cc 0135     		adds	r5, r5, #1
 3225              	.LVL247:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3226              		.loc 1 1470 30 view .LVU1062
 3227 00ce 1385     		strh	r3, [r2, #40]
 3228 00d0 C8E7     		b	.L275
 3229              		.cfi_endproc
 3230              	.LFE51:
 3232              		.global	SystemCoreClock
 3233              		.section	.rodata
 3234              		.set	.LANCHOR2,. + 0
 3237              	CSWTCH.25:
 3238 0000 04       		.byte	4
 3239 0001 08       		.byte	8
 3240 0002 02       		.byte	2
 3241              		.data
 3242              		.align	2
 3243              		.set	.LANCHOR1,. + 0
 3246              	SystemCoreClock:
 3247 0000 00127A00 		.word	8000000
 3248              		.bss
 3249              		.align	2
 3250              		.set	.LANCHOR0,. + 0
 3253              	tick.6086:
 3254 0000 00000000 		.space	4
 3255              		.text
 3256              	.Letext0:
 3257              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 3258              		.file 3 ".././hal/stm32f0/CMSIS/device/system_stm32f0xx.h"
 3259              		.file 4 ".././hal/stm32f0/CMSIS/device/stm32f030x6.h"
 3260              		.file 5 ".././hal/stm32f0/CMSIS/device/stm32f0xx.h"
 3261              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 3262              		.file 7 "/usr/include/newlib/sys/_types.h"
 3263              		.file 8 "/usr/include/newlib/sys/reent.h"
 3264              		.file 9 "/usr/include/newlib/sys/lock.h"
 3265              		.file 10 ".././hal/stm32f0/stm32f0xx_hal_def.h"
 3266              		.file 11 ".././hal/stm32f0/stm32f0xx_hal_rcc.h"
 3267              		.file 12 ".././hal/stm32f0/stm32f0xx_hal_rcc_ex.h"
 3268              		.file 13 ".././hal/stm32f0/stm32f0xx_hal_gpio.h"
 3269              		.file 14 ".././hal/stm32f0/stm32f0xx_hal_dma.h"
 3270              		.file 15 ".././hal/stm32f0/stm32f0xx_hal_uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0_hal_lowlevel.c
     /tmp/ccim365N.s:16     .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccim365N.s:24     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccim365N.s:48     .text.HAL_GetTick:000000000000000c $d
     /tmp/ccim365N.s:53     .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccim365N.s:60     .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccim365N.s:78     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccim365N.s:85     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccim365N.s:99     .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccim365N.s:106    .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccim365N.s:120    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccim365N.s:127    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccim365N.s:895    .text.HAL_RCC_OscConfig:0000000000000304 $d
     /tmp/ccim365N.s:905    .text.HAL_RCC_OscConfig:000000000000031c $t
     /tmp/ccim365N.s:1057   .text.HAL_RCC_OscConfig:00000000000003b8 $d
     /tmp/ccim365N.s:1064   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccim365N.s:1071   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccim365N.s:1349   .text.HAL_RCC_ClockConfig:0000000000000100 $d
     /tmp/ccim365N.s:1358   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/ccim365N.s:1365   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/ccim365N.s:1633   .text.HAL_RCCEx_PeriphCLKConfig:00000000000000f4 $d
     /tmp/ccim365N.s:1644   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccim365N.s:1651   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccim365N.s:2051   .text.HAL_GPIO_Init:000000000000014c $d
     /tmp/ccim365N.s:2061   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccim365N.s:2068   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccim365N.s:2099   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccim365N.s:2106   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccim365N.s:2224   .text.UART_WaitOnFlagUntilTimeout:0000000000000060 $d
     /tmp/ccim365N.s:2229   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccim365N.s:2236   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccim365N.s:2280   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccim365N.s:2287   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccim365N.s:2394   .text.UART_SetConfig:000000000000005c $d
     /tmp/ccim365N.s:2478   .text.UART_SetConfig:000000000000009e $d
     /tmp/ccim365N.s:2566   .text.UART_SetConfig:00000000000000e4 $d
     /tmp/ccim365N.s:2577   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccim365N.s:2584   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccim365N.s:2724   .text.HAL_UART_Init:0000000000000060 $d
     /tmp/ccim365N.s:2729   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccim365N.s:2736   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccim365N.s:2991   .text.HAL_UART_Receive:00000000000000ec $d
     /tmp/ccim365N.s:2996   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccim365N.s:3003   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccim365N.s:3246   .data:0000000000000000 SystemCoreClock
     /tmp/ccim365N.s:3237   .rodata:0000000000000000 CSWTCH.25
     /tmp/ccim365N.s:3242   .data:0000000000000000 $d
     /tmp/ccim365N.s:3249   .bss:0000000000000000 $d
     /tmp/ccim365N.s:3253   .bss:0000000000000000 tick.6086
     /tmp/ccim365N.s:2403   .text.UART_SetConfig:0000000000000065 $d
     /tmp/ccim365N.s:2403   .text.UART_SetConfig:0000000000000066 $t
     /tmp/ccim365N.s:2487   .text.UART_SetConfig:00000000000000a7 $d
     /tmp/ccim365N.s:2487   .text.UART_SetConfig:00000000000000a8 $t

UNDEFINED SYMBOLS
__aeabi_uidiv
__gnu_thumb1_case_uqi
