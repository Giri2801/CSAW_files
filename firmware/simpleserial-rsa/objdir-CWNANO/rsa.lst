   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"rsa.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mbedtls_rsa_init,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	mbedtls_rsa_init
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	mbedtls_rsa_init:
  26              	.LVL0:
  27              	.LFB13:
  28              		.file 1 ".././crypto/mbedtls//library/rsa.c"
   1:.././crypto/mbedtls//library/rsa.c **** /*
   2:.././crypto/mbedtls//library/rsa.c ****  *  The RSA public-key cryptosystem
   3:.././crypto/mbedtls//library/rsa.c ****  *
   4:.././crypto/mbedtls//library/rsa.c ****  *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
   5:.././crypto/mbedtls//library/rsa.c ****  *  SPDX-License-Identifier: Apache-2.0
   6:.././crypto/mbedtls//library/rsa.c ****  *
   7:.././crypto/mbedtls//library/rsa.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
   8:.././crypto/mbedtls//library/rsa.c ****  *  not use this file except in compliance with the License.
   9:.././crypto/mbedtls//library/rsa.c ****  *  You may obtain a copy of the License at
  10:.././crypto/mbedtls//library/rsa.c ****  *
  11:.././crypto/mbedtls//library/rsa.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  12:.././crypto/mbedtls//library/rsa.c ****  *
  13:.././crypto/mbedtls//library/rsa.c ****  *  Unless required by applicable law or agreed to in writing, software
  14:.././crypto/mbedtls//library/rsa.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  15:.././crypto/mbedtls//library/rsa.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  16:.././crypto/mbedtls//library/rsa.c ****  *  See the License for the specific language governing permissions and
  17:.././crypto/mbedtls//library/rsa.c ****  *  limitations under the License.
  18:.././crypto/mbedtls//library/rsa.c ****  *
  19:.././crypto/mbedtls//library/rsa.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  20:.././crypto/mbedtls//library/rsa.c ****  */
  21:.././crypto/mbedtls//library/rsa.c **** /*
  22:.././crypto/mbedtls//library/rsa.c ****  *  The following sources were referenced in the design of this implementation
  23:.././crypto/mbedtls//library/rsa.c ****  *  of the RSA algorithm:
  24:.././crypto/mbedtls//library/rsa.c ****  *
  25:.././crypto/mbedtls//library/rsa.c ****  *  [1] A method for obtaining digital signatures and public-key cryptosystems
  26:.././crypto/mbedtls//library/rsa.c ****  *      R Rivest, A Shamir, and L Adleman
  27:.././crypto/mbedtls//library/rsa.c ****  *      http://people.csail.mit.edu/rivest/pubs.html#RSA78
  28:.././crypto/mbedtls//library/rsa.c ****  *
  29:.././crypto/mbedtls//library/rsa.c ****  *  [2] Handbook of Applied Cryptography - 1997, Chapter 8
  30:.././crypto/mbedtls//library/rsa.c ****  *      Menezes, van Oorschot and Vanstone
  31:.././crypto/mbedtls//library/rsa.c ****  *
  32:.././crypto/mbedtls//library/rsa.c ****  *  [3] Malware Guard Extension: Using SGX to Conceal Cache Attacks
  33:.././crypto/mbedtls//library/rsa.c ****  *      Michael Schwarz, Samuel Weiser, Daniel Gruss, Cl√©mentine Maurice and
  34:.././crypto/mbedtls//library/rsa.c ****  *      Stefan Mangard
  35:.././crypto/mbedtls//library/rsa.c ****  *      https://arxiv.org/abs/1702.08719v2
  36:.././crypto/mbedtls//library/rsa.c ****  *
  37:.././crypto/mbedtls//library/rsa.c ****  */
  38:.././crypto/mbedtls//library/rsa.c **** 
  39:.././crypto/mbedtls//library/rsa.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  40:.././crypto/mbedtls//library/rsa.c **** #include "mbedtls/config.h"
  41:.././crypto/mbedtls//library/rsa.c **** #else
  42:.././crypto/mbedtls//library/rsa.c **** #include MBEDTLS_CONFIG_FILE
  43:.././crypto/mbedtls//library/rsa.c **** #endif
  44:.././crypto/mbedtls//library/rsa.c **** 
  45:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_C)
  46:.././crypto/mbedtls//library/rsa.c **** 
  47:.././crypto/mbedtls//library/rsa.c **** #include "mbedtls/rsa.h"
  48:.././crypto/mbedtls//library/rsa.c **** #include "mbedtls/oid.h"
  49:.././crypto/mbedtls//library/rsa.c **** 
  50:.././crypto/mbedtls//library/rsa.c **** #include <string.h>
  51:.././crypto/mbedtls//library/rsa.c **** 
  52:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
  53:.././crypto/mbedtls//library/rsa.c **** #include "mbedtls/md.h"
  54:.././crypto/mbedtls//library/rsa.c **** #endif
  55:.././crypto/mbedtls//library/rsa.c **** 
  56:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15) && !defined(__OpenBSD__)
  57:.././crypto/mbedtls//library/rsa.c **** #include <stdlib.h>
  58:.././crypto/mbedtls//library/rsa.c **** #endif
  59:.././crypto/mbedtls//library/rsa.c **** 
  60:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PLATFORM_C)
  61:.././crypto/mbedtls//library/rsa.c **** #include "mbedtls/platform.h"
  62:.././crypto/mbedtls//library/rsa.c **** #else
  63:.././crypto/mbedtls//library/rsa.c **** #include <stdio.h>
  64:.././crypto/mbedtls//library/rsa.c **** #define mbedtls_printf printf
  65:.././crypto/mbedtls//library/rsa.c **** #define mbedtls_calloc calloc
  66:.././crypto/mbedtls//library/rsa.c **** #define mbedtls_free   free
  67:.././crypto/mbedtls//library/rsa.c **** #endif
  68:.././crypto/mbedtls//library/rsa.c **** 
  69:.././crypto/mbedtls//library/rsa.c **** /* Implementation that should never be optimized out by the compiler */
  70:.././crypto/mbedtls//library/rsa.c **** static void mbedtls_zeroize( void *v, size_t n ) {
  71:.././crypto/mbedtls//library/rsa.c ****     volatile unsigned char *p = (unsigned char*)v; while( n-- ) *p++ = 0;
  72:.././crypto/mbedtls//library/rsa.c **** }
  73:.././crypto/mbedtls//library/rsa.c **** 
  74:.././crypto/mbedtls//library/rsa.c **** /*
  75:.././crypto/mbedtls//library/rsa.c ****  * Initialize an RSA context
  76:.././crypto/mbedtls//library/rsa.c ****  */
  77:.././crypto/mbedtls//library/rsa.c **** void mbedtls_rsa_init( mbedtls_rsa_context *ctx,
  78:.././crypto/mbedtls//library/rsa.c ****                int padding,
  79:.././crypto/mbedtls//library/rsa.c ****                int hash_id )
  80:.././crypto/mbedtls//library/rsa.c **** {
  29              		.loc 1 80 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  81:.././crypto/mbedtls//library/rsa.c ****     memset( ctx, 0, sizeof( mbedtls_rsa_context ) );
  33              		.loc 1 81 5 view .LVU1
  80:.././crypto/mbedtls//library/rsa.c ****     memset( ctx, 0, sizeof( mbedtls_rsa_context ) );
  34              		.loc 1 80 1 is_stmt 0 view .LVU2
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  80:.././crypto/mbedtls//library/rsa.c ****     memset( ctx, 0, sizeof( mbedtls_rsa_context ) );
  42              		.loc 1 80 1 view .LVU3
  43 0002 0E00     		movs	r6, r1
  44 0004 1500     		movs	r5, r2
  45              		.loc 1 81 5 view .LVU4
  46 0006 0021     		movs	r1, #0
  47              	.LVL1:
  48              		.loc 1 81 5 view .LVU5
  49 0008 AC22     		movs	r2, #172
  50              	.LVL2:
  80:.././crypto/mbedtls//library/rsa.c ****     memset( ctx, 0, sizeof( mbedtls_rsa_context ) );
  51              		.loc 1 80 1 view .LVU6
  52 000a 0400     		movs	r4, r0
  53              		.loc 1 81 5 view .LVU7
  54 000c FFF7FEFF 		bl	memset
  55              	.LVL3:
  82:.././crypto/mbedtls//library/rsa.c **** 
  83:.././crypto/mbedtls//library/rsa.c ****     mbedtls_rsa_set_padding( ctx, padding, hash_id );
  56              		.loc 1 83 5 is_stmt 1 view .LVU8
  57              	.LBB6:
  58              	.LBI6:
  84:.././crypto/mbedtls//library/rsa.c **** 
  85:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
  86:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mutex_init( &ctx->mutex );
  87:.././crypto/mbedtls//library/rsa.c **** #endif
  88:.././crypto/mbedtls//library/rsa.c **** }
  89:.././crypto/mbedtls//library/rsa.c **** 
  90:.././crypto/mbedtls//library/rsa.c **** /*
  91:.././crypto/mbedtls//library/rsa.c ****  * Set padding for an existing RSA context
  92:.././crypto/mbedtls//library/rsa.c ****  */
  93:.././crypto/mbedtls//library/rsa.c **** void mbedtls_rsa_set_padding( mbedtls_rsa_context *ctx, int padding, int hash_id )
  59              		.loc 1 93 6 view .LVU9
  60              	.LBB7:
  94:.././crypto/mbedtls//library/rsa.c **** {
  95:.././crypto/mbedtls//library/rsa.c ****     ctx->padding = padding;
  61              		.loc 1 95 5 view .LVU10
  62              		.loc 1 95 18 is_stmt 0 view .LVU11
  63 0010 A423     		movs	r3, #164
  64 0012 E650     		str	r6, [r4, r3]
  96:.././crypto/mbedtls//library/rsa.c ****     ctx->hash_id = hash_id;
  65              		.loc 1 96 5 is_stmt 1 view .LVU12
  66              		.loc 1 96 18 is_stmt 0 view .LVU13
  67 0014 0433     		adds	r3, r3, #4
  68 0016 E550     		str	r5, [r4, r3]
  69              	.LVL4:
  70              		.loc 1 96 18 view .LVU14
  71              	.LBE7:
  72              	.LBE6:
  88:.././crypto/mbedtls//library/rsa.c **** 
  73              		.loc 1 88 1 view .LVU15
  74              		@ sp needed
  75              	.LVL5:
  76              	.LVL6:
  77              	.LVL7:
  88:.././crypto/mbedtls//library/rsa.c **** 
  78              		.loc 1 88 1 view .LVU16
  79 0018 70BD     		pop	{r4, r5, r6, pc}
  80              		.cfi_endproc
  81              	.LFE13:
  83 001a C046     		.section	.text.mbedtls_rsa_set_padding,"ax",%progbits
  84              		.align	1
  85              		.p2align 2,,3
  86              		.global	mbedtls_rsa_set_padding
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	mbedtls_rsa_set_padding:
  93              	.LVL8:
  94              	.LFB14:
  94:.././crypto/mbedtls//library/rsa.c **** {
  95              		.loc 1 94 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
  95:.././crypto/mbedtls//library/rsa.c ****     ctx->hash_id = hash_id;
 100              		.loc 1 95 5 view .LVU18
  95:.././crypto/mbedtls//library/rsa.c ****     ctx->hash_id = hash_id;
 101              		.loc 1 95 18 is_stmt 0 view .LVU19
 102 0000 A423     		movs	r3, #164
 103 0002 C150     		str	r1, [r0, r3]
 104              		.loc 1 96 5 is_stmt 1 view .LVU20
 105              		.loc 1 96 18 is_stmt 0 view .LVU21
 106 0004 0433     		adds	r3, r3, #4
  97:.././crypto/mbedtls//library/rsa.c **** }
 107              		.loc 1 97 1 view .LVU22
 108              		@ sp needed
  96:.././crypto/mbedtls//library/rsa.c **** }
 109              		.loc 1 96 18 view .LVU23
 110 0006 C250     		str	r2, [r0, r3]
 111              		.loc 1 97 1 view .LVU24
 112 0008 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE14:
 116 000a C046     		.section	.text.mbedtls_rsa_check_pubkey,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	mbedtls_rsa_check_pubkey
 120              		.syntax unified
 121              		.code	16
 122              		.thumb_func
 123              		.fpu softvfp
 125              	mbedtls_rsa_check_pubkey:
 126              	.LVL9:
 127              	.LFB16:
  98:.././crypto/mbedtls//library/rsa.c **** 
  99:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_GENPRIME)
 100:.././crypto/mbedtls//library/rsa.c **** 
 101:.././crypto/mbedtls//library/rsa.c **** /*
 102:.././crypto/mbedtls//library/rsa.c ****  * Generate an RSA keypair
 103:.././crypto/mbedtls//library/rsa.c ****  */
 104:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_gen_key( mbedtls_rsa_context *ctx,
 105:.././crypto/mbedtls//library/rsa.c ****                  int (*f_rng)(void *, unsigned char *, size_t),
 106:.././crypto/mbedtls//library/rsa.c ****                  void *p_rng,
 107:.././crypto/mbedtls//library/rsa.c ****                  unsigned int nbits, int exponent )
 108:.././crypto/mbedtls//library/rsa.c **** {
 109:.././crypto/mbedtls//library/rsa.c ****     int ret;
 110:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi P1, Q1, H, G;
 111:.././crypto/mbedtls//library/rsa.c **** 
 112:.././crypto/mbedtls//library/rsa.c ****     if( f_rng == NULL || nbits < 128 || exponent < 3 )
 113:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 114:.././crypto/mbedtls//library/rsa.c **** 
 115:.././crypto/mbedtls//library/rsa.c ****     if( nbits % 2 )
 116:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 117:.././crypto/mbedtls//library/rsa.c **** 
 118:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &P1 ); mbedtls_mpi_init( &Q1 );
 119:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H ); mbedtls_mpi_init( &G );
 120:.././crypto/mbedtls//library/rsa.c **** 
 121:.././crypto/mbedtls//library/rsa.c ****     /*
 122:.././crypto/mbedtls//library/rsa.c ****      * find primes P and Q with Q < P so that:
 123:.././crypto/mbedtls//library/rsa.c ****      * GCD( E, (P-1)*(Q-1) ) == 1
 124:.././crypto/mbedtls//library/rsa.c ****      */
 125:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_lset( &ctx->E, exponent ) );
 126:.././crypto/mbedtls//library/rsa.c **** 
 127:.././crypto/mbedtls//library/rsa.c ****     do
 128:.././crypto/mbedtls//library/rsa.c ****     {
 129:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gen_prime( &ctx->P, nbits >> 1, 0,
 130:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 131:.././crypto/mbedtls//library/rsa.c **** 
 132:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gen_prime( &ctx->Q, nbits >> 1, 0,
 133:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 134:.././crypto/mbedtls//library/rsa.c **** 
 135:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_cmp_mpi( &ctx->P, &ctx->Q ) == 0 )
 136:.././crypto/mbedtls//library/rsa.c ****             continue;
 137:.././crypto/mbedtls//library/rsa.c **** 
 138:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->N, &ctx->P, &ctx->Q ) );
 139:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 140:.././crypto/mbedtls//library/rsa.c ****             continue;
 141:.././crypto/mbedtls//library/rsa.c **** 
 142:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_cmp_mpi( &ctx->P, &ctx->Q ) < 0 )
 143:.././crypto/mbedtls//library/rsa.c ****                                 mbedtls_mpi_swap( &ctx->P, &ctx->Q );
 144:.././crypto/mbedtls//library/rsa.c **** 
 145:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 148:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 149:.././crypto/mbedtls//library/rsa.c ****     }
 150:.././crypto/mbedtls//library/rsa.c ****     while( mbedtls_mpi_cmp_int( &G, 1 ) != 0 );
 151:.././crypto/mbedtls//library/rsa.c **** 
 152:.././crypto/mbedtls//library/rsa.c ****     /*
 153:.././crypto/mbedtls//library/rsa.c ****      * D  = E^-1 mod ((P-1)*(Q-1))
 154:.././crypto/mbedtls//library/rsa.c ****      * DP = D mod (P - 1)
 155:.././crypto/mbedtls//library/rsa.c ****      * DQ = D mod (Q - 1)
 156:.././crypto/mbedtls//library/rsa.c ****      * QP = Q^-1 mod P
 157:.././crypto/mbedtls//library/rsa.c ****      */
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->D , &ctx->E, &H  ) );
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 161:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 162:.././crypto/mbedtls//library/rsa.c **** 
 163:.././crypto/mbedtls//library/rsa.c ****     ctx->len = ( mbedtls_mpi_bitlen( &ctx->N ) + 7 ) >> 3;
 164:.././crypto/mbedtls//library/rsa.c **** 
 165:.././crypto/mbedtls//library/rsa.c **** cleanup:
 166:.././crypto/mbedtls//library/rsa.c **** 
 167:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &H ); mbedtls_mpi_free( &G 
 168:.././crypto/mbedtls//library/rsa.c **** 
 169:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 170:.././crypto/mbedtls//library/rsa.c ****     {
 171:.././crypto/mbedtls//library/rsa.c ****         mbedtls_rsa_free( ctx );
 172:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_GEN_FAILED + ret );
 173:.././crypto/mbedtls//library/rsa.c ****     }
 174:.././crypto/mbedtls//library/rsa.c **** 
 175:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 176:.././crypto/mbedtls//library/rsa.c **** }
 177:.././crypto/mbedtls//library/rsa.c **** 
 178:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_GENPRIME */
 179:.././crypto/mbedtls//library/rsa.c **** 
 180:.././crypto/mbedtls//library/rsa.c **** /*
 181:.././crypto/mbedtls//library/rsa.c ****  * Check a public RSA key
 182:.././crypto/mbedtls//library/rsa.c ****  */
 183:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_check_pubkey( const mbedtls_rsa_context *ctx )
 184:.././crypto/mbedtls//library/rsa.c **** {
 128              		.loc 1 184 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 185:.././crypto/mbedtls//library/rsa.c ****     if( !ctx->N.p || !ctx->E.p )
 132              		.loc 1 185 5 view .LVU26
 133              		.loc 1 185 16 is_stmt 0 view .LVU27
 134 0000 0369     		ldr	r3, [r0, #16]
 184:.././crypto/mbedtls//library/rsa.c ****     if( !ctx->N.p || !ctx->E.p )
 135              		.loc 1 184 1 view .LVU28
 136 0002 70B5     		push	{r4, r5, r6, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 4, -16
 140              		.cfi_offset 5, -12
 141              		.cfi_offset 6, -8
 142              		.cfi_offset 14, -4
 184:.././crypto/mbedtls//library/rsa.c ****     if( !ctx->N.p || !ctx->E.p )
 143              		.loc 1 184 1 view .LVU29
 144 0004 0400     		movs	r4, r0
 145              		.loc 1 185 7 view .LVU30
 146 0006 002B     		cmp	r3, #0
 147 0008 26D0     		beq	.L5
 148              		.loc 1 185 29 discriminator 1 view .LVU31
 149 000a C269     		ldr	r2, [r0, #28]
 150              		.loc 1 185 19 discriminator 1 view .LVU32
 151 000c 002A     		cmp	r2, #0
 152 000e 23D0     		beq	.L5
 186:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 187:.././crypto/mbedtls//library/rsa.c **** 
 188:.././crypto/mbedtls//library/rsa.c ****     if( ( ctx->N.p[0] & 1 ) == 0 ||
 153              		.loc 1 188 5 is_stmt 1 view .LVU33
 154              		.loc 1 188 23 is_stmt 0 view .LVU34
 155 0010 0121     		movs	r1, #1
 156 0012 1B68     		ldr	r3, [r3]
 157              		.loc 1 188 7 view .LVU35
 158 0014 0B42     		tst	r3, r1
 159 0016 1FD0     		beq	.L5
 189:.././crypto/mbedtls//library/rsa.c ****         ( ctx->E.p[0] & 1 ) == 0 )
 160              		.loc 1 189 23 discriminator 1 view .LVU36
 161 0018 1368     		ldr	r3, [r2]
 188:.././crypto/mbedtls//library/rsa.c ****         ( ctx->E.p[0] & 1 ) == 0 )
 162              		.loc 1 188 34 discriminator 1 view .LVU37
 163 001a 0B42     		tst	r3, r1
 164 001c 1CD0     		beq	.L5
 190:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 191:.././crypto/mbedtls//library/rsa.c **** 
 192:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_bitlen( &ctx->N ) < 128 ||
 165              		.loc 1 192 5 is_stmt 1 view .LVU38
 166              		.loc 1 192 9 is_stmt 0 view .LVU39
 167 001e 0500     		movs	r5, r0
 168 0020 0835     		adds	r5, r5, #8
 169 0022 2800     		movs	r0, r5
 170              	.LVL10:
 171              		.loc 1 192 9 view .LVU40
 172 0024 FFF7FEFF 		bl	mbedtls_mpi_bitlen
 173              	.LVL11:
 174              		.loc 1 192 7 view .LVU41
 175 0028 7F28     		cmp	r0, #127
 176 002a 15D9     		bls	.L5
 193:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_bitlen( &ctx->N ) > MBEDTLS_MPI_MAX_BITS )
 177              		.loc 1 193 9 discriminator 1 view .LVU42
 178 002c 2800     		movs	r0, r5
 179 002e FFF7FEFF 		bl	mbedtls_mpi_bitlen
 180              	.LVL12:
 192:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_bitlen( &ctx->N ) > MBEDTLS_MPI_MAX_BITS )
 181              		.loc 1 192 45 discriminator 1 view .LVU43
 182 0032 8023     		movs	r3, #128
 183 0034 9B01     		lsls	r3, r3, #6
 184 0036 9842     		cmp	r0, r3
 185 0038 0ED8     		bhi	.L5
 194:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 195:.././crypto/mbedtls//library/rsa.c **** 
 196:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_bitlen( &ctx->E ) < 2 ||
 186              		.loc 1 196 5 is_stmt 1 view .LVU44
 187              		.loc 1 196 9 is_stmt 0 view .LVU45
 188 003a 1434     		adds	r4, r4, #20
 189              	.LVL13:
 190              		.loc 1 196 9 view .LVU46
 191 003c 2000     		movs	r0, r4
 192 003e FFF7FEFF 		bl	mbedtls_mpi_bitlen
 193              	.LVL14:
 194              		.loc 1 196 7 view .LVU47
 195 0042 0128     		cmp	r0, #1
 196 0044 08D9     		bls	.L5
 197:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &ctx->E, &ctx->N ) >= 0 )
 197              		.loc 1 197 9 discriminator 1 view .LVU48
 198 0046 2900     		movs	r1, r5
 199 0048 2000     		movs	r0, r4
 200 004a FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 201              	.LVL15:
 202 004e 0300     		movs	r3, r0
 198:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 199:.././crypto/mbedtls//library/rsa.c **** 
 200:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 203              		.loc 1 200 11 discriminator 1 view .LVU49
 204 0050 0020     		movs	r0, #0
 196:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &ctx->E, &ctx->N ) >= 0 )
 205              		.loc 1 196 43 discriminator 1 view .LVU50
 206 0052 002B     		cmp	r3, #0
 207 0054 00DA     		bge	.L5
 208              	.LVL16:
 209              	.L4:
 201:.././crypto/mbedtls//library/rsa.c **** }
 210              		.loc 1 201 1 view .LVU51
 211              		@ sp needed
 212 0056 70BD     		pop	{r4, r5, r6, pc}
 213              	.L5:
 198:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 214              		.loc 1 198 15 view .LVU52
 215 0058 0048     		ldr	r0, .L20
 216 005a FCE7     		b	.L4
 217              	.L21:
 218              		.align	2
 219              	.L20:
 220 005c 00BEFFFF 		.word	-16896
 221              		.cfi_endproc
 222              	.LFE16:
 224              		.section	.text.mbedtls_rsa_check_privkey,"ax",%progbits
 225              		.align	1
 226              		.p2align 2,,3
 227              		.global	mbedtls_rsa_check_privkey
 228              		.syntax unified
 229              		.code	16
 230              		.thumb_func
 231              		.fpu softvfp
 233              	mbedtls_rsa_check_privkey:
 234              	.LVL17:
 235              	.LFB17:
 202:.././crypto/mbedtls//library/rsa.c **** 
 203:.././crypto/mbedtls//library/rsa.c **** /*
 204:.././crypto/mbedtls//library/rsa.c ****  * Check a private RSA key
 205:.././crypto/mbedtls//library/rsa.c ****  */
 206:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_check_privkey( const mbedtls_rsa_context *ctx )
 207:.././crypto/mbedtls//library/rsa.c **** {
 236              		.loc 1 207 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 160
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 208:.././crypto/mbedtls//library/rsa.c ****     int ret;
 240              		.loc 1 208 5 view .LVU54
 209:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi PQ, DE, P1, Q1, H, I, G, G2, L1, L2, DP, DQ, QP;
 241              		.loc 1 209 5 view .LVU55
 210:.././crypto/mbedtls//library/rsa.c **** 
 211:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_rsa_check_pubkey( ctx ) ) != 0 )
 242              		.loc 1 211 5 view .LVU56
 207:.././crypto/mbedtls//library/rsa.c ****     int ret;
 243              		.loc 1 207 1 is_stmt 0 view .LVU57
 244 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 20
 247              		.cfi_offset 4, -20
 248              		.cfi_offset 5, -16
 249              		.cfi_offset 6, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 CE46     		mov	lr, r9
 253 0004 4746     		mov	r7, r8
 254 0006 80B5     		push	{r7, lr}
 255              	.LCFI3:
 256              		.cfi_def_cfa_offset 28
 257              		.cfi_offset 8, -28
 258              		.cfi_offset 9, -24
 259 0008 A9B0     		sub	sp, sp, #164
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 192
 207:.././crypto/mbedtls//library/rsa.c ****     int ret;
 262              		.loc 1 207 1 view .LVU58
 263 000a 0500     		movs	r5, r0
 264              		.loc 1 211 17 view .LVU59
 265 000c FFF7FEFF 		bl	mbedtls_rsa_check_pubkey
 266              	.LVL18:
 267              		.loc 1 211 17 view .LVU60
 268 0010 041E     		subs	r4, r0, #0
 269              	.LVL19:
 270              		.loc 1 211 7 view .LVU61
 271 0012 68D1     		bne	.L22
 212:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 213:.././crypto/mbedtls//library/rsa.c **** 
 214:.././crypto/mbedtls//library/rsa.c ****     if( !ctx->P.p || !ctx->Q.p || !ctx->D.p )
 272              		.loc 1 214 5 is_stmt 1 view .LVU62
 273              		.loc 1 214 7 is_stmt 0 view .LVU63
 274 0014 6B6B     		ldr	r3, [r5, #52]
 275 0016 002B     		cmp	r3, #0
 276 0018 00D1     		bne	.LCB194
 277 001a F1E0     		b	.L34	@long jump
 278              	.LCB194:
 279              		.loc 1 214 19 discriminator 1 view .LVU64
 280 001c 2B6C     		ldr	r3, [r5, #64]
 281 001e 002B     		cmp	r3, #0
 282 0020 00D1     		bne	.LCB198
 283 0022 EDE0     		b	.L34	@long jump
 284              	.LCB198:
 285              		.loc 1 214 32 discriminator 2 view .LVU65
 286 0024 AB6A     		ldr	r3, [r5, #40]
 287 0026 002B     		cmp	r3, #0
 288 0028 00D1     		bne	.LCB202
 289 002a E9E0     		b	.L34	@long jump
 290              	.LCB202:
 291              	.LVL20:
 292              	.LBB10:
 293              	.LBI10:
 206:.././crypto/mbedtls//library/rsa.c **** {
 294              		.loc 1 206 5 is_stmt 1 view .LVU66
 295              	.LBB11:
 215:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 216:.././crypto/mbedtls//library/rsa.c **** 
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &PQ ); mbedtls_mpi_init( &DE ); mbedtls_mpi_init( &P1 ); mbedtls_mpi_init( &Q
 296              		.loc 1 217 5 view .LVU67
 218:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 219:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &L1 ); mbedtls_mpi_init( &L2 ); mbedtls_mpi_init( &DP ); mbedtls_mpi_init( &D
 220:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &QP );
 221:.././crypto/mbedtls//library/rsa.c **** 
 222:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &PQ, &ctx->P, &ctx->Q ) );
 297              		.loc 1 222 5 is_stmt 0 view .LVU68
 298 002c 2E00     		movs	r6, r5
 299 002e 2F00     		movs	r7, r5
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 300              		.loc 1 217 5 view .LVU69
 301 0030 01A8     		add	r0, sp, #4
 302              	.LVL21:
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 303              		.loc 1 217 5 view .LVU70
 304 0032 FFF7FEFF 		bl	mbedtls_mpi_init
 305              	.LVL22:
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 306              		.loc 1 217 30 is_stmt 1 view .LVU71
 307 0036 04A8     		add	r0, sp, #16
 308 0038 FFF7FEFF 		bl	mbedtls_mpi_init
 309              	.LVL23:
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 310              		.loc 1 217 55 view .LVU72
 311 003c 07A8     		add	r0, sp, #28
 312 003e FFF7FEFF 		bl	mbedtls_mpi_init
 313              	.LVL24:
 217:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 314              		.loc 1 217 80 view .LVU73
 315 0042 0AA8     		add	r0, sp, #40
 316 0044 FFF7FEFF 		bl	mbedtls_mpi_init
 317              	.LVL25:
 218:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 318              		.loc 1 218 5 view .LVU74
 319 0048 0DA8     		add	r0, sp, #52
 320 004a FFF7FEFF 		bl	mbedtls_mpi_init
 321              	.LVL26:
 218:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 322              		.loc 1 218 30 view .LVU75
 323 004e 10A8     		add	r0, sp, #64
 324 0050 FFF7FEFF 		bl	mbedtls_mpi_init
 325              	.LVL27:
 218:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 326              		.loc 1 218 55 view .LVU76
 327 0054 13A8     		add	r0, sp, #76
 328 0056 FFF7FEFF 		bl	mbedtls_mpi_init
 329              	.LVL28:
 218:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H  ); mbedtls_mpi_init( &I  ); mbedtls_mpi_init( &G  ); mbedtls_mpi_init( &G
 330              		.loc 1 218 80 view .LVU77
 331 005a 16A8     		add	r0, sp, #88
 332 005c FFF7FEFF 		bl	mbedtls_mpi_init
 333              	.LVL29:
 219:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &QP );
 334              		.loc 1 219 5 view .LVU78
 335 0060 19A8     		add	r0, sp, #100
 336 0062 FFF7FEFF 		bl	mbedtls_mpi_init
 337              	.LVL30:
 219:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &QP );
 338              		.loc 1 219 30 view .LVU79
 339 0066 1CA8     		add	r0, sp, #112
 340 0068 FFF7FEFF 		bl	mbedtls_mpi_init
 341              	.LVL31:
 219:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &QP );
 342              		.loc 1 219 55 view .LVU80
 343 006c 1FA8     		add	r0, sp, #124
 344 006e FFF7FEFF 		bl	mbedtls_mpi_init
 345              	.LVL32:
 219:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &QP );
 346              		.loc 1 219 80 view .LVU81
 347 0072 22A8     		add	r0, sp, #136
 348 0074 FFF7FEFF 		bl	mbedtls_mpi_init
 349              	.LVL33:
 220:.././crypto/mbedtls//library/rsa.c **** 
 350              		.loc 1 220 5 view .LVU82
 351              		.loc 1 222 5 is_stmt 0 view .LVU83
 352 0078 2C36     		adds	r6, r6, #44
 220:.././crypto/mbedtls//library/rsa.c **** 
 353              		.loc 1 220 5 view .LVU84
 354 007a 25A8     		add	r0, sp, #148
 355              		.loc 1 222 5 view .LVU85
 356 007c 3837     		adds	r7, r7, #56
 220:.././crypto/mbedtls//library/rsa.c **** 
 357              		.loc 1 220 5 view .LVU86
 358 007e FFF7FEFF 		bl	mbedtls_mpi_init
 359              	.LVL34:
 360              		.loc 1 222 5 is_stmt 1 view .LVU87
 361              		.loc 1 222 5 view .LVU88
 362 0082 3A00     		movs	r2, r7
 363 0084 3100     		movs	r1, r6
 364 0086 01A8     		add	r0, sp, #4
 365 0088 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 366              	.LVL35:
 367 008c 041E     		subs	r4, r0, #0
 368              	.LVL36:
 369              		.loc 1 222 5 is_stmt 0 view .LVU89
 370 008e 30D0     		beq	.L35
 371              	.L24:
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &DE, &ctx->D, &ctx->E ) );
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 227:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 228:.././crypto/mbedtls//library/rsa.c **** 
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G2, &P1, &Q1 ) );
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 231:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 232:.././crypto/mbedtls//library/rsa.c **** 
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DP, &ctx->D, &P1 ) );
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 235:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 236:.././crypto/mbedtls//library/rsa.c ****     /*
 237:.././crypto/mbedtls//library/rsa.c ****      * Check for a valid PKCS1v2 private key
 238:.././crypto/mbedtls//library/rsa.c ****      */
 239:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &PQ, &ctx->N ) != 0 ||
 240:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 241:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DQ, &ctx->DQ ) != 0 ||
 242:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &QP, &ctx->QP ) != 0 ||
 243:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &L2, 0 ) != 0 ||
 244:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &I, 1 ) != 0 ||
 245:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &G, 1 ) != 0 )
 246:.././crypto/mbedtls//library/rsa.c ****     {
 247:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_KEY_CHECK_FAILED;
 248:.././crypto/mbedtls//library/rsa.c ****     }
 249:.././crypto/mbedtls//library/rsa.c **** 
 250:.././crypto/mbedtls//library/rsa.c **** cleanup:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &PQ ); mbedtls_mpi_free( &DE ); mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q
 372              		.loc 1 251 5 is_stmt 1 view .LVU90
 373 0090 01A8     		add	r0, sp, #4
 374              	.LVL37:
 375              		.loc 1 251 5 is_stmt 0 view .LVU91
 376 0092 FFF7FEFF 		bl	mbedtls_mpi_free
 377              	.LVL38:
 378              		.loc 1 251 30 is_stmt 1 view .LVU92
 379 0096 04A8     		add	r0, sp, #16
 380 0098 FFF7FEFF 		bl	mbedtls_mpi_free
 381              	.LVL39:
 382              		.loc 1 251 55 view .LVU93
 383 009c 07A8     		add	r0, sp, #28
 384 009e FFF7FEFF 		bl	mbedtls_mpi_free
 385              	.LVL40:
 386              		.loc 1 251 80 view .LVU94
 387 00a2 0AA8     		add	r0, sp, #40
 388 00a4 FFF7FEFF 		bl	mbedtls_mpi_free
 389              	.LVL41:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 390              		.loc 1 252 5 view .LVU95
 391 00a8 0DA8     		add	r0, sp, #52
 392 00aa FFF7FEFF 		bl	mbedtls_mpi_free
 393              	.LVL42:
 394              		.loc 1 252 30 view .LVU96
 395 00ae 10A8     		add	r0, sp, #64
 396 00b0 FFF7FEFF 		bl	mbedtls_mpi_free
 397              	.LVL43:
 398              		.loc 1 252 55 view .LVU97
 399 00b4 13A8     		add	r0, sp, #76
 400 00b6 FFF7FEFF 		bl	mbedtls_mpi_free
 401              	.LVL44:
 402              		.loc 1 252 80 view .LVU98
 403 00ba 16A8     		add	r0, sp, #88
 404 00bc FFF7FEFF 		bl	mbedtls_mpi_free
 405              	.LVL45:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 406              		.loc 1 253 5 view .LVU99
 407 00c0 19A8     		add	r0, sp, #100
 408 00c2 FFF7FEFF 		bl	mbedtls_mpi_free
 409              	.LVL46:
 410              		.loc 1 253 30 view .LVU100
 411 00c6 1CA8     		add	r0, sp, #112
 412 00c8 FFF7FEFF 		bl	mbedtls_mpi_free
 413              	.LVL47:
 414              		.loc 1 253 55 view .LVU101
 415 00cc 1FA8     		add	r0, sp, #124
 416 00ce FFF7FEFF 		bl	mbedtls_mpi_free
 417              	.LVL48:
 418              		.loc 1 253 80 view .LVU102
 419 00d2 22A8     		add	r0, sp, #136
 420 00d4 FFF7FEFF 		bl	mbedtls_mpi_free
 421              	.LVL49:
 254:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 422              		.loc 1 254 5 view .LVU103
 423 00d8 25A8     		add	r0, sp, #148
 424 00da FFF7FEFF 		bl	mbedtls_mpi_free
 425              	.LVL50:
 255:.././crypto/mbedtls//library/rsa.c **** 
 256:.././crypto/mbedtls//library/rsa.c ****     if( ret == MBEDTLS_ERR_RSA_KEY_CHECK_FAILED )
 426              		.loc 1 256 5 view .LVU104
 427              		.loc 1 256 7 is_stmt 0 view .LVU105
 428 00de 734B     		ldr	r3, .L37
 429 00e0 9C42     		cmp	r4, r3
 430 00e2 00D0     		beq	.LCB321
 431 00e4 8EE0     		b	.L33	@long jump
 432              	.LCB321:
 433              	.LVL51:
 434              	.L22:
 435              		.loc 1 256 7 view .LVU106
 436              	.LBE11:
 437              	.LBE10:
 257:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 258:.././crypto/mbedtls//library/rsa.c **** 
 259:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 260:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED + ret );
 261:.././crypto/mbedtls//library/rsa.c **** 
 262:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 263:.././crypto/mbedtls//library/rsa.c **** }
 438              		.loc 1 263 1 view .LVU107
 439 00e6 2000     		movs	r0, r4
 440 00e8 29B0     		add	sp, sp, #164
 441              		@ sp needed
 442              	.LVL52:
 443              		.loc 1 263 1 view .LVU108
 444 00ea 0CBC     		pop	{r2, r3}
 445 00ec 9046     		mov	r8, r2
 446 00ee 9946     		mov	r9, r3
 447 00f0 F0BD     		pop	{r4, r5, r6, r7, pc}
 448              	.LVL53:
 449              	.L35:
 450              	.LBB13:
 451              	.LBB12:
 222:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &DE, &ctx->D, &ctx->E ) );
 452              		.loc 1 222 5 is_stmt 1 view .LVU109
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 453              		.loc 1 223 5 view .LVU110
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 454              		.loc 1 223 5 view .LVU111
 455 00f2 2023     		movs	r3, #32
 456 00f4 9946     		mov	r9, r3
 457 00f6 0C3B     		subs	r3, r3, #12
 458 00f8 9846     		mov	r8, r3
 459 00fa A944     		add	r9, r9, r5
 460 00fc A844     		add	r8, r8, r5
 461 00fe 4246     		mov	r2, r8
 462 0100 4946     		mov	r1, r9
 463 0102 04A8     		add	r0, sp, #16
 464              	.LVL54:
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 465              		.loc 1 223 5 is_stmt 0 view .LVU112
 466 0104 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 467              	.LVL55:
 468 0108 041E     		subs	r4, r0, #0
 469              	.LVL56:
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 470              		.loc 1 223 5 view .LVU113
 471 010a C1D1     		bne	.L24
 223:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 472              		.loc 1 223 5 is_stmt 1 view .LVU114
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 473              		.loc 1 224 5 view .LVU115
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 474              		.loc 1 224 5 view .LVU116
 475 010c 0122     		movs	r2, #1
 476 010e 3100     		movs	r1, r6
 477 0110 07A8     		add	r0, sp, #28
 478              	.LVL57:
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 479              		.loc 1 224 5 is_stmt 0 view .LVU117
 480 0112 FFF7FEFF 		bl	mbedtls_mpi_sub_int
 481              	.LVL58:
 482 0116 041E     		subs	r4, r0, #0
 483              	.LVL59:
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 484              		.loc 1 224 5 view .LVU118
 485 0118 BAD1     		bne	.L24
 224:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 486              		.loc 1 224 5 is_stmt 1 view .LVU119
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 487              		.loc 1 225 5 view .LVU120
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 488              		.loc 1 225 5 view .LVU121
 489 011a 0122     		movs	r2, #1
 490 011c 3900     		movs	r1, r7
 491 011e 0AA8     		add	r0, sp, #40
 492              	.LVL60:
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 493              		.loc 1 225 5 is_stmt 0 view .LVU122
 494 0120 FFF7FEFF 		bl	mbedtls_mpi_sub_int
 495              	.LVL61:
 496 0124 041E     		subs	r4, r0, #0
 497              	.LVL62:
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 498              		.loc 1 225 5 view .LVU123
 499 0126 B3D1     		bne	.L24
 225:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 500              		.loc 1 225 5 is_stmt 1 view .LVU124
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 501              		.loc 1 226 5 view .LVU125
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 502              		.loc 1 226 5 view .LVU126
 503 0128 0AAA     		add	r2, sp, #40
 504 012a 07A9     		add	r1, sp, #28
 505 012c 0DA8     		add	r0, sp, #52
 506              	.LVL63:
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 507              		.loc 1 226 5 is_stmt 0 view .LVU127
 508 012e FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 509              	.LVL64:
 510 0132 041E     		subs	r4, r0, #0
 511              	.LVL65:
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 512              		.loc 1 226 5 view .LVU128
 513 0134 ACD1     		bne	.L24
 226:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 514              		.loc 1 226 5 is_stmt 1 view .LVU129
 227:.././crypto/mbedtls//library/rsa.c **** 
 515              		.loc 1 227 5 view .LVU130
 227:.././crypto/mbedtls//library/rsa.c **** 
 516              		.loc 1 227 5 view .LVU131
 517 0136 4146     		mov	r1, r8
 518 0138 0DAA     		add	r2, sp, #52
 519 013a 13A8     		add	r0, sp, #76
 520              	.LVL66:
 227:.././crypto/mbedtls//library/rsa.c **** 
 521              		.loc 1 227 5 is_stmt 0 view .LVU132
 522 013c FFF7FEFF 		bl	mbedtls_mpi_gcd
 523              	.LVL67:
 524 0140 041E     		subs	r4, r0, #0
 525              	.LVL68:
 227:.././crypto/mbedtls//library/rsa.c **** 
 526              		.loc 1 227 5 view .LVU133
 527 0142 A5D1     		bne	.L24
 227:.././crypto/mbedtls//library/rsa.c **** 
 528              		.loc 1 227 5 is_stmt 1 view .LVU134
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 529              		.loc 1 229 5 view .LVU135
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 530              		.loc 1 229 5 view .LVU136
 531 0144 0AAA     		add	r2, sp, #40
 532 0146 07A9     		add	r1, sp, #28
 533 0148 16A8     		add	r0, sp, #88
 534              	.LVL69:
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 535              		.loc 1 229 5 is_stmt 0 view .LVU137
 536 014a FFF7FEFF 		bl	mbedtls_mpi_gcd
 537              	.LVL70:
 538 014e 041E     		subs	r4, r0, #0
 539              	.LVL71:
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 540              		.loc 1 229 5 view .LVU138
 541 0150 9ED1     		bne	.L24
 229:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_div_mpi( &L1, &L2, &H, &G2 ) );
 542              		.loc 1 229 5 is_stmt 1 view .LVU139
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 543              		.loc 1 230 5 view .LVU140
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 544              		.loc 1 230 5 view .LVU141
 545 0152 16AB     		add	r3, sp, #88
 546 0154 0DAA     		add	r2, sp, #52
 547 0156 1CA9     		add	r1, sp, #112
 548 0158 19A8     		add	r0, sp, #100
 549              	.LVL72:
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 550              		.loc 1 230 5 is_stmt 0 view .LVU142
 551 015a FFF7FEFF 		bl	mbedtls_mpi_div_mpi
 552              	.LVL73:
 553 015e 041E     		subs	r4, r0, #0
 554              	.LVL74:
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 555              		.loc 1 230 5 view .LVU143
 556 0160 00D0     		beq	.LCB446
 557 0162 95E7     		b	.L24	@long jump
 558              	.LCB446:
 230:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &I, &DE, &L1  ) );
 559              		.loc 1 230 5 is_stmt 1 view .LVU144
 231:.././crypto/mbedtls//library/rsa.c **** 
 560              		.loc 1 231 5 view .LVU145
 231:.././crypto/mbedtls//library/rsa.c **** 
 561              		.loc 1 231 5 view .LVU146
 562 0164 19AA     		add	r2, sp, #100
 563 0166 04A9     		add	r1, sp, #16
 564 0168 10A8     		add	r0, sp, #64
 565              	.LVL75:
 231:.././crypto/mbedtls//library/rsa.c **** 
 566              		.loc 1 231 5 is_stmt 0 view .LVU147
 567 016a FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 568              	.LVL76:
 569 016e 041E     		subs	r4, r0, #0
 570              	.LVL77:
 231:.././crypto/mbedtls//library/rsa.c **** 
 571              		.loc 1 231 5 view .LVU148
 572 0170 00D0     		beq	.LCB459
 573 0172 8DE7     		b	.L24	@long jump
 574              	.LCB459:
 231:.././crypto/mbedtls//library/rsa.c **** 
 575              		.loc 1 231 5 is_stmt 1 view .LVU149
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 576              		.loc 1 233 5 view .LVU150
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 577              		.loc 1 233 5 view .LVU151
 578 0174 4946     		mov	r1, r9
 579 0176 07AA     		add	r2, sp, #28
 580 0178 1FA8     		add	r0, sp, #124
 581              	.LVL78:
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 582              		.loc 1 233 5 is_stmt 0 view .LVU152
 583 017a FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 584              	.LVL79:
 585 017e 041E     		subs	r4, r0, #0
 586              	.LVL80:
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 587              		.loc 1 233 5 view .LVU153
 588 0180 00D0     		beq	.LCB472
 589 0182 85E7     		b	.L24	@long jump
 590              	.LCB472:
 233:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &DQ, &ctx->D, &Q1 ) );
 591              		.loc 1 233 5 is_stmt 1 view .LVU154
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 592              		.loc 1 234 5 view .LVU155
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 593              		.loc 1 234 5 view .LVU156
 594 0184 4946     		mov	r1, r9
 595 0186 0AAA     		add	r2, sp, #40
 596 0188 22A8     		add	r0, sp, #136
 597              	.LVL81:
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 598              		.loc 1 234 5 is_stmt 0 view .LVU157
 599 018a FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 600              	.LVL82:
 601 018e 041E     		subs	r4, r0, #0
 602              	.LVL83:
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 603              		.loc 1 234 5 view .LVU158
 604 0190 00D0     		beq	.LCB485
 605 0192 7DE7     		b	.L24	@long jump
 606              	.LCB485:
 234:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &QP, &ctx->Q, &ctx->P ) );
 607              		.loc 1 234 5 is_stmt 1 view .LVU159
 235:.././crypto/mbedtls//library/rsa.c ****     /*
 608              		.loc 1 235 5 view .LVU160
 235:.././crypto/mbedtls//library/rsa.c ****     /*
 609              		.loc 1 235 5 view .LVU161
 610 0194 3200     		movs	r2, r6
 611 0196 3900     		movs	r1, r7
 612 0198 25A8     		add	r0, sp, #148
 613              	.LVL84:
 235:.././crypto/mbedtls//library/rsa.c ****     /*
 614              		.loc 1 235 5 is_stmt 0 view .LVU162
 615 019a FFF7FEFF 		bl	mbedtls_mpi_inv_mod
 616              	.LVL85:
 617 019e 041E     		subs	r4, r0, #0
 618              	.LVL86:
 235:.././crypto/mbedtls//library/rsa.c ****     /*
 619              		.loc 1 235 5 view .LVU163
 620 01a0 00D0     		beq	.LCB498
 621 01a2 75E7     		b	.L24	@long jump
 622              	.LCB498:
 235:.././crypto/mbedtls//library/rsa.c ****     /*
 623              		.loc 1 235 5 is_stmt 1 view .LVU164
 239:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 624              		.loc 1 239 5 view .LVU165
 239:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 625              		.loc 1 239 9 is_stmt 0 view .LVU166
 626 01a4 2900     		movs	r1, r5
 627 01a6 01A8     		add	r0, sp, #4
 628              	.LVL87:
 239:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 629              		.loc 1 239 9 view .LVU167
 630 01a8 0831     		adds	r1, r1, #8
 631 01aa FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 632              	.LVL88:
 239:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 633              		.loc 1 239 7 view .LVU168
 634 01ae 0028     		cmp	r0, #0
 635 01b0 2CD0     		beq	.L36
 636              	.LVL89:
 637              	.L25:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 638              		.loc 1 251 5 is_stmt 1 view .LVU169
 639 01b2 01A8     		add	r0, sp, #4
 640 01b4 FFF7FEFF 		bl	mbedtls_mpi_free
 641              	.LVL90:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 642              		.loc 1 251 30 view .LVU170
 643 01b8 04A8     		add	r0, sp, #16
 644 01ba FFF7FEFF 		bl	mbedtls_mpi_free
 645              	.LVL91:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 646              		.loc 1 251 55 view .LVU171
 647 01be 07A8     		add	r0, sp, #28
 648 01c0 FFF7FEFF 		bl	mbedtls_mpi_free
 649              	.LVL92:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 650              		.loc 1 251 80 view .LVU172
 651 01c4 0AA8     		add	r0, sp, #40
 652 01c6 FFF7FEFF 		bl	mbedtls_mpi_free
 653              	.LVL93:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 654              		.loc 1 252 5 view .LVU173
 655 01ca 0DA8     		add	r0, sp, #52
 656 01cc FFF7FEFF 		bl	mbedtls_mpi_free
 657              	.LVL94:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 658              		.loc 1 252 30 view .LVU174
 659 01d0 10A8     		add	r0, sp, #64
 660 01d2 FFF7FEFF 		bl	mbedtls_mpi_free
 661              	.LVL95:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 662              		.loc 1 252 55 view .LVU175
 663 01d6 13A8     		add	r0, sp, #76
 664 01d8 FFF7FEFF 		bl	mbedtls_mpi_free
 665              	.LVL96:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 666              		.loc 1 252 80 view .LVU176
 667 01dc 16A8     		add	r0, sp, #88
 668 01de FFF7FEFF 		bl	mbedtls_mpi_free
 669              	.LVL97:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 670              		.loc 1 253 5 view .LVU177
 671 01e2 19A8     		add	r0, sp, #100
 672 01e4 FFF7FEFF 		bl	mbedtls_mpi_free
 673              	.LVL98:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 674              		.loc 1 253 30 view .LVU178
 675 01e8 1CA8     		add	r0, sp, #112
 676 01ea FFF7FEFF 		bl	mbedtls_mpi_free
 677              	.LVL99:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 678              		.loc 1 253 55 view .LVU179
 679 01ee 1FA8     		add	r0, sp, #124
 680 01f0 FFF7FEFF 		bl	mbedtls_mpi_free
 681              	.LVL100:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 682              		.loc 1 253 80 view .LVU180
 683 01f4 22A8     		add	r0, sp, #136
 684 01f6 FFF7FEFF 		bl	mbedtls_mpi_free
 685              	.LVL101:
 254:.././crypto/mbedtls//library/rsa.c **** 
 686              		.loc 1 254 5 view .LVU181
 687 01fa 25A8     		add	r0, sp, #148
 688 01fc FFF7FEFF 		bl	mbedtls_mpi_free
 689              	.LVL102:
 690              	.L34:
 256:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 691              		.loc 1 256 5 view .LVU182
 257:.././crypto/mbedtls//library/rsa.c **** 
 692              		.loc 1 257 15 is_stmt 0 view .LVU183
 693 0200 2A4C     		ldr	r4, .L37
 694 0202 70E7     		b	.L22
 695              	.LVL103:
 696              	.L33:
 260:.././crypto/mbedtls//library/rsa.c **** 
 697              		.loc 1 260 9 is_stmt 1 view .LVU184
 260:.././crypto/mbedtls//library/rsa.c **** 
 698              		.loc 1 260 50 is_stmt 0 view .LVU185
 699 0204 294B     		ldr	r3, .L37
 700 0206 9C46     		mov	ip, r3
 701 0208 6444     		add	r4, r4, ip
 702              	.LVL104:
 260:.././crypto/mbedtls//library/rsa.c **** 
 703              		.loc 1 260 50 view .LVU186
 704 020a 6CE7     		b	.L22
 705              	.LVL105:
 706              	.L36:
 240:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DQ, &ctx->DQ ) != 0 ||
 707              		.loc 1 240 9 view .LVU187
 708 020c 2900     		movs	r1, r5
 709 020e 1FA8     		add	r0, sp, #124
 710 0210 4431     		adds	r1, r1, #68
 711 0212 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 712              	.LVL106:
 239:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DP, &ctx->DP ) != 0 ||
 713              		.loc 1 239 50 view .LVU188
 714 0216 0028     		cmp	r0, #0
 715 0218 CBD1     		bne	.L25
 241:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &QP, &ctx->QP ) != 0 ||
 716              		.loc 1 241 9 view .LVU189
 717 021a 2900     		movs	r1, r5
 718 021c 22A8     		add	r0, sp, #136
 719 021e 5031     		adds	r1, r1, #80
 720 0220 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 721              	.LVL107:
 240:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &DQ, &ctx->DQ ) != 0 ||
 722              		.loc 1 240 51 view .LVU190
 723 0224 0028     		cmp	r0, #0
 724 0226 C4D1     		bne	.L25
 242:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &L2, 0 ) != 0 ||
 725              		.loc 1 242 9 view .LVU191
 726 0228 2900     		movs	r1, r5
 727 022a 25A8     		add	r0, sp, #148
 728 022c 5C31     		adds	r1, r1, #92
 729 022e FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 730              	.LVL108:
 241:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &QP, &ctx->QP ) != 0 ||
 731              		.loc 1 241 51 view .LVU192
 732 0232 0028     		cmp	r0, #0
 733 0234 BDD1     		bne	.L25
 243:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &I, 1 ) != 0 ||
 734              		.loc 1 243 9 view .LVU193
 735 0236 0021     		movs	r1, #0
 736 0238 1CA8     		add	r0, sp, #112
 737 023a FFF7FEFF 		bl	mbedtls_mpi_cmp_int
 738              	.LVL109:
 242:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &L2, 0 ) != 0 ||
 739              		.loc 1 242 51 view .LVU194
 740 023e 0028     		cmp	r0, #0
 741 0240 B7D1     		bne	.L25
 244:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &G, 1 ) != 0 )
 742              		.loc 1 244 9 view .LVU195
 743 0242 0121     		movs	r1, #1
 744 0244 10A8     		add	r0, sp, #64
 745 0246 FFF7FEFF 		bl	mbedtls_mpi_cmp_int
 746              	.LVL110:
 243:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &I, 1 ) != 0 ||
 747              		.loc 1 243 44 view .LVU196
 748 024a 0028     		cmp	r0, #0
 749 024c B1D1     		bne	.L25
 245:.././crypto/mbedtls//library/rsa.c ****     {
 750              		.loc 1 245 9 view .LVU197
 751 024e 0121     		movs	r1, #1
 752 0250 13A8     		add	r0, sp, #76
 753 0252 FFF7FEFF 		bl	mbedtls_mpi_cmp_int
 754              	.LVL111:
 755 0256 041E     		subs	r4, r0, #0
 756              	.LVL112:
 244:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_int( &G, 1 ) != 0 )
 757              		.loc 1 244 43 view .LVU198
 758 0258 ABD1     		bne	.L25
 759              	.LVL113:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 760              		.loc 1 251 5 is_stmt 1 view .LVU199
 761 025a 01A8     		add	r0, sp, #4
 762 025c FFF7FEFF 		bl	mbedtls_mpi_free
 763              	.LVL114:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 764              		.loc 1 251 30 view .LVU200
 765 0260 04A8     		add	r0, sp, #16
 766 0262 FFF7FEFF 		bl	mbedtls_mpi_free
 767              	.LVL115:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 768              		.loc 1 251 55 view .LVU201
 769 0266 07A8     		add	r0, sp, #28
 770 0268 FFF7FEFF 		bl	mbedtls_mpi_free
 771              	.LVL116:
 251:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &H  ); mbedtls_mpi_free( &I  ); mbedtls_mpi_free( &G  ); mbedtls_mpi_free( &G
 772              		.loc 1 251 80 view .LVU202
 773 026c 0AA8     		add	r0, sp, #40
 774 026e FFF7FEFF 		bl	mbedtls_mpi_free
 775              	.LVL117:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 776              		.loc 1 252 5 view .LVU203
 777 0272 0DA8     		add	r0, sp, #52
 778 0274 FFF7FEFF 		bl	mbedtls_mpi_free
 779              	.LVL118:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 780              		.loc 1 252 30 view .LVU204
 781 0278 10A8     		add	r0, sp, #64
 782 027a FFF7FEFF 		bl	mbedtls_mpi_free
 783              	.LVL119:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 784              		.loc 1 252 55 view .LVU205
 785 027e 13A8     		add	r0, sp, #76
 786 0280 FFF7FEFF 		bl	mbedtls_mpi_free
 787              	.LVL120:
 252:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &L1 ); mbedtls_mpi_free( &L2 ); mbedtls_mpi_free( &DP ); mbedtls_mpi_free( &D
 788              		.loc 1 252 80 view .LVU206
 789 0284 16A8     		add	r0, sp, #88
 790 0286 FFF7FEFF 		bl	mbedtls_mpi_free
 791              	.LVL121:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 792              		.loc 1 253 5 view .LVU207
 793 028a 19A8     		add	r0, sp, #100
 794 028c FFF7FEFF 		bl	mbedtls_mpi_free
 795              	.LVL122:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 796              		.loc 1 253 30 view .LVU208
 797 0290 1CA8     		add	r0, sp, #112
 798 0292 FFF7FEFF 		bl	mbedtls_mpi_free
 799              	.LVL123:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 800              		.loc 1 253 55 view .LVU209
 801 0296 1FA8     		add	r0, sp, #124
 802 0298 FFF7FEFF 		bl	mbedtls_mpi_free
 803              	.LVL124:
 253:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &QP );
 804              		.loc 1 253 80 view .LVU210
 805 029c 22A8     		add	r0, sp, #136
 806 029e FFF7FEFF 		bl	mbedtls_mpi_free
 807              	.LVL125:
 254:.././crypto/mbedtls//library/rsa.c **** 
 808              		.loc 1 254 5 view .LVU211
 809 02a2 25A8     		add	r0, sp, #148
 810 02a4 FFF7FEFF 		bl	mbedtls_mpi_free
 811              	.LVL126:
 256:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 812              		.loc 1 256 5 view .LVU212
 259:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED + ret );
 813              		.loc 1 259 5 view .LVU213
 814 02a8 1DE7     		b	.L22
 815              	.L38:
 816 02aa C046     		.align	2
 817              	.L37:
 818 02ac 00BEFFFF 		.word	-16896
 819              	.LBE12:
 820              	.LBE13:
 821              		.cfi_endproc
 822              	.LFE17:
 824              		.section	.text.mbedtls_rsa_check_pub_priv,"ax",%progbits
 825              		.align	1
 826              		.p2align 2,,3
 827              		.global	mbedtls_rsa_check_pub_priv
 828              		.syntax unified
 829              		.code	16
 830              		.thumb_func
 831              		.fpu softvfp
 833              	mbedtls_rsa_check_pub_priv:
 834              	.LVL127:
 835              	.LFB18:
 264:.././crypto/mbedtls//library/rsa.c **** 
 265:.././crypto/mbedtls//library/rsa.c **** /*
 266:.././crypto/mbedtls//library/rsa.c ****  * Check if contexts holding a public and private key match
 267:.././crypto/mbedtls//library/rsa.c ****  */
 268:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_check_pub_priv( const mbedtls_rsa_context *pub, const mbedtls_rsa_context *prv )
 269:.././crypto/mbedtls//library/rsa.c **** {
 836              		.loc 1 269 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 270:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_rsa_check_pubkey( pub ) != 0 ||
 840              		.loc 1 270 5 view .LVU215
 269:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_rsa_check_pubkey( pub ) != 0 ||
 841              		.loc 1 269 1 is_stmt 0 view .LVU216
 842 0000 70B5     		push	{r4, r5, r6, lr}
 843              	.LCFI5:
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 4, -16
 846              		.cfi_offset 5, -12
 847              		.cfi_offset 6, -8
 848              		.cfi_offset 14, -4
 269:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_rsa_check_pubkey( pub ) != 0 ||
 849              		.loc 1 269 1 view .LVU217
 850 0002 0400     		movs	r4, r0
 851 0004 0D00     		movs	r5, r1
 852              		.loc 1 270 9 view .LVU218
 853 0006 FFF7FEFF 		bl	mbedtls_rsa_check_pubkey
 854              	.LVL128:
 855              		.loc 1 270 7 view .LVU219
 856 000a 0028     		cmp	r0, #0
 857 000c 15D1     		bne	.L40
 271:.././crypto/mbedtls//library/rsa.c ****         mbedtls_rsa_check_privkey( prv ) != 0 )
 858              		.loc 1 271 9 discriminator 1 view .LVU220
 859 000e 2800     		movs	r0, r5
 860 0010 FFF7FEFF 		bl	mbedtls_rsa_check_privkey
 861              	.LVL129:
 270:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_rsa_check_pubkey( pub ) != 0 ||
 862              		.loc 1 270 46 discriminator 1 view .LVU221
 863 0014 0028     		cmp	r0, #0
 864 0016 10D1     		bne	.L40
 272:.././crypto/mbedtls//library/rsa.c ****     {
 273:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 274:.././crypto/mbedtls//library/rsa.c ****     }
 275:.././crypto/mbedtls//library/rsa.c **** 
 276:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &pub->N, &prv->N ) != 0 ||
 865              		.loc 1 276 5 is_stmt 1 view .LVU222
 866              		.loc 1 276 9 is_stmt 0 view .LVU223
 867 0018 2900     		movs	r1, r5
 868 001a 2000     		movs	r0, r4
 869 001c 0831     		adds	r1, r1, #8
 870 001e 0830     		adds	r0, r0, #8
 871 0020 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 872              	.LVL130:
 873              		.loc 1 276 7 view .LVU224
 874 0024 0028     		cmp	r0, #0
 875 0026 08D1     		bne	.L40
 277:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &pub->E, &prv->E ) != 0 )
 876              		.loc 1 277 9 discriminator 1 view .LVU225
 877 0028 2900     		movs	r1, r5
 878 002a 2000     		movs	r0, r4
 879 002c 1431     		adds	r1, r1, #20
 880 002e 1430     		adds	r0, r0, #20
 881 0030 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 882              	.LVL131:
 276:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_cmp_mpi( &pub->E, &prv->E ) != 0 )
 883              		.loc 1 276 54 discriminator 1 view .LVU226
 884 0034 0028     		cmp	r0, #0
 885 0036 00D1     		bne	.L40
 886              	.L39:
 278:.././crypto/mbedtls//library/rsa.c ****     {
 279:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_CHECK_FAILED );
 280:.././crypto/mbedtls//library/rsa.c ****     }
 281:.././crypto/mbedtls//library/rsa.c **** 
 282:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 283:.././crypto/mbedtls//library/rsa.c **** }
 887              		.loc 1 283 1 view .LVU227
 888              		@ sp needed
 889              	.LVL132:
 890              	.LVL133:
 891              		.loc 1 283 1 view .LVU228
 892 0038 70BD     		pop	{r4, r5, r6, pc}
 893              	.LVL134:
 894              	.L40:
 279:.././crypto/mbedtls//library/rsa.c ****     }
 895              		.loc 1 279 15 view .LVU229
 896 003a 0148     		ldr	r0, .L45
 897 003c FCE7     		b	.L39
 898              	.L46:
 899 003e C046     		.align	2
 900              	.L45:
 901 0040 00BEFFFF 		.word	-16896
 902              		.cfi_endproc
 903              	.LFE18:
 905              		.section	.text.mbedtls_rsa_public,"ax",%progbits
 906              		.align	1
 907              		.p2align 2,,3
 908              		.global	mbedtls_rsa_public
 909              		.syntax unified
 910              		.code	16
 911              		.thumb_func
 912              		.fpu softvfp
 914              	mbedtls_rsa_public:
 915              	.LVL135:
 916              	.LFB19:
 284:.././crypto/mbedtls//library/rsa.c **** 
 285:.././crypto/mbedtls//library/rsa.c **** /*
 286:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA public key operation
 287:.././crypto/mbedtls//library/rsa.c ****  */
 288:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_public( mbedtls_rsa_context *ctx,
 289:.././crypto/mbedtls//library/rsa.c ****                 const unsigned char *input,
 290:.././crypto/mbedtls//library/rsa.c ****                 unsigned char *output )
 291:.././crypto/mbedtls//library/rsa.c **** {
 917              		.loc 1 291 1 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 16
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 292:.././crypto/mbedtls//library/rsa.c ****     int ret;
 921              		.loc 1 292 5 view .LVU231
 293:.././crypto/mbedtls//library/rsa.c ****     size_t olen;
 922              		.loc 1 293 5 view .LVU232
 294:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi T;
 923              		.loc 1 294 5 view .LVU233
 295:.././crypto/mbedtls//library/rsa.c **** 
 296:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &T );
 924              		.loc 1 296 5 view .LVU234
 291:.././crypto/mbedtls//library/rsa.c ****     int ret;
 925              		.loc 1 291 1 is_stmt 0 view .LVU235
 926 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 927              	.LCFI6:
 928              		.cfi_def_cfa_offset 20
 929              		.cfi_offset 4, -20
 930              		.cfi_offset 5, -16
 931              		.cfi_offset 6, -12
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 0C00     		movs	r4, r1
 935 0004 0500     		movs	r5, r0
 936 0006 87B0     		sub	sp, sp, #28
 937              	.LCFI7:
 938              		.cfi_def_cfa_offset 48
 939              		.loc 1 296 5 view .LVU236
 940 0008 03A8     		add	r0, sp, #12
 941              	.LVL136:
 291:.././crypto/mbedtls//library/rsa.c ****     int ret;
 942              		.loc 1 291 1 view .LVU237
 943 000a 1600     		movs	r6, r2
 944              		.loc 1 296 5 view .LVU238
 945 000c FFF7FEFF 		bl	mbedtls_mpi_init
 946              	.LVL137:
 297:.././crypto/mbedtls//library/rsa.c **** 
 298:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
 299:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_mutex_lock( &ctx->mutex ) ) != 0 )
 300:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 301:.././crypto/mbedtls//library/rsa.c **** #endif
 302:.././crypto/mbedtls//library/rsa.c **** 
 303:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_read_binary( &T, input, ctx->len ) );
 947              		.loc 1 303 5 is_stmt 1 view .LVU239
 948              		.loc 1 303 5 view .LVU240
 949 0010 2100     		movs	r1, r4
 950 0012 6A68     		ldr	r2, [r5, #4]
 951 0014 03A8     		add	r0, sp, #12
 952 0016 FFF7FEFF 		bl	mbedtls_mpi_read_binary
 953              	.LVL138:
 954 001a 041E     		subs	r4, r0, #0
 955              	.LVL139:
 956              		.loc 1 303 5 is_stmt 0 view .LVU241
 957 001c 08D0     		beq	.L56
 958              	.LVL140:
 959              	.L48:
 304:.././crypto/mbedtls//library/rsa.c **** 
 305:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 306:.././crypto/mbedtls//library/rsa.c ****     {
 307:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_MPI_BAD_INPUT_DATA;
 308:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 309:.././crypto/mbedtls//library/rsa.c ****     }
 310:.././crypto/mbedtls//library/rsa.c **** 
 311:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T, &T, &ctx->E, &ctx->N, &ctx->RN ) );
 313:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 960              		.loc 1 313 5 is_stmt 1 view .LVU242
 314:.././crypto/mbedtls//library/rsa.c **** 
 315:.././crypto/mbedtls//library/rsa.c **** cleanup:
 316:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
 317:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mutex_unlock( &ctx->mutex ) != 0 )
 318:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_THREADING_MUTEX_ERROR );
 319:.././crypto/mbedtls//library/rsa.c **** #endif
 320:.././crypto/mbedtls//library/rsa.c **** 
 321:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &T );
 961              		.loc 1 321 5 view .LVU243
 962 001e 03A8     		add	r0, sp, #12
 963              	.LVL141:
 964              		.loc 1 321 5 is_stmt 0 view .LVU244
 965 0020 FFF7FEFF 		bl	mbedtls_mpi_free
 966              	.LVL142:
 967              	.L55:
 322:.././crypto/mbedtls//library/rsa.c **** 
 323:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 968              		.loc 1 323 5 is_stmt 1 view .LVU245
 969 0024 154B     		ldr	r3, .L57
 970 0026 9C46     		mov	ip, r3
 971 0028 6444     		add	r4, r4, ip
 972              	.LVL143:
 973              	.L47:
 324:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PUBLIC_FAILED + ret );
 325:.././crypto/mbedtls//library/rsa.c **** 
 326:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 327:.././crypto/mbedtls//library/rsa.c **** }
 974              		.loc 1 327 1 is_stmt 0 view .LVU246
 975 002a 2000     		movs	r0, r4
 976 002c 07B0     		add	sp, sp, #28
 977              		@ sp needed
 978              	.LVL144:
 979              		.loc 1 327 1 view .LVU247
 980 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 981              	.LVL145:
 982              	.L56:
 303:.././crypto/mbedtls//library/rsa.c **** 
 983              		.loc 1 303 5 is_stmt 1 discriminator 2 view .LVU248
 305:.././crypto/mbedtls//library/rsa.c ****     {
 984              		.loc 1 305 5 discriminator 2 view .LVU249
 305:.././crypto/mbedtls//library/rsa.c ****     {
 985              		.loc 1 305 34 is_stmt 0 discriminator 2 view .LVU250
 986 0030 2C00     		movs	r4, r5
 987 0032 0834     		adds	r4, r4, #8
 305:.././crypto/mbedtls//library/rsa.c ****     {
 988              		.loc 1 305 9 discriminator 2 view .LVU251
 989 0034 2100     		movs	r1, r4
 990 0036 03A8     		add	r0, sp, #12
 991              	.LVL146:
 305:.././crypto/mbedtls//library/rsa.c ****     {
 992              		.loc 1 305 9 discriminator 2 view .LVU252
 993 0038 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 994              	.LVL147:
 305:.././crypto/mbedtls//library/rsa.c ****     {
 995              		.loc 1 305 7 discriminator 2 view .LVU253
 996 003c 0028     		cmp	r0, #0
 997 003e 04DB     		blt	.L49
 998              	.LVL148:
 313:.././crypto/mbedtls//library/rsa.c **** 
 999              		.loc 1 313 5 is_stmt 1 view .LVU254
 321:.././crypto/mbedtls//library/rsa.c **** 
 1000              		.loc 1 321 5 view .LVU255
 1001 0040 03A8     		add	r0, sp, #12
 1002 0042 FFF7FEFF 		bl	mbedtls_mpi_free
 1003              	.LVL149:
 323:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PUBLIC_FAILED + ret );
 1004              		.loc 1 323 5 view .LVU256
 321:.././crypto/mbedtls//library/rsa.c **** 
 1005              		.loc 1 321 5 is_stmt 0 view .LVU257
 1006 0046 0E4C     		ldr	r4, .L57+4
 1007 0048 EFE7     		b	.L47
 1008              	.LVL150:
 1009              	.L49:
 311:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T, &T, &ctx->E, &ctx->N, &ctx->RN ) );
 1010              		.loc 1 311 5 is_stmt 1 view .LVU258
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1011              		.loc 1 312 5 is_stmt 0 view .LVU259
 1012 004a 2A00     		movs	r2, r5
 311:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T, &T, &ctx->E, &ctx->N, &ctx->RN ) );
 1013              		.loc 1 311 10 view .LVU260
 1014 004c 6F68     		ldr	r7, [r5, #4]
 1015              	.LVL151:
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1016              		.loc 1 312 5 is_stmt 1 view .LVU261
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1017              		.loc 1 312 5 view .LVU262
 1018 004e 03A9     		add	r1, sp, #12
 1019 0050 6835     		adds	r5, r5, #104
 1020              	.LVL152:
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1021              		.loc 1 312 5 is_stmt 0 view .LVU263
 1022 0052 2300     		movs	r3, r4
 1023 0054 0800     		movs	r0, r1
 1024 0056 1432     		adds	r2, r2, #20
 1025 0058 0095     		str	r5, [sp]
 1026 005a FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 1027              	.LVL153:
 1028 005e 041E     		subs	r4, r0, #0
 1029              	.LVL154:
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1030              		.loc 1 312 5 view .LVU264
 1031 0060 DDD1     		bne	.L48
 312:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1032              		.loc 1 312 5 is_stmt 1 discriminator 2 view .LVU265
 313:.././crypto/mbedtls//library/rsa.c **** 
 1033              		.loc 1 313 5 discriminator 2 view .LVU266
 313:.././crypto/mbedtls//library/rsa.c **** 
 1034              		.loc 1 313 5 discriminator 2 view .LVU267
 1035 0062 3A00     		movs	r2, r7
 1036 0064 3100     		movs	r1, r6
 1037 0066 03A8     		add	r0, sp, #12
 1038              	.LVL155:
 313:.././crypto/mbedtls//library/rsa.c **** 
 1039              		.loc 1 313 5 is_stmt 0 discriminator 2 view .LVU268
 1040 0068 FFF7FEFF 		bl	mbedtls_mpi_write_binary
 1041              	.LVL156:
 1042 006c 0400     		movs	r4, r0
 1043              	.LVL157:
 1044              	.LDL1:
 313:.././crypto/mbedtls//library/rsa.c **** 
 1045              		.loc 1 313 5 is_stmt 1 discriminator 2 view .LVU269
 321:.././crypto/mbedtls//library/rsa.c **** 
 1046              		.loc 1 321 5 discriminator 2 view .LVU270
 1047 006e 03A8     		add	r0, sp, #12
 1048              	.LVL158:
 321:.././crypto/mbedtls//library/rsa.c **** 
 1049              		.loc 1 321 5 is_stmt 0 discriminator 2 view .LVU271
 1050 0070 FFF7FEFF 		bl	mbedtls_mpi_free
 1051              	.LVL159:
 323:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PUBLIC_FAILED + ret );
 1052              		.loc 1 323 5 is_stmt 1 discriminator 2 view .LVU272
 323:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PUBLIC_FAILED + ret );
 1053              		.loc 1 323 7 is_stmt 0 discriminator 2 view .LVU273
 1054 0074 002C     		cmp	r4, #0
 1055 0076 D8D0     		beq	.L47
 1056 0078 D4E7     		b	.L55
 1057              	.L58:
 1058 007a C046     		.align	2
 1059              	.L57:
 1060 007c 80BDFFFF 		.word	-17024
 1061 0080 7CBDFFFF 		.word	-17028
 1062              		.cfi_endproc
 1063              	.LFE19:
 1065              		.section	.text.mbedtls_rsa_private,"ax",%progbits
 1066              		.align	1
 1067              		.p2align 2,,3
 1068              		.global	mbedtls_rsa_private
 1069              		.syntax unified
 1070              		.code	16
 1071              		.thumb_func
 1072              		.fpu softvfp
 1074              	mbedtls_rsa_private:
 1075              	.LVL160:
 1076              	.LFB21:
 328:.././crypto/mbedtls//library/rsa.c **** 
 329:.././crypto/mbedtls//library/rsa.c **** /*
 330:.././crypto/mbedtls//library/rsa.c ****  * Generate or update blinding values, see section 10 of:
 331:.././crypto/mbedtls//library/rsa.c ****  *  KOCHER, Paul C. Timing attacks on implementations of Diffie-Hellman, RSA,
 332:.././crypto/mbedtls//library/rsa.c ****  *  DSS, and other systems. In : Advances in Cryptology-CRYPTO'96. Springer
 333:.././crypto/mbedtls//library/rsa.c ****  *  Berlin Heidelberg, 1996. p. 104-113.
 334:.././crypto/mbedtls//library/rsa.c ****  */
 335:.././crypto/mbedtls//library/rsa.c **** static int rsa_prepare_blinding( mbedtls_rsa_context *ctx,
 336:.././crypto/mbedtls//library/rsa.c ****                  int (*f_rng)(void *, unsigned char *, size_t), void *p_rng )
 337:.././crypto/mbedtls//library/rsa.c **** {
 338:.././crypto/mbedtls//library/rsa.c ****     int ret, count = 0;
 339:.././crypto/mbedtls//library/rsa.c **** 
 340:.././crypto/mbedtls//library/rsa.c ****     if( ctx->Vf.p != NULL )
 341:.././crypto/mbedtls//library/rsa.c ****     {
 342:.././crypto/mbedtls//library/rsa.c ****         /* We already have blinding values, just update them by squaring */
 343:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vi, &ctx->Vi, &ctx->Vi ) );
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vi, &ctx->Vi, &ctx->N ) );
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 346:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 347:.././crypto/mbedtls//library/rsa.c **** 
 348:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 349:.././crypto/mbedtls//library/rsa.c ****     }
 350:.././crypto/mbedtls//library/rsa.c **** 
 351:.././crypto/mbedtls//library/rsa.c ****     /* Unblinding value: Vf = random number, invertible mod N */
 352:.././crypto/mbedtls//library/rsa.c ****     do {
 353:.././crypto/mbedtls//library/rsa.c ****         if( count++ > 10 )
 354:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 355:.././crypto/mbedtls//library/rsa.c **** 
 356:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_fill_random( &ctx->Vf, ctx->len - 1, f_rng, p_rng ) );
 357:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 358:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 359:.././crypto/mbedtls//library/rsa.c **** 
 360:.././crypto/mbedtls//library/rsa.c ****     /* Blinding value: Vi =  Vf^(-e) mod N */
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 362:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 363:.././crypto/mbedtls//library/rsa.c **** 
 364:.././crypto/mbedtls//library/rsa.c **** 
 365:.././crypto/mbedtls//library/rsa.c **** cleanup:
 366:.././crypto/mbedtls//library/rsa.c ****     return( ret );
 367:.././crypto/mbedtls//library/rsa.c **** }
 368:.././crypto/mbedtls//library/rsa.c **** 
 369:.././crypto/mbedtls//library/rsa.c **** /*
 370:.././crypto/mbedtls//library/rsa.c ****  * Exponent blinding supposed to prevent side-channel attacks using multiple
 371:.././crypto/mbedtls//library/rsa.c ****  * traces of measurements to recover the RSA key. The more collisions are there,
 372:.././crypto/mbedtls//library/rsa.c ****  * the more bits of the key can be recovered. See [3].
 373:.././crypto/mbedtls//library/rsa.c ****  *
 374:.././crypto/mbedtls//library/rsa.c ****  * Collecting n collisions with m bit long blinding value requires 2^(m-m/n)
 375:.././crypto/mbedtls//library/rsa.c ****  * observations on avarage.
 376:.././crypto/mbedtls//library/rsa.c ****  *
 377:.././crypto/mbedtls//library/rsa.c ****  * For example with 28 byte blinding to achieve 2 collisions the adversary has
 378:.././crypto/mbedtls//library/rsa.c ****  * to make 2^112 observations on avarage.
 379:.././crypto/mbedtls//library/rsa.c ****  *
 380:.././crypto/mbedtls//library/rsa.c ****  * (With the currently (as of 2017 April) known best algorithms breaking 2048
 381:.././crypto/mbedtls//library/rsa.c ****  * bit RSA requires approximately as much time as trying out 2^112 random keys.
 382:.././crypto/mbedtls//library/rsa.c ****  * Thus in this sense with 28 byte blinding the security is not reduced by
 383:.././crypto/mbedtls//library/rsa.c ****  * side-channel attacks like the one in [3])
 384:.././crypto/mbedtls//library/rsa.c ****  *
 385:.././crypto/mbedtls//library/rsa.c ****  * This countermeasure does not help if the key recovery is possible with a
 386:.././crypto/mbedtls//library/rsa.c ****  * single trace.
 387:.././crypto/mbedtls//library/rsa.c ****  */
 388:.././crypto/mbedtls//library/rsa.c **** #define RSA_EXPONENT_BLINDING 28
 389:.././crypto/mbedtls//library/rsa.c **** 
 390:.././crypto/mbedtls//library/rsa.c **** /*
 391:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA private key operation
 392:.././crypto/mbedtls//library/rsa.c ****  */
 393:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_private( mbedtls_rsa_context *ctx,
 394:.././crypto/mbedtls//library/rsa.c ****                  int (*f_rng)(void *, unsigned char *, size_t),
 395:.././crypto/mbedtls//library/rsa.c ****                  void *p_rng,
 396:.././crypto/mbedtls//library/rsa.c ****                  const unsigned char *input,
 397:.././crypto/mbedtls//library/rsa.c ****                  unsigned char *output )
 398:.././crypto/mbedtls//library/rsa.c **** {
 1077              		.loc 1 398 1 is_stmt 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 4, pretend = 0, frame = 112
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 399:.././crypto/mbedtls//library/rsa.c ****     int ret;
 1081              		.loc 1 399 5 view .LVU275
 400:.././crypto/mbedtls//library/rsa.c ****     size_t olen;
 1082              		.loc 1 400 5 view .LVU276
 401:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi T, T1, T2;
 1083              		.loc 1 401 5 view .LVU277
 402:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi P1, Q1, R;
 1084              		.loc 1 402 5 view .LVU278
 403:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_NO_CRT)
 404:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi D_blind;
 405:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi *D = &ctx->D;
 406:.././crypto/mbedtls//library/rsa.c **** #else
 407:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi DP_blind, DQ_blind;
 1085              		.loc 1 407 5 view .LVU279
 408:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi *DP = &ctx->DP;
 1086              		.loc 1 408 5 view .LVU280
 409:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi *DQ = &ctx->DQ;
 1087              		.loc 1 409 5 view .LVU281
 410:.././crypto/mbedtls//library/rsa.c **** #endif
 411:.././crypto/mbedtls//library/rsa.c **** 
 412:.././crypto/mbedtls//library/rsa.c ****     /* Make sure we have private key info, prevent possible misuse */
 413:.././crypto/mbedtls//library/rsa.c ****     if( ctx->P.p == NULL || ctx->Q.p == NULL || ctx->D.p == NULL )
 1088              		.loc 1 413 5 view .LVU282
 398:.././crypto/mbedtls//library/rsa.c ****     int ret;
 1089              		.loc 1 398 1 is_stmt 0 view .LVU283
 1090 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1091              	.LCFI8:
 1092              		.cfi_def_cfa_offset 20
 1093              		.cfi_offset 4, -20
 1094              		.cfi_offset 5, -16
 1095              		.cfi_offset 6, -12
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 4E46     		mov	r6, r9
 1099 0004 4546     		mov	r5, r8
 1100 0006 DE46     		mov	lr, fp
 1101 0008 5746     		mov	r7, r10
 1102 000a E0B5     		push	{r5, r6, r7, lr}
 1103              	.LCFI9:
 1104              		.cfi_def_cfa_offset 36
 1105              		.cfi_offset 8, -36
 1106              		.cfi_offset 9, -32
 1107              		.cfi_offset 10, -28
 1108              		.cfi_offset 11, -24
 1109 000c 1C00     		movs	r4, r3
 1110              		.loc 1 413 7 view .LVU284
 1111 000e 436B     		ldr	r3, [r0, #52]
 1112              	.LVL161:
 398:.././crypto/mbedtls//library/rsa.c ****     int ret;
 1113              		.loc 1 398 1 view .LVU285
 1114 0010 9FB0     		sub	sp, sp, #124
 1115              	.LCFI10:
 1116              		.cfi_def_cfa_offset 160
 398:.././crypto/mbedtls//library/rsa.c ****     int ret;
 1117              		.loc 1 398 1 view .LVU286
 1118 0012 0500     		movs	r5, r0
 1119 0014 0E00     		movs	r6, r1
 1120 0016 0292     		str	r2, [sp, #8]
 1121              		.loc 1 413 7 view .LVU287
 1122 0018 002B     		cmp	r3, #0
 1123 001a 00D1     		bne	.LCB943
 1124 001c 11E2     		b	.L91	@long jump
 1125              	.LCB943:
 1126              		.loc 1 413 26 discriminator 1 view .LVU288
 1127 001e 036C     		ldr	r3, [r0, #64]
 1128 0020 002B     		cmp	r3, #0
 1129 0022 00D1     		bne	.LCB947
 1130 0024 0DE2     		b	.L91	@long jump
 1131              	.LCB947:
 1132              		.loc 1 413 46 discriminator 2 view .LVU289
 1133 0026 836A     		ldr	r3, [r0, #40]
 1134 0028 002B     		cmp	r3, #0
 1135 002a 00D1     		bne	.LCB951
 1136 002c 09E2     		b	.L91	@long jump
 1137              	.LCB951:
 414:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 415:.././crypto/mbedtls//library/rsa.c **** 
 416:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &T ); mbedtls_mpi_init( &T1 ); mbedtls_mpi_init( &T2 );
 1138              		.loc 1 416 5 is_stmt 1 view .LVU290
 1139 002e 06A8     		add	r0, sp, #24
 1140              	.LVL162:
 1141              		.loc 1 416 5 is_stmt 0 view .LVU291
 1142 0030 FFF7FEFF 		bl	mbedtls_mpi_init
 1143              	.LVL163:
 1144              		.loc 1 416 29 is_stmt 1 view .LVU292
 1145 0034 09A8     		add	r0, sp, #36
 1146 0036 FFF7FEFF 		bl	mbedtls_mpi_init
 1147              	.LVL164:
 1148              		.loc 1 416 54 view .LVU293
 1149 003a 0CA8     		add	r0, sp, #48
 1150 003c FFF7FEFF 		bl	mbedtls_mpi_init
 1151              	.LVL165:
 417:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &P1 ); mbedtls_mpi_init( &Q1 ); mbedtls_mpi_init( &R );
 1152              		.loc 1 417 5 view .LVU294
 1153 0040 0FA8     		add	r0, sp, #60
 1154 0042 FFF7FEFF 		bl	mbedtls_mpi_init
 1155              	.LVL166:
 1156              		.loc 1 417 30 view .LVU295
 1157 0046 12A8     		add	r0, sp, #72
 1158 0048 FFF7FEFF 		bl	mbedtls_mpi_init
 1159              	.LVL167:
 1160              		.loc 1 417 55 view .LVU296
 1161 004c 15A8     		add	r0, sp, #84
 1162 004e FFF7FEFF 		bl	mbedtls_mpi_init
 1163              	.LVL168:
 418:.././crypto/mbedtls//library/rsa.c **** 
 419:.././crypto/mbedtls//library/rsa.c **** 
 420:.././crypto/mbedtls//library/rsa.c ****     if( f_rng != NULL )
 1164              		.loc 1 420 5 view .LVU297
 1165              		.loc 1 420 7 is_stmt 0 view .LVU298
 1166 0052 002E     		cmp	r6, #0
 1167 0054 59D0     		beq	.L61
 421:.././crypto/mbedtls//library/rsa.c ****     {
 422:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_NO_CRT)
 423:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_init( &D_blind );
 424:.././crypto/mbedtls//library/rsa.c **** #else
 425:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_init( &DP_blind );
 1168              		.loc 1 425 9 is_stmt 1 view .LVU299
 1169 0056 18AB     		add	r3, sp, #96
 1170 0058 1800     		movs	r0, r3
 1171 005a 9946     		mov	r9, r3
 1172 005c FFF7FEFF 		bl	mbedtls_mpi_init
 1173              	.LVL169:
 426:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_init( &DQ_blind );
 1174              		.loc 1 426 9 view .LVU300
 1175 0060 1BAB     		add	r3, sp, #108
 1176 0062 1800     		movs	r0, r3
 1177 0064 9A46     		mov	r10, r3
 1178 0066 FFF7FEFF 		bl	mbedtls_mpi_init
 1179              	.LVL170:
 427:.././crypto/mbedtls//library/rsa.c **** #endif
 428:.././crypto/mbedtls//library/rsa.c ****     }
 429:.././crypto/mbedtls//library/rsa.c **** 
 430:.././crypto/mbedtls//library/rsa.c **** 
 431:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
 432:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_mutex_lock( &ctx->mutex ) ) != 0 )
 433:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 434:.././crypto/mbedtls//library/rsa.c **** #endif
 435:.././crypto/mbedtls//library/rsa.c **** 
 436:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_read_binary( &T, input, ctx->len ) );
 1180              		.loc 1 436 5 view .LVU301
 1181              		.loc 1 436 5 view .LVU302
 1182 006a 2100     		movs	r1, r4
 1183 006c 6A68     		ldr	r2, [r5, #4]
 1184 006e 06A8     		add	r0, sp, #24
 1185 0070 FFF7FEFF 		bl	mbedtls_mpi_read_binary
 1186              	.LVL171:
 1187 0074 041E     		subs	r4, r0, #0
 1188              	.LVL172:
 1189              		.loc 1 436 5 is_stmt 0 view .LVU303
 1190 0076 21D0     		beq	.L111
 1191              	.LVL173:
 1192              	.L81:
 437:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 438:.././crypto/mbedtls//library/rsa.c ****     {
 439:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_MPI_BAD_INPUT_DATA;
 440:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 441:.././crypto/mbedtls//library/rsa.c ****     }
 442:.././crypto/mbedtls//library/rsa.c **** 
 443:.././crypto/mbedtls//library/rsa.c ****     if( f_rng != NULL )
 444:.././crypto/mbedtls//library/rsa.c ****     {
 445:.././crypto/mbedtls//library/rsa.c ****         /*
 446:.././crypto/mbedtls//library/rsa.c ****          * Blinding
 447:.././crypto/mbedtls//library/rsa.c ****          * T = T * Vi mod N
 448:.././crypto/mbedtls//library/rsa.c ****          */
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( rsa_prepare_blinding( ctx, f_rng, p_rng ) );
 450:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 451:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 452:.././crypto/mbedtls//library/rsa.c **** 
 453:.././crypto/mbedtls//library/rsa.c ****         /*
 454:.././crypto/mbedtls//library/rsa.c ****          * Exponent blinding
 455:.././crypto/mbedtls//library/rsa.c ****          */
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &P1, &ctx->P, 1 ) );
 457:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 458:.././crypto/mbedtls//library/rsa.c **** 
 459:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_NO_CRT)
 460:.././crypto/mbedtls//library/rsa.c ****         /*
 461:.././crypto/mbedtls//library/rsa.c ****          * D_blind = ( P - 1 ) * ( Q - 1 ) * R + D
 462:.././crypto/mbedtls//library/rsa.c ****          */
 463:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_fill_random( &R, RSA_EXPONENT_BLINDING,
 464:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 465:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &D_blind, &P1, &Q1 ) );
 466:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &D_blind, &D_blind, &R ) );
 467:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &D_blind, &D_blind, &ctx->D ) );
 468:.././crypto/mbedtls//library/rsa.c **** 
 469:.././crypto/mbedtls//library/rsa.c ****         D = &D_blind;
 470:.././crypto/mbedtls//library/rsa.c **** #else
 471:.././crypto/mbedtls//library/rsa.c ****         /*
 472:.././crypto/mbedtls//library/rsa.c ****          * DP_blind = ( P - 1 ) * R + DP
 473:.././crypto/mbedtls//library/rsa.c ****          */
 474:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_fill_random( &R, RSA_EXPONENT_BLINDING,
 475:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &DP_blind, &P1, &R ) );
 477:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 478:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 479:.././crypto/mbedtls//library/rsa.c **** 
 480:.././crypto/mbedtls//library/rsa.c ****         DP = &DP_blind;
 481:.././crypto/mbedtls//library/rsa.c **** 
 482:.././crypto/mbedtls//library/rsa.c ****         /*
 483:.././crypto/mbedtls//library/rsa.c ****          * DQ_blind = ( Q - 1 ) * R + DQ
 484:.././crypto/mbedtls//library/rsa.c ****          */
 485:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_fill_random( &R, RSA_EXPONENT_BLINDING,
 486:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &DQ_blind, &Q1, &R ) );
 488:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 489:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DQ ) );
 490:.././crypto/mbedtls//library/rsa.c **** 
 491:.././crypto/mbedtls//library/rsa.c ****         DQ = &DQ_blind;
 492:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 493:.././crypto/mbedtls//library/rsa.c ****     }
 494:.././crypto/mbedtls//library/rsa.c **** 
 495:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_NO_CRT)
 496:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T, &T, D, &ctx->N, &ctx->RN ) );
 497:.././crypto/mbedtls//library/rsa.c **** #else
 498:.././crypto/mbedtls//library/rsa.c ****     /*
 499:.././crypto/mbedtls//library/rsa.c ****      * Faster decryption using the CRT
 500:.././crypto/mbedtls//library/rsa.c ****      *
 501:.././crypto/mbedtls//library/rsa.c ****      * T1 = input ^ dP mod P
 502:.././crypto/mbedtls//library/rsa.c ****      * T2 = input ^ dQ mod Q
 503:.././crypto/mbedtls//library/rsa.c ****      */
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T1, &T, DP, &ctx->P, &ctx->RP ) );
 505:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 506:.././crypto/mbedtls//library/rsa.c **** 
 507:.././crypto/mbedtls//library/rsa.c ****     /*
 508:.././crypto/mbedtls//library/rsa.c ****      * T = (T1 - T2) * (Q^-1 mod P) mod P
 509:.././crypto/mbedtls//library/rsa.c ****      */
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_sub_mpi( &T, &T1, &T2 ) );
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 512:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 513:.././crypto/mbedtls//library/rsa.c **** 
 514:.././crypto/mbedtls//library/rsa.c ****     /*
 515:.././crypto/mbedtls//library/rsa.c ****      * T = T2 + T * Q
 516:.././crypto/mbedtls//library/rsa.c ****      */
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->Q ) );
 518:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 519:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 520:.././crypto/mbedtls//library/rsa.c **** 
 521:.././crypto/mbedtls//library/rsa.c ****     if( f_rng != NULL )
 522:.././crypto/mbedtls//library/rsa.c ****     {
 523:.././crypto/mbedtls//library/rsa.c ****         /*
 524:.././crypto/mbedtls//library/rsa.c ****          * Unblind
 525:.././crypto/mbedtls//library/rsa.c ****          * T = T * Vf mod N
 526:.././crypto/mbedtls//library/rsa.c ****          */
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vf ) );
 528:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 529:.././crypto/mbedtls//library/rsa.c ****     }
 530:.././crypto/mbedtls//library/rsa.c **** 
 531:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
 532:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1193              		.loc 1 532 5 is_stmt 1 view .LVU304
 533:.././crypto/mbedtls//library/rsa.c **** 
 534:.././crypto/mbedtls//library/rsa.c **** cleanup:
 535:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
 536:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mutex_unlock( &ctx->mutex ) != 0 )
 537:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_THREADING_MUTEX_ERROR );
 538:.././crypto/mbedtls//library/rsa.c **** #endif
 539:.././crypto/mbedtls//library/rsa.c **** 
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &T ); mbedtls_mpi_free( &T1 ); mbedtls_mpi_free( &T2 );
 1194              		.loc 1 540 5 view .LVU305
 1195 0078 06A8     		add	r0, sp, #24
 1196 007a FFF7FEFF 		bl	mbedtls_mpi_free
 1197              	.LVL174:
 1198              		.loc 1 540 29 view .LVU306
 1199 007e 09A8     		add	r0, sp, #36
 1200 0080 FFF7FEFF 		bl	mbedtls_mpi_free
 1201              	.LVL175:
 1202              		.loc 1 540 54 view .LVU307
 1203 0084 0CA8     		add	r0, sp, #48
 1204 0086 FFF7FEFF 		bl	mbedtls_mpi_free
 1205              	.LVL176:
 541:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1206              		.loc 1 541 5 view .LVU308
 1207 008a 0FA8     		add	r0, sp, #60
 1208 008c FFF7FEFF 		bl	mbedtls_mpi_free
 1209              	.LVL177:
 1210              		.loc 1 541 30 view .LVU309
 1211 0090 12A8     		add	r0, sp, #72
 1212 0092 FFF7FEFF 		bl	mbedtls_mpi_free
 1213              	.LVL178:
 1214              		.loc 1 541 55 view .LVU310
 1215 0096 15A8     		add	r0, sp, #84
 1216 0098 FFF7FEFF 		bl	mbedtls_mpi_free
 1217              	.LVL179:
 542:.././crypto/mbedtls//library/rsa.c **** 
 543:.././crypto/mbedtls//library/rsa.c ****     if( f_rng != NULL )
 1218              		.loc 1 543 5 view .LVU311
 1219              	.L71:
 544:.././crypto/mbedtls//library/rsa.c ****     {
 545:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_RSA_NO_CRT)
 546:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_free( &D_blind );
 547:.././crypto/mbedtls//library/rsa.c **** #else
 548:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_free( &DP_blind );
 1220              		.loc 1 548 9 view .LVU312
 1221 009c 4846     		mov	r0, r9
 1222 009e FFF7FEFF 		bl	mbedtls_mpi_free
 1223              	.LVL180:
 549:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_free( &DQ_blind );
 1224              		.loc 1 549 9 view .LVU313
 1225 00a2 5046     		mov	r0, r10
 1226 00a4 FFF7FEFF 		bl	mbedtls_mpi_free
 1227              	.LVL181:
 1228              	.L73:
 550:.././crypto/mbedtls//library/rsa.c **** #endif
 551:.././crypto/mbedtls//library/rsa.c ****     }
 552:.././crypto/mbedtls//library/rsa.c **** 
 553:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 1229              		.loc 1 553 5 view .LVU314
 1230              		.loc 1 553 7 is_stmt 0 view .LVU315
 1231 00a8 002C     		cmp	r4, #0
 1232 00aa 2AD1     		bne	.L72
 1233              	.LVL182:
 1234              	.L59:
 554:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PRIVATE_FAILED + ret );
 555:.././crypto/mbedtls//library/rsa.c **** 
 556:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
 557:.././crypto/mbedtls//library/rsa.c **** }
 1235              		.loc 1 557 1 view .LVU316
 1236 00ac 2000     		movs	r0, r4
 1237 00ae 1FB0     		add	sp, sp, #124
 1238              		@ sp needed
 1239 00b0 3CBC     		pop	{r2, r3, r4, r5}
 1240 00b2 9046     		mov	r8, r2
 1241 00b4 9946     		mov	r9, r3
 1242 00b6 A246     		mov	r10, r4
 1243 00b8 AB46     		mov	fp, r5
 1244 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1245              	.LVL183:
 1246              	.L111:
 436:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 1247              		.loc 1 436 5 is_stmt 1 view .LVU317
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1248              		.loc 1 437 5 view .LVU318
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1249              		.loc 1 437 34 is_stmt 0 view .LVU319
 1250 00bc 0823     		movs	r3, #8
 1251 00be 9846     		mov	r8, r3
 1252 00c0 A844     		add	r8, r8, r5
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1253              		.loc 1 437 9 view .LVU320
 1254 00c2 4146     		mov	r1, r8
 1255 00c4 06A8     		add	r0, sp, #24
 1256              	.LVL184:
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1257              		.loc 1 437 9 view .LVU321
 1258 00c6 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 1259              	.LVL185:
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1260              		.loc 1 437 7 view .LVU322
 1261 00ca 0028     		cmp	r0, #0
 1262 00cc 56DB     		blt	.L112
 1263              	.LVL186:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1264              		.loc 1 532 5 is_stmt 1 view .LVU323
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1265              		.loc 1 540 5 view .LVU324
 1266 00ce 06A8     		add	r0, sp, #24
 1267 00d0 FFF7FEFF 		bl	mbedtls_mpi_free
 1268              	.LVL187:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1269              		.loc 1 540 29 view .LVU325
 1270 00d4 09A8     		add	r0, sp, #36
 1271 00d6 FFF7FEFF 		bl	mbedtls_mpi_free
 1272              	.LVL188:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1273              		.loc 1 540 54 view .LVU326
 1274 00da 0CA8     		add	r0, sp, #48
 1275 00dc FFF7FEFF 		bl	mbedtls_mpi_free
 1276              	.LVL189:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1277              		.loc 1 541 5 view .LVU327
 1278 00e0 0FA8     		add	r0, sp, #60
 1279 00e2 FFF7FEFF 		bl	mbedtls_mpi_free
 1280              	.LVL190:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1281              		.loc 1 541 30 view .LVU328
 1282 00e6 12A8     		add	r0, sp, #72
 1283 00e8 FFF7FEFF 		bl	mbedtls_mpi_free
 1284              	.LVL191:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1285              		.loc 1 541 55 view .LVU329
 1286 00ec 15A8     		add	r0, sp, #84
 1287 00ee FFF7FEFF 		bl	mbedtls_mpi_free
 1288              	.LVL192:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 1289              		.loc 1 543 5 view .LVU330
 548:.././crypto/mbedtls//library/rsa.c ****         mbedtls_mpi_free( &DQ_blind );
 1290              		.loc 1 548 9 view .LVU331
 1291 00f2 4846     		mov	r0, r9
 1292 00f4 FFF7FEFF 		bl	mbedtls_mpi_free
 1293              	.LVL193:
 549:.././crypto/mbedtls//library/rsa.c **** #endif
 1294              		.loc 1 549 9 view .LVU332
 439:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 1295              		.loc 1 439 13 is_stmt 0 view .LVU333
 1296 00f8 0424     		movs	r4, #4
 549:.././crypto/mbedtls//library/rsa.c **** #endif
 1297              		.loc 1 549 9 view .LVU334
 1298 00fa 5046     		mov	r0, r10
 1299 00fc FFF7FEFF 		bl	mbedtls_mpi_free
 1300              	.LVL194:
 553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_PRIVATE_FAILED + ret );
 1301              		.loc 1 553 5 is_stmt 1 view .LVU335
 439:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 1302              		.loc 1 439 13 is_stmt 0 view .LVU336
 1303 0100 6442     		rsbs	r4, r4, #0
 1304              	.LVL195:
 1305              	.L72:
 554:.././crypto/mbedtls//library/rsa.c **** 
 1306              		.loc 1 554 9 is_stmt 1 view .LVU337
 554:.././crypto/mbedtls//library/rsa.c **** 
 1307              		.loc 1 554 48 is_stmt 0 view .LVU338
 1308 0102 D14B     		ldr	r3, .L117
 1309 0104 9C46     		mov	ip, r3
 1310 0106 6444     		add	r4, r4, ip
 1311 0108 D0E7     		b	.L59
 1312              	.LVL196:
 1313              	.L61:
 436:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 1314              		.loc 1 436 5 is_stmt 1 view .LVU339
 436:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 1315              		.loc 1 436 5 view .LVU340
 1316 010a 2100     		movs	r1, r4
 1317 010c 6A68     		ldr	r2, [r5, #4]
 1318 010e 06A8     		add	r0, sp, #24
 1319 0110 FFF7FEFF 		bl	mbedtls_mpi_read_binary
 1320              	.LVL197:
 1321 0114 041E     		subs	r4, r0, #0
 1322              	.LVL198:
 436:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 1323              		.loc 1 436 5 is_stmt 0 view .LVU341
 1324 0116 1BD1     		bne	.L79
 436:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_mpi_cmp_mpi( &T, &ctx->N ) >= 0 )
 1325              		.loc 1 436 5 is_stmt 1 view .LVU342
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1326              		.loc 1 437 5 view .LVU343
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1327              		.loc 1 437 34 is_stmt 0 view .LVU344
 1328 0118 0823     		movs	r3, #8
 1329 011a 9846     		mov	r8, r3
 1330 011c A844     		add	r8, r8, r5
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1331              		.loc 1 437 9 view .LVU345
 1332 011e 4146     		mov	r1, r8
 1333 0120 06A8     		add	r0, sp, #24
 1334              	.LVL199:
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1335              		.loc 1 437 9 view .LVU346
 1336 0122 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 1337              	.LVL200:
 437:.././crypto/mbedtls//library/rsa.c ****     {
 1338              		.loc 1 437 7 view .LVU347
 1339 0126 0028     		cmp	r0, #0
 1340 0128 00DB     		blt	.LCB1160
 1341 012a 59E1     		b	.L113	@long jump
 1342              	.LCB1160:
 409:.././crypto/mbedtls//library/rsa.c **** #endif
 1343              		.loc 1 409 18 view .LVU348
 1344 012c 5023     		movs	r3, #80
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1345              		.loc 1 504 5 view .LVU349
 1346 012e 2F00     		movs	r7, r5
 409:.././crypto/mbedtls//library/rsa.c **** #endif
 1347              		.loc 1 409 18 view .LVU350
 1348 0130 9946     		mov	r9, r3
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1349              		.loc 1 504 5 view .LVU351
 1350 0132 2B00     		movs	r3, r5
 1351 0134 2A00     		movs	r2, r5
 1352 0136 7433     		adds	r3, r3, #116
 1353 0138 2C37     		adds	r7, r7, #44
 1354 013a 0093     		str	r3, [sp]
 1355 013c 4432     		adds	r2, r2, #68
 1356 013e 3B00     		movs	r3, r7
 1357 0140 06A9     		add	r1, sp, #24
 1358 0142 09A8     		add	r0, sp, #36
 1359 0144 FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 1360              	.LVL201:
 409:.././crypto/mbedtls//library/rsa.c **** #endif
 1361              		.loc 1 409 18 view .LVU352
 1362 0148 A944     		add	r9, r9, r5
 443:.././crypto/mbedtls//library/rsa.c ****     {
 1363              		.loc 1 443 5 is_stmt 1 view .LVU353
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1364              		.loc 1 504 5 view .LVU354
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1365              		.loc 1 504 5 view .LVU355
 1366 014a 041E     		subs	r4, r0, #0
 1367              	.LVL202:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1368              		.loc 1 504 5 is_stmt 0 view .LVU356
 1369 014c 00D1     		bne	.LCB1184
 1370 014e E5E0     		b	.L114	@long jump
 1371              	.LCB1184:
 1372              	.L79:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1373              		.loc 1 532 5 is_stmt 1 view .LVU357
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1374              		.loc 1 540 5 view .LVU358
 1375 0150 06A8     		add	r0, sp, #24
 1376              	.LVL203:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1377              		.loc 1 540 5 is_stmt 0 view .LVU359
 1378 0152 FFF7FEFF 		bl	mbedtls_mpi_free
 1379              	.LVL204:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1380              		.loc 1 540 29 is_stmt 1 view .LVU360
 1381 0156 09A8     		add	r0, sp, #36
 1382 0158 FFF7FEFF 		bl	mbedtls_mpi_free
 1383              	.LVL205:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1384              		.loc 1 540 54 view .LVU361
 1385 015c 0CA8     		add	r0, sp, #48
 1386 015e FFF7FEFF 		bl	mbedtls_mpi_free
 1387              	.LVL206:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1388              		.loc 1 541 5 view .LVU362
 1389 0162 0FA8     		add	r0, sp, #60
 1390 0164 FFF7FEFF 		bl	mbedtls_mpi_free
 1391              	.LVL207:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1392              		.loc 1 541 30 view .LVU363
 1393 0168 12A8     		add	r0, sp, #72
 1394 016a FFF7FEFF 		bl	mbedtls_mpi_free
 1395              	.LVL208:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1396              		.loc 1 541 55 view .LVU364
 1397 016e 15A8     		add	r0, sp, #84
 1398 0170 FFF7FEFF 		bl	mbedtls_mpi_free
 1399              	.LVL209:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 1400              		.loc 1 543 5 view .LVU365
 554:.././crypto/mbedtls//library/rsa.c **** 
 1401              		.loc 1 554 9 view .LVU366
 554:.././crypto/mbedtls//library/rsa.c **** 
 1402              		.loc 1 554 48 is_stmt 0 view .LVU367
 1403 0174 B44B     		ldr	r3, .L117
 1404 0176 9C46     		mov	ip, r3
 1405 0178 6444     		add	r4, r4, ip
 1406              	.LVL210:
 554:.././crypto/mbedtls//library/rsa.c **** 
 1407              		.loc 1 554 48 view .LVU368
 1408 017a 97E7     		b	.L59
 1409              	.LVL211:
 1410              	.L112:
 408:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi *DQ = &ctx->DQ;
 1411              		.loc 1 408 18 view .LVU369
 1412 017c 4423     		movs	r3, #68
 1413 017e 9C46     		mov	ip, r3
 1414 0180 AC44     		add	ip, ip, r5
 1415 0182 6346     		mov	r3, ip
 1416 0184 0493     		str	r3, [sp, #16]
 409:.././crypto/mbedtls//library/rsa.c **** #endif
 1417              		.loc 1 409 18 view .LVU370
 1418 0186 5023     		movs	r3, #80
 1419 0188 9C46     		mov	ip, r3
 1420 018a AC44     		add	ip, ip, r5
 1421 018c 6346     		mov	r3, ip
 1422 018e 0593     		str	r3, [sp, #20]
 443:.././crypto/mbedtls//library/rsa.c ****     {
 1423              		.loc 1 443 5 is_stmt 1 view .LVU371
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 1424              		.loc 1 449 9 view .LVU372
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 1425              		.loc 1 449 9 view .LVU373
 1426              	.LVL212:
 1427              	.LBB16:
 1428              	.LBI16:
 335:.././crypto/mbedtls//library/rsa.c ****                  int (*f_rng)(void *, unsigned char *, size_t), void *p_rng )
 1429              		.loc 1 335 12 view .LVU374
 1430              	.LBB17:
 338:.././crypto/mbedtls//library/rsa.c **** 
 1431              		.loc 1 338 5 view .LVU375
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1432              		.loc 1 340 5 view .LVU376
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1433              		.loc 1 340 16 is_stmt 0 view .LVU377
 1434 0190 A023     		movs	r3, #160
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1435              		.loc 1 340 7 view .LVU378
 1436 0192 EB58     		ldr	r3, [r5, r3]
 1437 0194 002B     		cmp	r3, #0
 1438 0196 00D1     		bne	.LCB1248
 1439 0198 94E0     		b	.L115	@long jump
 1440              	.LCB1248:
 343:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vi, &ctx->Vi, &ctx->N ) );
 1441              		.loc 1 343 9 is_stmt 1 view .LVU379
 343:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vi, &ctx->Vi, &ctx->N ) );
 1442              		.loc 1 343 9 view .LVU380
 1443 019a 2F00     		movs	r7, r5
 1444 019c 8C37     		adds	r7, r7, #140
 1445 019e 3A00     		movs	r2, r7
 1446 01a0 3900     		movs	r1, r7
 1447 01a2 3800     		movs	r0, r7
 1448 01a4 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1449              	.LVL213:
 1450 01a8 041E     		subs	r4, r0, #0
 1451              	.LVL214:
 343:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vi, &ctx->Vi, &ctx->N ) );
 1452              		.loc 1 343 9 is_stmt 0 view .LVU381
 1453 01aa 00D0     		beq	.LCB1261
 1454 01ac 64E7     		b	.L81	@long jump
 1455              	.LCB1261:
 343:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vi, &ctx->Vi, &ctx->N ) );
 1456              		.loc 1 343 9 is_stmt 1 view .LVU382
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 1457              		.loc 1 344 9 view .LVU383
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 1458              		.loc 1 344 9 view .LVU384
 1459 01ae 4246     		mov	r2, r8
 1460 01b0 3900     		movs	r1, r7
 1461 01b2 3800     		movs	r0, r7
 1462              	.LVL215:
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 1463              		.loc 1 344 9 is_stmt 0 view .LVU385
 1464 01b4 FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 1465              	.LVL216:
 1466 01b8 041E     		subs	r4, r0, #0
 1467              	.LVL217:
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 1468              		.loc 1 344 9 view .LVU386
 1469 01ba 00D0     		beq	.LCB1274
 1470 01bc 5CE7     		b	.L81	@long jump
 1471              	.LCB1274:
 344:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &ctx->Vf, &ctx->Vf, &ctx->Vf ) );
 1472              		.loc 1 344 9 is_stmt 1 view .LVU387
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 1473              		.loc 1 345 9 view .LVU388
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 1474              		.loc 1 345 9 view .LVU389
 1475 01be 9823     		movs	r3, #152
 1476 01c0 9B46     		mov	fp, r3
 1477 01c2 AB44     		add	fp, fp, r5
 1478 01c4 5A46     		mov	r2, fp
 1479 01c6 5946     		mov	r1, fp
 1480 01c8 5846     		mov	r0, fp
 1481              	.LVL218:
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 1482              		.loc 1 345 9 is_stmt 0 view .LVU390
 1483 01ca FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1484              	.LVL219:
 1485 01ce 041E     		subs	r4, r0, #0
 1486              	.LVL220:
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 1487              		.loc 1 345 9 view .LVU391
 1488 01d0 00D0     		beq	.LCB1290
 1489 01d2 51E7     		b	.L81	@long jump
 1490              	.LCB1290:
 345:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->Vf, &ctx->Vf, &ctx->N ) );
 1491              		.loc 1 345 9 is_stmt 1 view .LVU392
 346:.././crypto/mbedtls//library/rsa.c **** 
 1492              		.loc 1 346 9 view .LVU393
 346:.././crypto/mbedtls//library/rsa.c **** 
 1493              		.loc 1 346 9 view .LVU394
 1494 01d4 4246     		mov	r2, r8
 1495 01d6 5946     		mov	r1, fp
 1496 01d8 5846     		mov	r0, fp
 1497              	.LVL221:
 346:.././crypto/mbedtls//library/rsa.c **** 
 1498              		.loc 1 346 9 is_stmt 0 view .LVU395
 1499 01da FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 1500              	.LVL222:
 1501 01de 041E     		subs	r4, r0, #0
 1502              	.LVL223:
 346:.././crypto/mbedtls//library/rsa.c **** 
 1503              		.loc 1 346 9 view .LVU396
 1504 01e0 00D0     		beq	.LCB1303
 1505 01e2 49E7     		b	.L81	@long jump
 1506              	.LCB1303:
 1507              	.LVL224:
 1508              	.L65:
 346:.././crypto/mbedtls//library/rsa.c **** 
 1509              		.loc 1 346 9 view .LVU397
 1510              	.LBE17:
 1511              	.LBE16:
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 1512              		.loc 1 449 9 is_stmt 1 discriminator 2 view .LVU398
 450:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1513              		.loc 1 450 9 discriminator 2 view .LVU399
 450:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1514              		.loc 1 450 9 discriminator 2 view .LVU400
 1515 01e4 06A9     		add	r1, sp, #24
 1516 01e6 3A00     		movs	r2, r7
 1517 01e8 0800     		movs	r0, r1
 1518 01ea FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1519              	.LVL225:
 1520 01ee 041E     		subs	r4, r0, #0
 1521              	.LVL226:
 450:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1522              		.loc 1 450 9 is_stmt 0 discriminator 2 view .LVU401
 1523 01f0 00D0     		beq	.LCB1323
 1524 01f2 41E7     		b	.L81	@long jump
 1525              	.LCB1323:
 450:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1526              		.loc 1 450 9 is_stmt 1 discriminator 2 view .LVU402
 451:.././crypto/mbedtls//library/rsa.c **** 
 1527              		.loc 1 451 9 discriminator 2 view .LVU403
 451:.././crypto/mbedtls//library/rsa.c **** 
 1528              		.loc 1 451 9 discriminator 2 view .LVU404
 1529 01f4 06A9     		add	r1, sp, #24
 1530 01f6 4246     		mov	r2, r8
 1531 01f8 0800     		movs	r0, r1
 1532              	.LVL227:
 451:.././crypto/mbedtls//library/rsa.c **** 
 1533              		.loc 1 451 9 is_stmt 0 discriminator 2 view .LVU405
 1534 01fa FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 1535              	.LVL228:
 1536 01fe 041E     		subs	r4, r0, #0
 1537              	.LVL229:
 451:.././crypto/mbedtls//library/rsa.c **** 
 1538              		.loc 1 451 9 discriminator 2 view .LVU406
 1539 0200 00D0     		beq	.LCB1336
 1540 0202 39E7     		b	.L81	@long jump
 1541              	.LCB1336:
 451:.././crypto/mbedtls//library/rsa.c **** 
 1542              		.loc 1 451 9 is_stmt 1 discriminator 2 view .LVU407
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 1543              		.loc 1 456 9 discriminator 2 view .LVU408
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 1544              		.loc 1 456 9 discriminator 2 view .LVU409
 1545 0204 2F00     		movs	r7, r5
 1546 0206 2C37     		adds	r7, r7, #44
 1547 0208 0122     		movs	r2, #1
 1548 020a 3900     		movs	r1, r7
 1549 020c 0FA8     		add	r0, sp, #60
 1550              	.LVL230:
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 1551              		.loc 1 456 9 is_stmt 0 discriminator 2 view .LVU410
 1552 020e FFF7FEFF 		bl	mbedtls_mpi_sub_int
 1553              	.LVL231:
 1554 0212 041E     		subs	r4, r0, #0
 1555              	.LVL232:
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 1556              		.loc 1 456 9 discriminator 2 view .LVU411
 1557 0214 00D0     		beq	.LCB1351
 1558 0216 2FE7     		b	.L81	@long jump
 1559              	.LCB1351:
 456:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 1560              		.loc 1 456 9 is_stmt 1 discriminator 2 view .LVU412
 457:.././crypto/mbedtls//library/rsa.c **** 
 1561              		.loc 1 457 9 discriminator 2 view .LVU413
 457:.././crypto/mbedtls//library/rsa.c **** 
 1562              		.loc 1 457 9 discriminator 2 view .LVU414
 1563 0218 3823     		movs	r3, #56
 1564 021a 9B46     		mov	fp, r3
 1565 021c AB44     		add	fp, fp, r5
 1566 021e 0122     		movs	r2, #1
 1567 0220 5946     		mov	r1, fp
 1568 0222 12A8     		add	r0, sp, #72
 1569              	.LVL233:
 457:.././crypto/mbedtls//library/rsa.c **** 
 1570              		.loc 1 457 9 is_stmt 0 discriminator 2 view .LVU415
 1571 0224 FFF7FEFF 		bl	mbedtls_mpi_sub_int
 1572              	.LVL234:
 1573 0228 041E     		subs	r4, r0, #0
 1574              	.LVL235:
 457:.././crypto/mbedtls//library/rsa.c **** 
 1575              		.loc 1 457 9 discriminator 2 view .LVU416
 1576 022a 00D0     		beq	.LCB1367
 1577 022c 24E7     		b	.L81	@long jump
 1578              	.LCB1367:
 457:.././crypto/mbedtls//library/rsa.c **** 
 1579              		.loc 1 457 9 is_stmt 1 discriminator 2 view .LVU417
 474:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1580              		.loc 1 474 9 discriminator 2 view .LVU418
 474:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1581              		.loc 1 474 9 discriminator 2 view .LVU419
 1582 022e 3200     		movs	r2, r6
 1583 0230 1C21     		movs	r1, #28
 1584 0232 029B     		ldr	r3, [sp, #8]
 1585 0234 15A8     		add	r0, sp, #84
 1586              	.LVL236:
 474:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1587              		.loc 1 474 9 is_stmt 0 discriminator 2 view .LVU420
 1588 0236 FFF7FEFF 		bl	mbedtls_mpi_fill_random
 1589              	.LVL237:
 1590 023a 041E     		subs	r4, r0, #0
 1591              	.LVL238:
 474:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1592              		.loc 1 474 9 discriminator 2 view .LVU421
 1593 023c 00D0     		beq	.LCB1382
 1594 023e 1BE7     		b	.L81	@long jump
 1595              	.LCB1382:
 474:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1596              		.loc 1 474 9 is_stmt 1 discriminator 2 view .LVU422
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 1597              		.loc 1 476 9 discriminator 2 view .LVU423
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 1598              		.loc 1 476 9 discriminator 2 view .LVU424
 1599 0240 4846     		mov	r0, r9
 1600              	.LVL239:
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 1601              		.loc 1 476 9 is_stmt 0 discriminator 2 view .LVU425
 1602 0242 15AA     		add	r2, sp, #84
 1603 0244 0FA9     		add	r1, sp, #60
 1604 0246 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1605              	.LVL240:
 1606 024a 041E     		subs	r4, r0, #0
 1607              	.LVL241:
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 1608              		.loc 1 476 9 discriminator 2 view .LVU426
 1609 024c 00D0     		beq	.LCB1395
 1610 024e 13E7     		b	.L81	@long jump
 1611              	.LCB1395:
 476:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DP_blind, &DP_blind,
 1612              		.loc 1 476 9 is_stmt 1 discriminator 2 view .LVU427
 477:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 1613              		.loc 1 477 9 discriminator 2 view .LVU428
 477:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 1614              		.loc 1 477 9 discriminator 2 view .LVU429
 1615 0250 4946     		mov	r1, r9
 1616 0252 4846     		mov	r0, r9
 1617              	.LVL242:
 477:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 1618              		.loc 1 477 9 is_stmt 0 discriminator 2 view .LVU430
 1619 0254 049A     		ldr	r2, [sp, #16]
 1620 0256 FFF7FEFF 		bl	mbedtls_mpi_add_mpi
 1621              	.LVL243:
 1622 025a 041E     		subs	r4, r0, #0
 1623              	.LVL244:
 477:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 1624              		.loc 1 477 9 discriminator 2 view .LVU431
 1625 025c 00D0     		beq	.LCB1408
 1626 025e 0BE7     		b	.L81	@long jump
 1627              	.LCB1408:
 477:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DP ) );
 1628              		.loc 1 477 9 is_stmt 1 discriminator 2 view .LVU432
 480:.././crypto/mbedtls//library/rsa.c **** 
 1629              		.loc 1 480 9 discriminator 2 view .LVU433
 1630              	.LVL245:
 485:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1631              		.loc 1 485 9 discriminator 2 view .LVU434
 485:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1632              		.loc 1 485 9 discriminator 2 view .LVU435
 1633 0260 3200     		movs	r2, r6
 1634 0262 1C21     		movs	r1, #28
 1635 0264 029B     		ldr	r3, [sp, #8]
 1636 0266 15A8     		add	r0, sp, #84
 1637              	.LVL246:
 485:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1638              		.loc 1 485 9 is_stmt 0 discriminator 2 view .LVU436
 1639 0268 FFF7FEFF 		bl	mbedtls_mpi_fill_random
 1640              	.LVL247:
 1641 026c 041E     		subs	r4, r0, #0
 1642              	.LVL248:
 485:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1643              		.loc 1 485 9 discriminator 2 view .LVU437
 1644 026e 00D0     		beq	.LCB1424
 1645 0270 02E7     		b	.L81	@long jump
 1646              	.LCB1424:
 485:.././crypto/mbedtls//library/rsa.c ****                          f_rng, p_rng ) );
 1647              		.loc 1 485 9 is_stmt 1 discriminator 2 view .LVU438
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 1648              		.loc 1 487 9 discriminator 2 view .LVU439
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 1649              		.loc 1 487 9 discriminator 2 view .LVU440
 1650 0272 5046     		mov	r0, r10
 1651              	.LVL249:
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 1652              		.loc 1 487 9 is_stmt 0 discriminator 2 view .LVU441
 1653 0274 15AA     		add	r2, sp, #84
 1654 0276 12A9     		add	r1, sp, #72
 1655 0278 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1656              	.LVL250:
 1657 027c 041E     		subs	r4, r0, #0
 1658              	.LVL251:
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 1659              		.loc 1 487 9 discriminator 2 view .LVU442
 1660 027e 00D0     		beq	.LCB1437
 1661 0280 FAE6     		b	.L81	@long jump
 1662              	.LCB1437:
 487:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &DQ_blind, &DQ_blind,
 1663              		.loc 1 487 9 is_stmt 1 discriminator 2 view .LVU443
 488:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DQ ) );
 1664              		.loc 1 488 9 discriminator 2 view .LVU444
 488:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DQ ) );
 1665              		.loc 1 488 9 discriminator 2 view .LVU445
 1666 0282 5146     		mov	r1, r10
 1667 0284 5046     		mov	r0, r10
 1668              	.LVL252:
 488:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DQ ) );
 1669              		.loc 1 488 9 is_stmt 0 discriminator 2 view .LVU446
 1670 0286 059A     		ldr	r2, [sp, #20]
 1671 0288 FFF7FEFF 		bl	mbedtls_mpi_add_mpi
 1672              	.LVL253:
 1673 028c 041E     		subs	r4, r0, #0
 1674              	.LVL254:
 488:.././crypto/mbedtls//library/rsa.c ****                     &ctx->DQ ) );
 1675              		.loc 1 488 9 discriminator 2 view .LVU447
 1676 028e 00D0     		beq	.LCB1450
 1677 0290 F2E6     		b	.L81	@long jump
 1678              	.LCB1450:
 1679              	.LVL255:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1680              		.loc 1 504 5 is_stmt 1 view .LVU448
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1681              		.loc 1 504 5 view .LVU449
 1682 0292 2B00     		movs	r3, r5
 1683 0294 7433     		adds	r3, r3, #116
 1684 0296 0093     		str	r3, [sp]
 1685 0298 4A46     		mov	r2, r9
 1686 029a 3B00     		movs	r3, r7
 1687 029c 06A9     		add	r1, sp, #24
 1688 029e 09A8     		add	r0, sp, #36
 1689              	.LVL256:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1690              		.loc 1 504 5 is_stmt 0 view .LVU450
 1691 02a0 FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 1692              	.LVL257:
 1693 02a4 041E     		subs	r4, r0, #0
 1694              	.LVL258:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1695              		.loc 1 504 5 view .LVU451
 1696 02a6 00D0     		beq	.LCB1468
 1697 02a8 E6E6     		b	.L81	@long jump
 1698              	.LCB1468:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1699              		.loc 1 504 5 is_stmt 1 view .LVU452
 505:.././crypto/mbedtls//library/rsa.c **** 
 1700              		.loc 1 505 5 view .LVU453
 505:.././crypto/mbedtls//library/rsa.c **** 
 1701              		.loc 1 505 5 view .LVU454
 1702 02aa 2B00     		movs	r3, r5
 1703 02ac 8033     		adds	r3, r3, #128
 1704 02ae 0093     		str	r3, [sp]
 1705 02b0 5246     		mov	r2, r10
 1706 02b2 5B46     		mov	r3, fp
 1707 02b4 06A9     		add	r1, sp, #24
 1708 02b6 0CA8     		add	r0, sp, #48
 1709              	.LVL259:
 505:.././crypto/mbedtls//library/rsa.c **** 
 1710              		.loc 1 505 5 is_stmt 0 view .LVU455
 1711 02b8 FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 1712              	.LVL260:
 1713 02bc 041E     		subs	r4, r0, #0
 1714              	.LVL261:
 505:.././crypto/mbedtls//library/rsa.c **** 
 1715              		.loc 1 505 5 view .LVU456
 1716 02be 00D0     		beq	.LCB1485
 1717 02c0 DAE6     		b	.L81	@long jump
 1718              	.LCB1485:
 1719 02c2 3AE0     		b	.L80
 1720              	.LVL262:
 1721              	.L115:
 1722              	.LBB20:
 1723              	.LBB18:
 352:.././crypto/mbedtls//library/rsa.c ****         if( count++ > 10 )
 1724              		.loc 1 352 5 is_stmt 1 view .LVU457
 353:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 1725              		.loc 1 353 9 view .LVU458
 353:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 1726              		.loc 1 353 9 is_stmt 0 view .LVU459
 1727 02c4 9823     		movs	r3, #152
 1728 02c6 9B46     		mov	fp, r3
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1729              		.loc 1 357 9 view .LVU460
 1730 02c8 0C3B     		subs	r3, r3, #12
 1731 02ca 9C46     		mov	ip, r3
 1732 02cc AC44     		add	ip, ip, r5
 1733 02ce 6346     		mov	r3, ip
 1734 02d0 0393     		str	r3, [sp, #12]
 1735 02d2 3300     		movs	r3, r6
 1736 02d4 AB44     		add	fp, fp, r5
 1737 02d6 2E00     		movs	r6, r5
 1738              	.LVL263:
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1739              		.loc 1 340 7 view .LVU461
 1740 02d8 0B24     		movs	r4, #11
 1741              	.LVL264:
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1742              		.loc 1 340 7 view .LVU462
 1743 02da 5D46     		mov	r5, fp
 1744              	.LVL265:
 340:.././crypto/mbedtls//library/rsa.c ****     {
 1745              		.loc 1 340 7 view .LVU463
 1746 02dc 9B46     		mov	fp, r3
 1747              	.LVL266:
 1748              	.L78:
 356:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 1749              		.loc 1 356 9 is_stmt 1 view .LVU464
 356:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 1750              		.loc 1 356 9 view .LVU465
 1751 02de 7368     		ldr	r3, [r6, #4]
 1752 02e0 5A46     		mov	r2, fp
 1753 02e2 591E     		subs	r1, r3, #1
 1754 02e4 2800     		movs	r0, r5
 1755 02e6 029B     		ldr	r3, [sp, #8]
 1756 02e8 FFF7FEFF 		bl	mbedtls_mpi_fill_random
 1757              	.LVL267:
 356:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 1758              		.loc 1 356 9 is_stmt 0 view .LVU466
 1759 02ec 0028     		cmp	r0, #0
 1760 02ee 00D0     		beq	.LCB1548
 1761 02f0 8BE0     		b	.L109	@long jump
 1762              	.LCB1548:
 356:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &ctx->Vi, &ctx->Vf, &ctx->N ) );
 1763              		.loc 1 356 9 is_stmt 1 view .LVU467
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1764              		.loc 1 357 9 view .LVU468
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1765              		.loc 1 357 9 view .LVU469
 1766 02f2 039F     		ldr	r7, [sp, #12]
 1767 02f4 4246     		mov	r2, r8
 1768 02f6 2900     		movs	r1, r5
 1769 02f8 3800     		movs	r0, r7
 1770              	.LVL268:
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1771              		.loc 1 357 9 is_stmt 0 view .LVU470
 1772 02fa FFF7FEFF 		bl	mbedtls_mpi_gcd
 1773              	.LVL269:
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1774              		.loc 1 357 9 view .LVU471
 1775 02fe 0028     		cmp	r0, #0
 1776 0300 00D0     		beq	.LCB1560
 1777 0302 82E0     		b	.L109	@long jump
 1778              	.LCB1560:
 357:.././crypto/mbedtls//library/rsa.c ****     } while( mbedtls_mpi_cmp_int( &ctx->Vi, 1 ) != 0 );
 1779              		.loc 1 357 9 is_stmt 1 view .LVU472
 358:.././crypto/mbedtls//library/rsa.c **** 
 1780              		.loc 1 358 12 view .LVU473
 358:.././crypto/mbedtls//library/rsa.c **** 
 1781              		.loc 1 358 14 is_stmt 0 view .LVU474
 1782 0304 0121     		movs	r1, #1
 1783 0306 3800     		movs	r0, r7
 1784              	.LVL270:
 358:.././crypto/mbedtls//library/rsa.c **** 
 1785              		.loc 1 358 14 view .LVU475
 1786 0308 FFF7FEFF 		bl	mbedtls_mpi_cmp_int
 1787              	.LVL271:
 358:.././crypto/mbedtls//library/rsa.c **** 
 1788              		.loc 1 358 5 view .LVU476
 1789 030c 0028     		cmp	r0, #0
 1790 030e 00D1     		bne	.LCB1569
 1791 0310 A0E0     		b	.L116	@long jump
 1792              	.LCB1569:
 352:.././crypto/mbedtls//library/rsa.c ****         if( count++ > 10 )
 1793              		.loc 1 352 5 is_stmt 1 view .LVU477
 353:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 1794              		.loc 1 353 9 view .LVU478
 1795              	.LVL272:
 353:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 1796              		.loc 1 353 9 is_stmt 0 view .LVU479
 1797 0312 013C     		subs	r4, r4, #1
 1798              	.LVL273:
 353:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_RNG_FAILED );
 1799              		.loc 1 353 11 view .LVU480
 1800 0314 002C     		cmp	r4, #0
 1801 0316 E2D1     		bne	.L78
 354:.././crypto/mbedtls//library/rsa.c **** 
 1802              		.loc 1 354 19 view .LVU481
 1803 0318 4C4C     		ldr	r4, .L117+4
 1804              	.LVL274:
 354:.././crypto/mbedtls//library/rsa.c **** 
 1805              		.loc 1 354 19 view .LVU482
 1806 031a ADE6     		b	.L81
 1807              	.LVL275:
 1808              	.L114:
 354:.././crypto/mbedtls//library/rsa.c **** 
 1809              		.loc 1 354 19 view .LVU483
 1810              	.LBE18:
 1811              	.LBE20:
 504:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &T2, &T, DQ, &ctx->Q, &ctx->RQ ) );
 1812              		.loc 1 504 5 is_stmt 1 view .LVU484
 505:.././crypto/mbedtls//library/rsa.c **** 
 1813              		.loc 1 505 5 view .LVU485
 505:.././crypto/mbedtls//library/rsa.c **** 
 1814              		.loc 1 505 5 view .LVU486
 1815 031c 3823     		movs	r3, #56
 1816 031e 9B46     		mov	fp, r3
 1817 0320 2B00     		movs	r3, r5
 1818 0322 AB44     		add	fp, fp, r5
 1819 0324 8033     		adds	r3, r3, #128
 1820 0326 0093     		str	r3, [sp]
 1821 0328 4A46     		mov	r2, r9
 1822 032a 5B46     		mov	r3, fp
 1823 032c 06A9     		add	r1, sp, #24
 1824 032e 0CA8     		add	r0, sp, #48
 1825              	.LVL276:
 505:.././crypto/mbedtls//library/rsa.c **** 
 1826              		.loc 1 505 5 is_stmt 0 view .LVU487
 1827 0330 FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 1828              	.LVL277:
 1829 0334 041E     		subs	r4, r0, #0
 1830              	.LVL278:
 505:.././crypto/mbedtls//library/rsa.c **** 
 1831              		.loc 1 505 5 view .LVU488
 1832 0336 00D0     		beq	.LCB1616
 1833 0338 0AE7     		b	.L79	@long jump
 1834              	.LCB1616:
 1835              	.LVL279:
 1836              	.L80:
 505:.././crypto/mbedtls//library/rsa.c **** 
 1837              		.loc 1 505 5 is_stmt 1 discriminator 2 view .LVU489
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 1838              		.loc 1 510 5 discriminator 2 view .LVU490
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 1839              		.loc 1 510 5 discriminator 2 view .LVU491
 1840 033a 0CAA     		add	r2, sp, #48
 1841 033c 09A9     		add	r1, sp, #36
 1842 033e 06A8     		add	r0, sp, #24
 1843              	.LVL280:
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 1844              		.loc 1 510 5 is_stmt 0 discriminator 2 view .LVU492
 1845 0340 FFF7FEFF 		bl	mbedtls_mpi_sub_mpi
 1846              	.LVL281:
 1847 0344 041E     		subs	r4, r0, #0
 1848              	.LVL282:
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 1849              		.loc 1 510 5 discriminator 2 view .LVU493
 1850 0346 62D1     		bne	.L68
 510:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T1, &T, &ctx->QP ) );
 1851              		.loc 1 510 5 is_stmt 1 discriminator 2 view .LVU494
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 1852              		.loc 1 511 5 discriminator 2 view .LVU495
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 1853              		.loc 1 511 5 discriminator 2 view .LVU496
 1854 0348 2A00     		movs	r2, r5
 1855 034a 06A9     		add	r1, sp, #24
 1856 034c 5C32     		adds	r2, r2, #92
 1857 034e 09A8     		add	r0, sp, #36
 1858              	.LVL283:
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 1859              		.loc 1 511 5 is_stmt 0 discriminator 2 view .LVU497
 1860 0350 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1861              	.LVL284:
 1862 0354 041E     		subs	r4, r0, #0
 1863              	.LVL285:
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 1864              		.loc 1 511 5 discriminator 2 view .LVU498
 1865 0356 5AD1     		bne	.L68
 511:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T1, &ctx->P ) );
 1866              		.loc 1 511 5 is_stmt 1 discriminator 2 view .LVU499
 512:.././crypto/mbedtls//library/rsa.c **** 
 1867              		.loc 1 512 5 discriminator 2 view .LVU500
 512:.././crypto/mbedtls//library/rsa.c **** 
 1868              		.loc 1 512 5 discriminator 2 view .LVU501
 1869 0358 3A00     		movs	r2, r7
 1870 035a 09A9     		add	r1, sp, #36
 1871 035c 06A8     		add	r0, sp, #24
 1872              	.LVL286:
 512:.././crypto/mbedtls//library/rsa.c **** 
 1873              		.loc 1 512 5 is_stmt 0 discriminator 2 view .LVU502
 1874 035e FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 1875              	.LVL287:
 1876 0362 041E     		subs	r4, r0, #0
 1877              	.LVL288:
 512:.././crypto/mbedtls//library/rsa.c **** 
 1878              		.loc 1 512 5 discriminator 2 view .LVU503
 1879 0364 53D1     		bne	.L68
 512:.././crypto/mbedtls//library/rsa.c **** 
 1880              		.loc 1 512 5 is_stmt 1 discriminator 2 view .LVU504
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 1881              		.loc 1 517 5 discriminator 2 view .LVU505
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 1882              		.loc 1 517 5 discriminator 2 view .LVU506
 1883 0366 5A46     		mov	r2, fp
 1884 0368 06A9     		add	r1, sp, #24
 1885 036a 09A8     		add	r0, sp, #36
 1886              	.LVL289:
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 1887              		.loc 1 517 5 is_stmt 0 discriminator 2 view .LVU507
 1888 036c FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1889              	.LVL290:
 1890 0370 041E     		subs	r4, r0, #0
 1891              	.LVL291:
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 1892              		.loc 1 517 5 discriminator 2 view .LVU508
 1893 0372 4CD1     		bne	.L68
 517:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_add_mpi( &T, &T2, &T1 ) );
 1894              		.loc 1 517 5 is_stmt 1 discriminator 2 view .LVU509
 518:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 1895              		.loc 1 518 5 discriminator 2 view .LVU510
 518:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 1896              		.loc 1 518 5 discriminator 2 view .LVU511
 1897 0374 09AA     		add	r2, sp, #36
 1898 0376 0CA9     		add	r1, sp, #48
 1899 0378 06A8     		add	r0, sp, #24
 1900              	.LVL292:
 518:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 1901              		.loc 1 518 5 is_stmt 0 discriminator 2 view .LVU512
 1902 037a FFF7FEFF 		bl	mbedtls_mpi_add_mpi
 1903              	.LVL293:
 1904 037e 041E     		subs	r4, r0, #0
 1905              	.LVL294:
 518:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 1906              		.loc 1 518 5 discriminator 2 view .LVU513
 1907 0380 45D1     		bne	.L68
 518:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_RSA_NO_CRT */
 1908              		.loc 1 518 5 is_stmt 1 discriminator 2 view .LVU514
 521:.././crypto/mbedtls//library/rsa.c ****     {
 1909              		.loc 1 521 5 discriminator 2 view .LVU515
 521:.././crypto/mbedtls//library/rsa.c ****     {
 1910              		.loc 1 521 7 is_stmt 0 discriminator 2 view .LVU516
 1911 0382 002E     		cmp	r6, #0
 1912 0384 00D1     		bne	.LCB1692
 1913 0386 84E0     		b	.L69	@long jump
 1914              	.LCB1692:
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1915              		.loc 1 527 9 is_stmt 1 view .LVU517
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1916              		.loc 1 527 9 view .LVU518
 1917 0388 2A00     		movs	r2, r5
 1918 038a 06A9     		add	r1, sp, #24
 1919 038c 0800     		movs	r0, r1
 1920              	.LVL295:
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1921              		.loc 1 527 9 is_stmt 0 view .LVU519
 1922 038e 9832     		adds	r2, r2, #152
 1923 0390 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 1924              	.LVL296:
 1925 0394 041E     		subs	r4, r0, #0
 1926              	.LVL297:
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1927              		.loc 1 527 9 view .LVU520
 1928 0396 77D1     		bne	.L110
 527:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &T, &T, &ctx->N ) );
 1929              		.loc 1 527 9 is_stmt 1 discriminator 2 view .LVU521
 528:.././crypto/mbedtls//library/rsa.c ****     }
 1930              		.loc 1 528 9 discriminator 2 view .LVU522
 528:.././crypto/mbedtls//library/rsa.c ****     }
 1931              		.loc 1 528 9 discriminator 2 view .LVU523
 1932 0398 06A9     		add	r1, sp, #24
 1933 039a 4246     		mov	r2, r8
 1934 039c 0800     		movs	r0, r1
 1935              	.LVL298:
 528:.././crypto/mbedtls//library/rsa.c ****     }
 1936              		.loc 1 528 9 is_stmt 0 discriminator 2 view .LVU524
 1937 039e FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 1938              	.LVL299:
 1939 03a2 041E     		subs	r4, r0, #0
 1940              	.LVL300:
 528:.././crypto/mbedtls//library/rsa.c ****     }
 1941              		.loc 1 528 9 discriminator 2 view .LVU525
 1942 03a4 70D1     		bne	.L110
 528:.././crypto/mbedtls//library/rsa.c ****     }
 1943              		.loc 1 528 9 is_stmt 1 view .LVU526
 531:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 1944              		.loc 1 531 5 view .LVU527
 1945              	.LVL301:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1946              		.loc 1 532 5 view .LVU528
 532:.././crypto/mbedtls//library/rsa.c **** 
 1947              		.loc 1 532 5 view .LVU529
 1948 03a6 6A68     		ldr	r2, [r5, #4]
 1949 03a8 2899     		ldr	r1, [sp, #160]
 1950 03aa 06A8     		add	r0, sp, #24
 1951              	.LVL302:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1952              		.loc 1 532 5 is_stmt 0 view .LVU530
 1953 03ac FFF7FEFF 		bl	mbedtls_mpi_write_binary
 1954              	.LVL303:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1955              		.loc 1 532 5 view .LVU531
 1956 03b0 0400     		movs	r4, r0
 1957              	.LVL304:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1958              		.loc 1 532 5 is_stmt 1 view .LVU532
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1959              		.loc 1 540 5 view .LVU533
 1960 03b2 06A8     		add	r0, sp, #24
 1961              	.LVL305:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1962              		.loc 1 540 5 is_stmt 0 view .LVU534
 1963 03b4 FFF7FEFF 		bl	mbedtls_mpi_free
 1964              	.LVL306:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1965              		.loc 1 540 29 is_stmt 1 view .LVU535
 1966 03b8 09A8     		add	r0, sp, #36
 1967 03ba FFF7FEFF 		bl	mbedtls_mpi_free
 1968              	.LVL307:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1969              		.loc 1 540 54 view .LVU536
 1970 03be 0CA8     		add	r0, sp, #48
 1971 03c0 FFF7FEFF 		bl	mbedtls_mpi_free
 1972              	.LVL308:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1973              		.loc 1 541 5 view .LVU537
 1974 03c4 0FA8     		add	r0, sp, #60
 1975 03c6 FFF7FEFF 		bl	mbedtls_mpi_free
 1976              	.LVL309:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1977              		.loc 1 541 30 view .LVU538
 1978 03ca 12A8     		add	r0, sp, #72
 1979 03cc FFF7FEFF 		bl	mbedtls_mpi_free
 1980              	.LVL310:
 541:.././crypto/mbedtls//library/rsa.c **** 
 1981              		.loc 1 541 55 view .LVU539
 1982 03d0 15A8     		add	r0, sp, #84
 1983 03d2 FFF7FEFF 		bl	mbedtls_mpi_free
 1984              	.LVL311:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 1985              		.loc 1 543 5 view .LVU540
 1986 03d6 18AB     		add	r3, sp, #96
 1987 03d8 9946     		mov	r9, r3
 1988 03da 1BAB     		add	r3, sp, #108
 1989 03dc 9A46     		mov	r10, r3
 1990 03de 5DE6     		b	.L71
 1991              	.LVL312:
 1992              	.L113:
 532:.././crypto/mbedtls//library/rsa.c **** 
 1993              		.loc 1 532 5 view .LVU541
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1994              		.loc 1 540 5 view .LVU542
 439:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 1995              		.loc 1 439 13 is_stmt 0 view .LVU543
 1996 03e0 0424     		movs	r4, #4
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 1997              		.loc 1 540 5 view .LVU544
 1998 03e2 06A8     		add	r0, sp, #24
 1999 03e4 FFF7FEFF 		bl	mbedtls_mpi_free
 2000              	.LVL313:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2001              		.loc 1 540 29 is_stmt 1 view .LVU545
 2002 03e8 09A8     		add	r0, sp, #36
 2003 03ea FFF7FEFF 		bl	mbedtls_mpi_free
 2004              	.LVL314:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2005              		.loc 1 540 54 view .LVU546
 2006 03ee 0CA8     		add	r0, sp, #48
 2007 03f0 FFF7FEFF 		bl	mbedtls_mpi_free
 2008              	.LVL315:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2009              		.loc 1 541 5 view .LVU547
 2010 03f4 0FA8     		add	r0, sp, #60
 2011 03f6 FFF7FEFF 		bl	mbedtls_mpi_free
 2012              	.LVL316:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2013              		.loc 1 541 30 view .LVU548
 2014 03fa 12A8     		add	r0, sp, #72
 2015 03fc FFF7FEFF 		bl	mbedtls_mpi_free
 2016              	.LVL317:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2017              		.loc 1 541 55 view .LVU549
 2018 0400 15A8     		add	r0, sp, #84
 2019 0402 FFF7FEFF 		bl	mbedtls_mpi_free
 2020              	.LVL318:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 2021              		.loc 1 543 5 view .LVU550
 439:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 2022              		.loc 1 439 13 is_stmt 0 view .LVU551
 2023 0406 6442     		rsbs	r4, r4, #0
 2024 0408 7BE6     		b	.L72
 2025              	.LVL319:
 2026              	.L109:
 439:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 2027              		.loc 1 439 13 view .LVU552
 2028 040a 0400     		movs	r4, r0
 2029              	.LVL320:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2030              		.loc 1 532 5 is_stmt 1 view .LVU553
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2031              		.loc 1 540 5 view .LVU554
 2032 040c 34E6     		b	.L81
 2033              	.LVL321:
 2034              	.L68:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2035              		.loc 1 532 5 view .LVU555
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2036              		.loc 1 540 5 view .LVU556
 2037 040e 06A8     		add	r0, sp, #24
 2038              	.LVL322:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2039              		.loc 1 540 5 is_stmt 0 view .LVU557
 2040 0410 FFF7FEFF 		bl	mbedtls_mpi_free
 2041              	.LVL323:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2042              		.loc 1 540 29 is_stmt 1 view .LVU558
 2043 0414 09A8     		add	r0, sp, #36
 2044 0416 FFF7FEFF 		bl	mbedtls_mpi_free
 2045              	.LVL324:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2046              		.loc 1 540 54 view .LVU559
 2047 041a 0CA8     		add	r0, sp, #48
 2048 041c FFF7FEFF 		bl	mbedtls_mpi_free
 2049              	.LVL325:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2050              		.loc 1 541 5 view .LVU560
 2051 0420 0FA8     		add	r0, sp, #60
 2052 0422 FFF7FEFF 		bl	mbedtls_mpi_free
 2053              	.LVL326:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2054              		.loc 1 541 30 view .LVU561
 2055 0426 12A8     		add	r0, sp, #72
 2056 0428 FFF7FEFF 		bl	mbedtls_mpi_free
 2057              	.LVL327:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2058              		.loc 1 541 55 view .LVU562
 2059 042c 15A8     		add	r0, sp, #84
 2060 042e FFF7FEFF 		bl	mbedtls_mpi_free
 2061              	.LVL328:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 2062              		.loc 1 543 5 view .LVU563
 2063 0432 18AB     		add	r3, sp, #96
 2064 0434 9946     		mov	r9, r3
 2065 0436 1BAB     		add	r3, sp, #108
 2066 0438 9A46     		mov	r10, r3
 543:.././crypto/mbedtls//library/rsa.c ****     {
 2067              		.loc 1 543 7 is_stmt 0 view .LVU564
 2068 043a 002E     		cmp	r6, #0
 2069 043c 00D0     		beq	.LCB1852
 2070 043e 2DE6     		b	.L71	@long jump
 2071              	.LCB1852:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 2072              		.loc 1 543 7 view .LVU565
 2073 0440 5FE6     		b	.L72
 2074              	.LVL329:
 2075              	.L91:
 414:.././crypto/mbedtls//library/rsa.c **** 
 2076              		.loc 1 414 15 view .LVU566
 2077 0442 034C     		ldr	r4, .L117+8
 2078              	.LVL330:
 414:.././crypto/mbedtls//library/rsa.c **** 
 2079              		.loc 1 414 15 view .LVU567
 2080 0444 32E6     		b	.L59
 2081              	.L118:
 2082 0446 C046     		.align	2
 2083              	.L117:
 2084 0448 00BDFFFF 		.word	-17152
 2085 044c 80BBFFFF 		.word	-17536
 2086 0450 80BFFFFF 		.word	-16512
 2087              	.LVL331:
 2088              	.L116:
 414:.././crypto/mbedtls//library/rsa.c **** 
 2089              		.loc 1 414 15 view .LVU568
 2090 0454 5B46     		mov	r3, fp
 2091 0456 AB46     		mov	fp, r5
 2092              	.LVL332:
 2093              	.LBB21:
 2094              	.LBB19:
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2095              		.loc 1 361 5 view .LVU569
 2096 0458 4246     		mov	r2, r8
 2097 045a 5946     		mov	r1, fp
 2098 045c 3800     		movs	r0, r7
 2099 045e 3500     		movs	r5, r6
 2100 0460 1E00     		movs	r6, r3
 2101              	.LVL333:
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2102              		.loc 1 361 5 is_stmt 1 view .LVU570
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2103              		.loc 1 361 5 view .LVU571
 2104 0462 FFF7FEFF 		bl	mbedtls_mpi_inv_mod
 2105              	.LVL334:
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2106              		.loc 1 361 5 is_stmt 0 view .LVU572
 2107 0466 041E     		subs	r4, r0, #0
 2108              	.LVL335:
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2109              		.loc 1 361 5 view .LVU573
 2110 0468 00D0     		beq	.LCB1917
 2111 046a 05E6     		b	.L81	@long jump
 2112              	.LCB1917:
 361:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_exp_mod( &ctx->Vi, &ctx->Vi, &ctx->E, &ctx->N, &ctx->RN ) );
 2113              		.loc 1 361 5 is_stmt 1 view .LVU574
 362:.././crypto/mbedtls//library/rsa.c **** 
 2114              		.loc 1 362 5 view .LVU575
 362:.././crypto/mbedtls//library/rsa.c **** 
 2115              		.loc 1 362 5 view .LVU576
 2116 046c 2B00     		movs	r3, r5
 2117 046e 2A00     		movs	r2, r5
 2118 0470 6833     		adds	r3, r3, #104
 2119 0472 0093     		str	r3, [sp]
 2120 0474 3900     		movs	r1, r7
 2121 0476 4346     		mov	r3, r8
 2122 0478 3800     		movs	r0, r7
 2123              	.LVL336:
 362:.././crypto/mbedtls//library/rsa.c **** 
 2124              		.loc 1 362 5 is_stmt 0 view .LVU577
 2125 047a 1432     		adds	r2, r2, #20
 2126 047c FFF7FEFF 		bl	mbedtls_mpi_exp_mod
 2127              	.LVL337:
 2128 0480 041E     		subs	r4, r0, #0
 2129              	.LVL338:
 362:.././crypto/mbedtls//library/rsa.c **** 
 2130              		.loc 1 362 5 view .LVU578
 2131              	.LBE19:
 2132              	.LBE21:
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 2133              		.loc 1 449 9 view .LVU579
 2134 0482 00D1     		bne	.LCB1948
 2135 0484 AEE6     		b	.L65	@long jump
 2136              	.LCB1948:
 2137 0486 F7E5     		b	.L81
 2138              	.LVL339:
 2139              	.L110:
 449:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &T, &T, &ctx->Vi ) );
 2140              		.loc 1 449 9 view .LVU580
 2141 0488 18AB     		add	r3, sp, #96
 2142 048a 9946     		mov	r9, r3
 2143 048c 1BAB     		add	r3, sp, #108
 2144 048e 9A46     		mov	r10, r3
 2145 0490 F2E5     		b	.L81
 2146              	.L69:
 528:.././crypto/mbedtls//library/rsa.c ****     }
 2147              		.loc 1 528 9 is_stmt 1 view .LVU581
 531:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_write_binary( &T, output, olen ) );
 2148              		.loc 1 531 5 view .LVU582
 2149              	.LVL340:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2150              		.loc 1 532 5 view .LVU583
 532:.././crypto/mbedtls//library/rsa.c **** 
 2151              		.loc 1 532 5 view .LVU584
 2152 0492 6A68     		ldr	r2, [r5, #4]
 2153 0494 2899     		ldr	r1, [sp, #160]
 2154 0496 06A8     		add	r0, sp, #24
 2155              	.LVL341:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2156              		.loc 1 532 5 is_stmt 0 view .LVU585
 2157 0498 FFF7FEFF 		bl	mbedtls_mpi_write_binary
 2158              	.LVL342:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2159              		.loc 1 532 5 view .LVU586
 2160 049c 0400     		movs	r4, r0
 2161              	.LVL343:
 532:.././crypto/mbedtls//library/rsa.c **** 
 2162              		.loc 1 532 5 is_stmt 1 view .LVU587
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2163              		.loc 1 540 5 view .LVU588
 2164 049e 06A8     		add	r0, sp, #24
 2165              	.LVL344:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2166              		.loc 1 540 5 is_stmt 0 view .LVU589
 2167 04a0 FFF7FEFF 		bl	mbedtls_mpi_free
 2168              	.LVL345:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2169              		.loc 1 540 29 is_stmt 1 view .LVU590
 2170 04a4 09A8     		add	r0, sp, #36
 2171 04a6 FFF7FEFF 		bl	mbedtls_mpi_free
 2172              	.LVL346:
 540:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &P1 ); mbedtls_mpi_free( &Q1 ); mbedtls_mpi_free( &R );
 2173              		.loc 1 540 54 view .LVU591
 2174 04aa 0CA8     		add	r0, sp, #48
 2175 04ac FFF7FEFF 		bl	mbedtls_mpi_free
 2176              	.LVL347:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2177              		.loc 1 541 5 view .LVU592
 2178 04b0 0FA8     		add	r0, sp, #60
 2179 04b2 FFF7FEFF 		bl	mbedtls_mpi_free
 2180              	.LVL348:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2181              		.loc 1 541 30 view .LVU593
 2182 04b6 12A8     		add	r0, sp, #72
 2183 04b8 FFF7FEFF 		bl	mbedtls_mpi_free
 2184              	.LVL349:
 541:.././crypto/mbedtls//library/rsa.c **** 
 2185              		.loc 1 541 55 view .LVU594
 2186 04bc 15A8     		add	r0, sp, #84
 2187 04be FFF7FEFF 		bl	mbedtls_mpi_free
 2188              	.LVL350:
 543:.././crypto/mbedtls//library/rsa.c ****     {
 2189              		.loc 1 543 5 view .LVU595
 2190 04c2 F1E5     		b	.L73
 2191              		.cfi_endproc
 2192              	.LFE21:
 2194              		.section	.text.mbedtls_rsa_rsaes_pkcs1_v15_encrypt,"ax",%progbits
 2195              		.align	1
 2196              		.p2align 2,,3
 2197              		.global	mbedtls_rsa_rsaes_pkcs1_v15_encrypt
 2198              		.syntax unified
 2199              		.code	16
 2200              		.thumb_func
 2201              		.fpu softvfp
 2203              	mbedtls_rsa_rsaes_pkcs1_v15_encrypt:
 2204              	.LVL351:
 2205              	.LFB22:
 558:.././crypto/mbedtls//library/rsa.c **** 
 559:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
 560:.././crypto/mbedtls//library/rsa.c **** /**
 561:.././crypto/mbedtls//library/rsa.c ****  * Generate and apply the MGF1 operation (from PKCS#1 v2.1) to a buffer.
 562:.././crypto/mbedtls//library/rsa.c ****  *
 563:.././crypto/mbedtls//library/rsa.c ****  * \param dst       buffer to mask
 564:.././crypto/mbedtls//library/rsa.c ****  * \param dlen      length of destination buffer
 565:.././crypto/mbedtls//library/rsa.c ****  * \param src       source of the mask generation
 566:.././crypto/mbedtls//library/rsa.c ****  * \param slen      length of the source buffer
 567:.././crypto/mbedtls//library/rsa.c ****  * \param md_ctx    message digest context to use
 568:.././crypto/mbedtls//library/rsa.c ****  */
 569:.././crypto/mbedtls//library/rsa.c **** static void mgf_mask( unsigned char *dst, size_t dlen, unsigned char *src,
 570:.././crypto/mbedtls//library/rsa.c ****                       size_t slen, mbedtls_md_context_t *md_ctx )
 571:.././crypto/mbedtls//library/rsa.c **** {
 572:.././crypto/mbedtls//library/rsa.c ****     unsigned char mask[MBEDTLS_MD_MAX_SIZE];
 573:.././crypto/mbedtls//library/rsa.c ****     unsigned char counter[4];
 574:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p;
 575:.././crypto/mbedtls//library/rsa.c ****     unsigned int hlen;
 576:.././crypto/mbedtls//library/rsa.c ****     size_t i, use_len;
 577:.././crypto/mbedtls//library/rsa.c **** 
 578:.././crypto/mbedtls//library/rsa.c ****     memset( mask, 0, MBEDTLS_MD_MAX_SIZE );
 579:.././crypto/mbedtls//library/rsa.c ****     memset( counter, 0, 4 );
 580:.././crypto/mbedtls//library/rsa.c **** 
 581:.././crypto/mbedtls//library/rsa.c ****     hlen = mbedtls_md_get_size( md_ctx->md_info );
 582:.././crypto/mbedtls//library/rsa.c **** 
 583:.././crypto/mbedtls//library/rsa.c ****     /* Generate and apply dbMask */
 584:.././crypto/mbedtls//library/rsa.c ****     p = dst;
 585:.././crypto/mbedtls//library/rsa.c **** 
 586:.././crypto/mbedtls//library/rsa.c ****     while( dlen > 0 )
 587:.././crypto/mbedtls//library/rsa.c ****     {
 588:.././crypto/mbedtls//library/rsa.c ****         use_len = hlen;
 589:.././crypto/mbedtls//library/rsa.c ****         if( dlen < hlen )
 590:.././crypto/mbedtls//library/rsa.c ****             use_len = dlen;
 591:.././crypto/mbedtls//library/rsa.c **** 
 592:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_starts( md_ctx );
 593:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_update( md_ctx, src, slen );
 594:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_update( md_ctx, counter, 4 );
 595:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_finish( md_ctx, mask );
 596:.././crypto/mbedtls//library/rsa.c **** 
 597:.././crypto/mbedtls//library/rsa.c ****         for( i = 0; i < use_len; ++i )
 598:.././crypto/mbedtls//library/rsa.c ****             *p++ ^= mask[i];
 599:.././crypto/mbedtls//library/rsa.c **** 
 600:.././crypto/mbedtls//library/rsa.c ****         counter[3]++;
 601:.././crypto/mbedtls//library/rsa.c **** 
 602:.././crypto/mbedtls//library/rsa.c ****         dlen -= use_len;
 603:.././crypto/mbedtls//library/rsa.c ****     }
 604:.././crypto/mbedtls//library/rsa.c **** 
 605:.././crypto/mbedtls//library/rsa.c ****     mbedtls_zeroize( mask, sizeof( mask ) );
 606:.././crypto/mbedtls//library/rsa.c **** }
 607:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V21 */
 608:.././crypto/mbedtls//library/rsa.c **** 
 609:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
 610:.././crypto/mbedtls//library/rsa.c **** /*
 611:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSAES-OAEP-ENCRYPT function
 612:.././crypto/mbedtls//library/rsa.c ****  */
 613:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsaes_oaep_encrypt( mbedtls_rsa_context *ctx,
 614:.././crypto/mbedtls//library/rsa.c ****                             int (*f_rng)(void *, unsigned char *, size_t),
 615:.././crypto/mbedtls//library/rsa.c ****                             void *p_rng,
 616:.././crypto/mbedtls//library/rsa.c ****                             int mode,
 617:.././crypto/mbedtls//library/rsa.c ****                             const unsigned char *label, size_t label_len,
 618:.././crypto/mbedtls//library/rsa.c ****                             size_t ilen,
 619:.././crypto/mbedtls//library/rsa.c ****                             const unsigned char *input,
 620:.././crypto/mbedtls//library/rsa.c ****                             unsigned char *output )
 621:.././crypto/mbedtls//library/rsa.c **** {
 622:.././crypto/mbedtls//library/rsa.c ****     size_t olen;
 623:.././crypto/mbedtls//library/rsa.c ****     int ret;
 624:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p = output;
 625:.././crypto/mbedtls//library/rsa.c ****     unsigned int hlen;
 626:.././crypto/mbedtls//library/rsa.c ****     const mbedtls_md_info_t *md_info;
 627:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_context_t md_ctx;
 628:.././crypto/mbedtls//library/rsa.c **** 
 629:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V21 )
 630:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 631:.././crypto/mbedtls//library/rsa.c **** 
 632:.././crypto/mbedtls//library/rsa.c ****     if( f_rng == NULL )
 633:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 634:.././crypto/mbedtls//library/rsa.c **** 
 635:.././crypto/mbedtls//library/rsa.c ****     md_info = mbedtls_md_info_from_type( (mbedtls_md_type_t) ctx->hash_id );
 636:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
 637:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 638:.././crypto/mbedtls//library/rsa.c **** 
 639:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
 640:.././crypto/mbedtls//library/rsa.c ****     hlen = mbedtls_md_get_size( md_info );
 641:.././crypto/mbedtls//library/rsa.c **** 
 642:.././crypto/mbedtls//library/rsa.c ****     /* first comparison checks for overflow */
 643:.././crypto/mbedtls//library/rsa.c ****     if( ilen + 2 * hlen + 2 < ilen || olen < ilen + 2 * hlen + 2 )
 644:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 645:.././crypto/mbedtls//library/rsa.c **** 
 646:.././crypto/mbedtls//library/rsa.c ****     memset( output, 0, olen );
 647:.././crypto/mbedtls//library/rsa.c **** 
 648:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0;
 649:.././crypto/mbedtls//library/rsa.c **** 
 650:.././crypto/mbedtls//library/rsa.c ****     /* Generate a random octet string seed */
 651:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = f_rng( p_rng, p, hlen ) ) != 0 )
 652:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_RNG_FAILED + ret );
 653:.././crypto/mbedtls//library/rsa.c **** 
 654:.././crypto/mbedtls//library/rsa.c ****     p += hlen;
 655:.././crypto/mbedtls//library/rsa.c **** 
 656:.././crypto/mbedtls//library/rsa.c ****     /* Construct DB */
 657:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md( md_info, label, label_len, p );
 658:.././crypto/mbedtls//library/rsa.c ****     p += hlen;
 659:.././crypto/mbedtls//library/rsa.c ****     p += olen - 2 * hlen - 2 - ilen;
 660:.././crypto/mbedtls//library/rsa.c ****     *p++ = 1;
 661:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 662:.././crypto/mbedtls//library/rsa.c **** 
 663:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_init( &md_ctx );
 664:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_md_setup( &md_ctx, md_info, 0 ) ) != 0 )
 665:.././crypto/mbedtls//library/rsa.c ****     {
 666:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
 667:.././crypto/mbedtls//library/rsa.c ****         return( ret );
 668:.././crypto/mbedtls//library/rsa.c ****     }
 669:.././crypto/mbedtls//library/rsa.c **** 
 670:.././crypto/mbedtls//library/rsa.c ****     /* maskedDB: Apply dbMask to DB */
 671:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( output + hlen + 1, olen - hlen - 1, output + 1, hlen,
 672:.././crypto/mbedtls//library/rsa.c ****                &md_ctx );
 673:.././crypto/mbedtls//library/rsa.c **** 
 674:.././crypto/mbedtls//library/rsa.c ****     /* maskedSeed: Apply seedMask to seed */
 675:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( output + 1, hlen, output + hlen + 1, olen - hlen - 1,
 676:.././crypto/mbedtls//library/rsa.c ****                &md_ctx );
 677:.././crypto/mbedtls//library/rsa.c **** 
 678:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_free( &md_ctx );
 679:.././crypto/mbedtls//library/rsa.c **** 
 680:.././crypto/mbedtls//library/rsa.c ****     return( ( mode == MBEDTLS_RSA_PUBLIC )
 681:.././crypto/mbedtls//library/rsa.c ****             ? mbedtls_rsa_public(  ctx, output, output )
 682:.././crypto/mbedtls//library/rsa.c ****             : mbedtls_rsa_private( ctx, f_rng, p_rng, output, output ) );
 683:.././crypto/mbedtls//library/rsa.c **** }
 684:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V21 */
 685:.././crypto/mbedtls//library/rsa.c **** 
 686:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
 687:.././crypto/mbedtls//library/rsa.c **** /*
 688:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSAES-PKCS1-V1_5-ENCRYPT function
 689:.././crypto/mbedtls//library/rsa.c ****  */
 690:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsaes_pkcs1_v15_encrypt( mbedtls_rsa_context *ctx,
 691:.././crypto/mbedtls//library/rsa.c ****                                  int (*f_rng)(void *, unsigned char *, size_t),
 692:.././crypto/mbedtls//library/rsa.c ****                                  void *p_rng,
 693:.././crypto/mbedtls//library/rsa.c ****                                  int mode, size_t ilen,
 694:.././crypto/mbedtls//library/rsa.c ****                                  const unsigned char *input,
 695:.././crypto/mbedtls//library/rsa.c ****                                  unsigned char *output )
 696:.././crypto/mbedtls//library/rsa.c **** {
 2206              		.loc 1 696 1 view -0
 2207              		.cfi_startproc
 2208              		@ args = 12, pretend = 0, frame = 0
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 697:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2210              		.loc 1 697 5 view .LVU597
 698:.././crypto/mbedtls//library/rsa.c ****     int ret;
 2211              		.loc 1 698 5 view .LVU598
 699:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p = output;
 2212              		.loc 1 699 5 view .LVU599
 696:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2213              		.loc 1 696 1 is_stmt 0 view .LVU600
 2214 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2215              	.LCFI11:
 2216              		.cfi_def_cfa_offset 20
 2217              		.cfi_offset 4, -20
 2218              		.cfi_offset 5, -16
 2219              		.cfi_offset 6, -12
 2220              		.cfi_offset 7, -8
 2221              		.cfi_offset 14, -4
 2222 0002 5746     		mov	r7, r10
 2223 0004 DE46     		mov	lr, fp
 2224 0006 4E46     		mov	r6, r9
 2225 0008 C0B5     		push	{r6, r7, lr}
 2226              	.LCFI12:
 2227              		.cfi_def_cfa_offset 32
 2228              		.cfi_offset 9, -32
 2229              		.cfi_offset 10, -28
 2230              		.cfi_offset 11, -24
 2231 000a 82B0     		sub	sp, sp, #8
 2232              	.LCFI13:
 2233              		.cfi_def_cfa_offset 40
 696:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2234              		.loc 1 696 1 view .LVU601
 2235 000c 1700     		movs	r7, r2
 2236 000e 0C9A     		ldr	r2, [sp, #48]
 2237              	.LVL352:
 696:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2238              		.loc 1 696 1 view .LVU602
 2239 0010 8346     		mov	fp, r0
 2240 0012 0E00     		movs	r6, r1
 2241 0014 9246     		mov	r10, r2
 2242              	.LVL353:
 700:.././crypto/mbedtls//library/rsa.c **** 
 701:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V15 )
 2243              		.loc 1 701 5 is_stmt 1 view .LVU603
 2244              		.loc 1 701 7 is_stmt 0 view .LVU604
 2245 0016 012B     		cmp	r3, #1
 2246 0018 68D0     		beq	.L149
 2247              	.LVL354:
 2248              	.L120:
 702:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 703:.././crypto/mbedtls//library/rsa.c **** 
 704:.././crypto/mbedtls//library/rsa.c ****     // We don't check p_rng because it won't be dereferenced here
 705:.././crypto/mbedtls//library/rsa.c ****     if( f_rng == NULL || input == NULL || output == NULL )
 2249              		.loc 1 705 5 is_stmt 1 view .LVU605
 2250              		.loc 1 705 7 is_stmt 0 view .LVU606
 2251 001a 002E     		cmp	r6, #0
 2252 001c 6AD0     		beq	.L136
 2253              		.loc 1 705 23 discriminator 1 view .LVU607
 2254 001e 0B9A     		ldr	r2, [sp, #44]
 2255 0020 002A     		cmp	r2, #0
 2256 0022 67D0     		beq	.L136
 2257              		.loc 1 705 40 discriminator 2 view .LVU608
 2258 0024 5246     		mov	r2, r10
 2259 0026 002A     		cmp	r2, #0
 2260 0028 64D0     		beq	.L136
 2261              	.LVL355:
 706:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 707:.././crypto/mbedtls//library/rsa.c **** 
 708:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
 2262              		.loc 1 708 5 is_stmt 1 view .LVU609
 2263              		.loc 1 708 10 is_stmt 0 view .LVU610
 2264 002a 5A46     		mov	r2, fp
 2265              	.LVL356:
 709:.././crypto/mbedtls//library/rsa.c **** 
 710:.././crypto/mbedtls//library/rsa.c ****     /* first comparison checks for overflow */
 711:.././crypto/mbedtls//library/rsa.c ****     if( ilen + 11 < ilen || olen < ilen + 11 )
 2266              		.loc 1 711 7 view .LVU611
 2267 002c 0A99     		ldr	r1, [sp, #40]
 2268              	.LVL357:
 708:.././crypto/mbedtls//library/rsa.c **** 
 2269              		.loc 1 708 10 view .LVU612
 2270 002e 5268     		ldr	r2, [r2, #4]
 2271              	.LVL358:
 2272              		.loc 1 711 5 is_stmt 1 view .LVU613
 2273              		.loc 1 711 7 is_stmt 0 view .LVU614
 2274 0030 0C31     		adds	r1, r1, #12
 2275 0032 5FD8     		bhi	.L136
 2276              		.loc 1 711 41 discriminator 1 view .LVU615
 2277 0034 0A99     		ldr	r1, [sp, #40]
 2278 0036 0B31     		adds	r1, r1, #11
 2279              		.loc 1 711 26 discriminator 1 view .LVU616
 2280 0038 9142     		cmp	r1, r2
 2281 003a 5BD8     		bhi	.L136
 712:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 713:.././crypto/mbedtls//library/rsa.c **** 
 714:.././crypto/mbedtls//library/rsa.c ****     nb_pad = olen - 3 - ilen;
 2282              		.loc 1 714 5 is_stmt 1 view .LVU617
 2283              		.loc 1 714 12 is_stmt 0 view .LVU618
 2284 003c 0A99     		ldr	r1, [sp, #40]
 715:.././crypto/mbedtls//library/rsa.c **** 
 716:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0;
 2285              		.loc 1 716 10 view .LVU619
 2286 003e 5046     		mov	r0, r10
 2287              	.LVL359:
 714:.././crypto/mbedtls//library/rsa.c **** 
 2288              		.loc 1 714 12 view .LVU620
 2289 0040 521A     		subs	r2, r2, r1
 2290              	.LVL360:
 2291              		.loc 1 716 10 view .LVU621
 2292 0042 0021     		movs	r1, #0
 714:.././crypto/mbedtls//library/rsa.c **** 
 2293              		.loc 1 714 12 view .LVU622
 2294 0044 033A     		subs	r2, r2, #3
 2295              	.LVL361:
 2296              		.loc 1 716 5 is_stmt 1 view .LVU623
 2297              		.loc 1 716 10 is_stmt 0 view .LVU624
 2298 0046 0170     		strb	r1, [r0]
 2299              	.LVL362:
 717:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PUBLIC )
 2300              		.loc 1 717 5 is_stmt 1 view .LVU625
 2301              		.loc 1 717 7 is_stmt 0 view .LVU626
 2302 0048 002B     		cmp	r3, #0
 2303 004a 22D0     		beq	.L150
 718:.././crypto/mbedtls//library/rsa.c ****     {
 719:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_RSA_CRYPT;
 720:.././crypto/mbedtls//library/rsa.c **** 
 721:.././crypto/mbedtls//library/rsa.c ****         while( nb_pad-- > 0 )
 722:.././crypto/mbedtls//library/rsa.c ****         {
 723:.././crypto/mbedtls//library/rsa.c ****             int rng_dl = 100;
 724:.././crypto/mbedtls//library/rsa.c **** 
 725:.././crypto/mbedtls//library/rsa.c ****             do {
 726:.././crypto/mbedtls//library/rsa.c ****                 ret = f_rng( p_rng, p, 1 );
 727:.././crypto/mbedtls//library/rsa.c ****             } while( *p == 0 && --rng_dl && ret == 0 );
 728:.././crypto/mbedtls//library/rsa.c **** 
 729:.././crypto/mbedtls//library/rsa.c ****             /* Check if RNG failed to generate data */
 730:.././crypto/mbedtls//library/rsa.c ****             if( rng_dl == 0 || ret != 0 )
 731:.././crypto/mbedtls//library/rsa.c ****                 return( MBEDTLS_ERR_RSA_RNG_FAILED + ret );
 732:.././crypto/mbedtls//library/rsa.c **** 
 733:.././crypto/mbedtls//library/rsa.c ****             p++;
 734:.././crypto/mbedtls//library/rsa.c ****         }
 735:.././crypto/mbedtls//library/rsa.c ****     }
 736:.././crypto/mbedtls//library/rsa.c ****     else
 737:.././crypto/mbedtls//library/rsa.c ****     {
 738:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_RSA_SIGN;
 2304              		.loc 1 738 9 is_stmt 1 view .LVU627
 2305              		.loc 1 738 14 is_stmt 0 view .LVU628
 2306 004c 0123     		movs	r3, #1
 2307              	.LVL363:
 2308              		.loc 1 738 14 view .LVU629
 2309 004e 5146     		mov	r1, r10
 2310              		.loc 1 738 11 view .LVU630
 2311 0050 0230     		adds	r0, r0, #2
 2312              	.LVL364:
 2313              		.loc 1 738 14 view .LVU631
 2314 0052 4B70     		strb	r3, [r1, #1]
 739:.././crypto/mbedtls//library/rsa.c **** 
 740:.././crypto/mbedtls//library/rsa.c ****         while( nb_pad-- > 0 )
 2315              		.loc 1 740 9 is_stmt 1 view .LVU632
 2316              		.loc 1 740 14 view .LVU633
 2317              		.loc 1 740 14 is_stmt 0 view .LVU634
 2318 0054 002A     		cmp	r2, #0
 2319 0056 08D0     		beq	.L128
 2320 0058 0300     		movs	r3, r0
 741:.././crypto/mbedtls//library/rsa.c ****             *p++ = 0xFF;
 2321              		.loc 1 741 18 view .LVU635
 2322 005a FF24     		movs	r4, #255
 2323 005c 911C     		adds	r1, r2, #2
 2324 005e 5144     		add	r1, r1, r10
 2325              	.LVL365:
 2326              	.L129:
 2327              		.loc 1 741 13 is_stmt 1 view .LVU636
 2328              		.loc 1 741 18 is_stmt 0 view .LVU637
 2329 0060 1C70     		strb	r4, [r3]
 740:.././crypto/mbedtls//library/rsa.c ****             *p++ = 0xFF;
 2330              		.loc 1 740 14 is_stmt 1 view .LVU638
 740:.././crypto/mbedtls//library/rsa.c ****             *p++ = 0xFF;
 2331              		.loc 1 740 14 is_stmt 0 view .LVU639
 2332 0062 0133     		adds	r3, r3, #1
 2333              	.LVL366:
 740:.././crypto/mbedtls//library/rsa.c ****             *p++ = 0xFF;
 2334              		.loc 1 740 14 view .LVU640
 2335 0064 8B42     		cmp	r3, r1
 2336 0066 FBD1     		bne	.L129
 2337 0068 8018     		adds	r0, r0, r2
 2338              	.LVL367:
 2339              	.L128:
 742:.././crypto/mbedtls//library/rsa.c ****     }
 743:.././crypto/mbedtls//library/rsa.c **** 
 744:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0;
 2340              		.loc 1 744 5 is_stmt 1 view .LVU641
 2341              		.loc 1 744 10 is_stmt 0 view .LVU642
 2342 006a 0023     		movs	r3, #0
 745:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2343              		.loc 1 745 5 view .LVU643
 2344 006c 0A9A     		ldr	r2, [sp, #40]
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2345              		.loc 1 744 10 view .LVU644
 2346 006e 0370     		strb	r3, [r0]
 2347              		.loc 1 745 5 is_stmt 1 view .LVU645
 2348 0070 0B99     		ldr	r1, [sp, #44]
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2349              		.loc 1 744 7 is_stmt 0 view .LVU646
 2350 0072 0130     		adds	r0, r0, #1
 2351              	.LVL368:
 2352              		.loc 1 745 5 view .LVU647
 2353 0074 FFF7FEFF 		bl	memcpy
 2354              	.LVL369:
 746:.././crypto/mbedtls//library/rsa.c **** 
 747:.././crypto/mbedtls//library/rsa.c ****     return( ( mode == MBEDTLS_RSA_PUBLIC )
 2355              		.loc 1 747 5 is_stmt 1 view .LVU648
 748:.././crypto/mbedtls//library/rsa.c ****             ? mbedtls_rsa_public(  ctx, output, output )
 749:.././crypto/mbedtls//library/rsa.c ****             : mbedtls_rsa_private( ctx, f_rng, p_rng, output, output ) );
 2356              		.loc 1 749 15 is_stmt 0 view .LVU649
 2357 0078 5346     		mov	r3, r10
 2358 007a 3A00     		movs	r2, r7
 2359 007c 3100     		movs	r1, r6
 2360 007e 5846     		mov	r0, fp
 2361 0080 0093     		str	r3, [sp]
 2362 0082 FFF7FEFF 		bl	mbedtls_rsa_private
 2363              	.LVL370:
 2364              	.L119:
 750:.././crypto/mbedtls//library/rsa.c **** }
 2365              		.loc 1 750 1 view .LVU650
 2366 0086 02B0     		add	sp, sp, #8
 2367              		@ sp needed
 2368              	.LVL371:
 2369              	.LVL372:
 2370              	.LVL373:
 2371              		.loc 1 750 1 view .LVU651
 2372 0088 1CBC     		pop	{r2, r3, r4}
 2373 008a 9146     		mov	r9, r2
 2374 008c 9A46     		mov	r10, r3
 2375 008e A346     		mov	fp, r4
 2376 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 2377              	.LVL374:
 2378              	.L150:
 719:.././crypto/mbedtls//library/rsa.c **** 
 2379              		.loc 1 719 9 is_stmt 1 view .LVU652
 719:.././crypto/mbedtls//library/rsa.c **** 
 2380              		.loc 1 719 14 is_stmt 0 view .LVU653
 2381 0092 0223     		movs	r3, #2
 2382              	.LVL375:
 719:.././crypto/mbedtls//library/rsa.c **** 
 2383              		.loc 1 719 11 view .LVU654
 2384 0094 851C     		adds	r5, r0, #2
 2385              	.LVL376:
 719:.././crypto/mbedtls//library/rsa.c **** 
 2386              		.loc 1 719 14 view .LVU655
 2387 0096 4370     		strb	r3, [r0, #1]
 721:.././crypto/mbedtls//library/rsa.c ****         {
 2388              		.loc 1 721 9 is_stmt 1 view .LVU656
 721:.././crypto/mbedtls//library/rsa.c ****         {
 2389              		.loc 1 721 14 view .LVU657
 721:.././crypto/mbedtls//library/rsa.c ****         {
 2390              		.loc 1 721 14 is_stmt 0 view .LVU658
 2391 0098 002A     		cmp	r2, #0
 2392 009a 2DD0     		beq	.L137
 2393 009c 0232     		adds	r2, r2, #2
 2394 009e 5244     		add	r2, r2, r10
 2395 00a0 9146     		mov	r9, r2
 2396              	.L127:
 696:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2397              		.loc 1 696 1 view .LVU659
 2398 00a2 6424     		movs	r4, #100
 2399 00a4 04E0     		b	.L126
 2400              	.LVL377:
 2401              	.L151:
 696:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen;
 2402              		.loc 1 696 1 view .LVU660
 2403 00a6 013C     		subs	r4, r4, #1
 2404              	.LVL378:
 2405              	.LBB22:
 727:.././crypto/mbedtls//library/rsa.c **** 
 2406              		.loc 1 727 30 discriminator 1 view .LVU661
 2407 00a8 002C     		cmp	r4, #0
 2408 00aa 1BD0     		beq	.L125
 2409              	.LVL379:
 727:.././crypto/mbedtls//library/rsa.c **** 
 2410              		.loc 1 727 42 discriminator 2 view .LVU662
 2411 00ac 0028     		cmp	r0, #0
 2412 00ae 19D1     		bne	.L125
 2413              	.LVL380:
 2414              	.L126:
 725:.././crypto/mbedtls//library/rsa.c ****                 ret = f_rng( p_rng, p, 1 );
 2415              		.loc 1 725 13 is_stmt 1 discriminator 3 view .LVU663
 726:.././crypto/mbedtls//library/rsa.c ****             } while( *p == 0 && --rng_dl && ret == 0 );
 2416              		.loc 1 726 17 discriminator 3 view .LVU664
 726:.././crypto/mbedtls//library/rsa.c ****             } while( *p == 0 && --rng_dl && ret == 0 );
 2417              		.loc 1 726 23 is_stmt 0 discriminator 3 view .LVU665
 2418 00b0 0122     		movs	r2, #1
 2419 00b2 2900     		movs	r1, r5
 2420 00b4 3800     		movs	r0, r7
 2421 00b6 B047     		blx	r6
 2422              	.LVL381:
 727:.././crypto/mbedtls//library/rsa.c **** 
 2423              		.loc 1 727 20 is_stmt 1 discriminator 3 view .LVU666
 727:.././crypto/mbedtls//library/rsa.c **** 
 2424              		.loc 1 727 13 is_stmt 0 discriminator 3 view .LVU667
 2425 00b8 2B78     		ldrb	r3, [r5]
 2426 00ba 002B     		cmp	r3, #0
 2427 00bc F3D0     		beq	.L151
 730:.././crypto/mbedtls//library/rsa.c ****                 return( MBEDTLS_ERR_RSA_RNG_FAILED + ret );
 2428              		.loc 1 730 13 is_stmt 1 view .LVU668
 730:.././crypto/mbedtls//library/rsa.c ****                 return( MBEDTLS_ERR_RSA_RNG_FAILED + ret );
 2429              		.loc 1 730 29 is_stmt 0 view .LVU669
 2430 00be 0028     		cmp	r0, #0
 2431 00c0 10D1     		bne	.L125
 733:.././crypto/mbedtls//library/rsa.c ****         }
 2432              		.loc 1 733 13 is_stmt 1 view .LVU670
 733:.././crypto/mbedtls//library/rsa.c ****         }
 2433              		.loc 1 733 14 is_stmt 0 view .LVU671
 2434 00c2 0135     		adds	r5, r5, #1
 2435              	.LVL382:
 733:.././crypto/mbedtls//library/rsa.c ****         }
 2436              		.loc 1 733 14 view .LVU672
 2437              	.LBE22:
 721:.././crypto/mbedtls//library/rsa.c ****         {
 2438              		.loc 1 721 14 is_stmt 1 view .LVU673
 721:.././crypto/mbedtls//library/rsa.c ****         {
 2439              		.loc 1 721 14 is_stmt 0 view .LVU674
 2440 00c4 4D45     		cmp	r5, r9
 2441 00c6 ECD1     		bne	.L127
 2442              	.LVL383:
 2443              	.L123:
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2444              		.loc 1 744 5 is_stmt 1 view .LVU675
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2445              		.loc 1 744 10 is_stmt 0 view .LVU676
 2446 00c8 4A46     		mov	r2, r9
 2447 00ca 0023     		movs	r3, #0
 745:.././crypto/mbedtls//library/rsa.c **** 
 2448              		.loc 1 745 5 view .LVU677
 2449 00cc 0B99     		ldr	r1, [sp, #44]
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2450              		.loc 1 744 10 view .LVU678
 2451 00ce 1370     		strb	r3, [r2]
 745:.././crypto/mbedtls//library/rsa.c **** 
 2452              		.loc 1 745 5 is_stmt 1 view .LVU679
 744:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, input, ilen );
 2453              		.loc 1 744 7 is_stmt 0 view .LVU680
 2454 00d0 501C     		adds	r0, r2, #1
 2455              	.LVL384:
 745:.././crypto/mbedtls//library/rsa.c **** 
 2456              		.loc 1 745 5 view .LVU681
 2457 00d2 0A9A     		ldr	r2, [sp, #40]
 2458 00d4 FFF7FEFF 		bl	memcpy
 2459              	.LVL385:
 747:.././crypto/mbedtls//library/rsa.c ****             ? mbedtls_rsa_public(  ctx, output, output )
 2460              		.loc 1 747 5 is_stmt 1 view .LVU682
 748:.././crypto/mbedtls//library/rsa.c ****             : mbedtls_rsa_private( ctx, f_rng, p_rng, output, output ) );
 2461              		.loc 1 748 15 is_stmt 0 view .LVU683
 2462 00d8 5246     		mov	r2, r10
 2463 00da 5146     		mov	r1, r10
 2464 00dc 5846     		mov	r0, fp
 2465 00de FFF7FEFF 		bl	mbedtls_rsa_public
 2466              	.LVL386:
 2467 00e2 D0E7     		b	.L119
 2468              	.LVL387:
 2469              	.L125:
 2470              	.LBB23:
 731:.././crypto/mbedtls//library/rsa.c **** 
 2471              		.loc 1 731 17 is_stmt 1 view .LVU684
 731:.././crypto/mbedtls//library/rsa.c **** 
 2472              		.loc 1 731 52 is_stmt 0 view .LVU685
 2473 00e4 054B     		ldr	r3, .L152
 2474 00e6 9C46     		mov	ip, r3
 2475 00e8 6044     		add	r0, r0, ip
 2476              	.LVL388:
 731:.././crypto/mbedtls//library/rsa.c **** 
 2477              		.loc 1 731 52 view .LVU686
 2478 00ea CCE7     		b	.L119
 2479              	.LVL389:
 2480              	.L149:
 731:.././crypto/mbedtls//library/rsa.c **** 
 2481              		.loc 1 731 52 view .LVU687
 2482              	.LBE23:
 701:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2483              		.loc 1 701 43 discriminator 1 view .LVU688
 2484 00ec A422     		movs	r2, #164
 2485              	.LVL390:
 701:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2486              		.loc 1 701 37 discriminator 1 view .LVU689
 2487 00ee 8258     		ldr	r2, [r0, r2]
 2488 00f0 002A     		cmp	r2, #0
 2489 00f2 92D0     		beq	.L120
 2490              	.LVL391:
 2491              	.L136:
 702:.././crypto/mbedtls//library/rsa.c **** 
 2492              		.loc 1 702 15 view .LVU690
 2493 00f4 0248     		ldr	r0, .L152+4
 2494              	.LVL392:
 702:.././crypto/mbedtls//library/rsa.c **** 
 2495              		.loc 1 702 15 view .LVU691
 2496 00f6 C6E7     		b	.L119
 2497              	.LVL393:
 2498              	.L137:
 719:.././crypto/mbedtls//library/rsa.c **** 
 2499              		.loc 1 719 11 view .LVU692
 2500 00f8 A946     		mov	r9, r5
 2501 00fa E5E7     		b	.L123
 2502              	.L153:
 2503              		.align	2
 2504              	.L152:
 2505 00fc 80BBFFFF 		.word	-17536
 2506 0100 80BFFFFF 		.word	-16512
 2507              		.cfi_endproc
 2508              	.LFE22:
 2510              		.section	.text.mbedtls_rsa_pkcs1_encrypt,"ax",%progbits
 2511              		.align	1
 2512              		.p2align 2,,3
 2513              		.global	mbedtls_rsa_pkcs1_encrypt
 2514              		.syntax unified
 2515              		.code	16
 2516              		.thumb_func
 2517              		.fpu softvfp
 2519              	mbedtls_rsa_pkcs1_encrypt:
 2520              	.LVL394:
 2521              	.LFB23:
 751:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V15 */
 752:.././crypto/mbedtls//library/rsa.c **** 
 753:.././crypto/mbedtls//library/rsa.c **** /*
 754:.././crypto/mbedtls//library/rsa.c ****  * Add the message padding, then do an RSA operation
 755:.././crypto/mbedtls//library/rsa.c ****  */
 756:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_pkcs1_encrypt( mbedtls_rsa_context *ctx,
 757:.././crypto/mbedtls//library/rsa.c ****                        int (*f_rng)(void *, unsigned char *, size_t),
 758:.././crypto/mbedtls//library/rsa.c ****                        void *p_rng,
 759:.././crypto/mbedtls//library/rsa.c ****                        int mode, size_t ilen,
 760:.././crypto/mbedtls//library/rsa.c ****                        const unsigned char *input,
 761:.././crypto/mbedtls//library/rsa.c ****                        unsigned char *output )
 762:.././crypto/mbedtls//library/rsa.c **** {
 2522              		.loc 1 762 1 is_stmt 1 view -0
 2523              		.cfi_startproc
 2524              		@ args = 12, pretend = 0, frame = 0
 2525              		@ frame_needed = 0, uses_anonymous_args = 0
 763:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 2526              		.loc 1 763 5 view .LVU694
 762:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 2527              		.loc 1 762 1 is_stmt 0 view .LVU695
 2528 0000 10B5     		push	{r4, lr}
 2529              	.LCFI14:
 2530              		.cfi_def_cfa_offset 8
 2531              		.cfi_offset 4, -8
 2532              		.cfi_offset 14, -4
 2533              		.loc 1 763 16 view .LVU696
 2534 0002 A424     		movs	r4, #164
 2535              		.loc 1 763 5 view .LVU697
 2536 0004 0459     		ldr	r4, [r0, r4]
 762:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 2537              		.loc 1 762 1 view .LVU698
 2538 0006 84B0     		sub	sp, sp, #16
 2539              	.LCFI15:
 2540              		.cfi_def_cfa_offset 24
 2541              		.loc 1 763 5 view .LVU699
 2542 0008 002C     		cmp	r4, #0
 2543 000a 09D1     		bne	.L156
 764:.././crypto/mbedtls//library/rsa.c ****     {
 765:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
 766:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V15:
 767:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsaes_pkcs1_v15_encrypt( ctx, f_rng, p_rng, mode, ilen,
 2544              		.loc 1 767 13 is_stmt 1 view .LVU700
 2545              		.loc 1 767 20 is_stmt 0 view .LVU701
 2546 000c 089C     		ldr	r4, [sp, #32]
 2547 000e 0294     		str	r4, [sp, #8]
 2548 0010 079C     		ldr	r4, [sp, #28]
 2549 0012 0194     		str	r4, [sp, #4]
 2550 0014 069C     		ldr	r4, [sp, #24]
 2551 0016 0094     		str	r4, [sp]
 2552 0018 FFF7FEFF 		bl	mbedtls_rsa_rsaes_pkcs1_v15_encrypt
 2553              	.LVL395:
 2554              	.L154:
 768:.././crypto/mbedtls//library/rsa.c ****                                                 input, output );
 769:.././crypto/mbedtls//library/rsa.c **** #endif
 770:.././crypto/mbedtls//library/rsa.c **** 
 771:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
 772:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V21:
 773:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsaes_oaep_encrypt( ctx, f_rng, p_rng, mode, NULL, 0,
 774:.././crypto/mbedtls//library/rsa.c ****                                            ilen, input, output );
 775:.././crypto/mbedtls//library/rsa.c **** #endif
 776:.././crypto/mbedtls//library/rsa.c **** 
 777:.././crypto/mbedtls//library/rsa.c ****         default:
 778:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 779:.././crypto/mbedtls//library/rsa.c ****     }
 780:.././crypto/mbedtls//library/rsa.c **** }
 2555              		.loc 1 780 1 view .LVU702
 2556 001c 04B0     		add	sp, sp, #16
 2557              		@ sp needed
 2558 001e 10BD     		pop	{r4, pc}
 2559              	.LVL396:
 2560              	.L156:
 778:.././crypto/mbedtls//library/rsa.c ****     }
 2561              		.loc 1 778 19 view .LVU703
 2562 0020 0048     		ldr	r0, .L157
 2563              	.LVL397:
 778:.././crypto/mbedtls//library/rsa.c ****     }
 2564              		.loc 1 778 19 view .LVU704
 2565 0022 FBE7     		b	.L154
 2566              	.L158:
 2567              		.align	2
 2568              	.L157:
 2569 0024 00BFFFFF 		.word	-16640
 2570              		.cfi_endproc
 2571              	.LFE23:
 2573              		.section	.text.mbedtls_rsa_rsaes_pkcs1_v15_decrypt,"ax",%progbits
 2574              		.align	1
 2575              		.p2align 2,,3
 2576              		.global	mbedtls_rsa_rsaes_pkcs1_v15_decrypt
 2577              		.syntax unified
 2578              		.code	16
 2579              		.thumb_func
 2580              		.fpu softvfp
 2582              	mbedtls_rsa_rsaes_pkcs1_v15_decrypt:
 2583              	.LVL398:
 2584              	.LFB24:
 781:.././crypto/mbedtls//library/rsa.c **** 
 782:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
 783:.././crypto/mbedtls//library/rsa.c **** /*
 784:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSAES-OAEP-DECRYPT function
 785:.././crypto/mbedtls//library/rsa.c ****  */
 786:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsaes_oaep_decrypt( mbedtls_rsa_context *ctx,
 787:.././crypto/mbedtls//library/rsa.c ****                             int (*f_rng)(void *, unsigned char *, size_t),
 788:.././crypto/mbedtls//library/rsa.c ****                             void *p_rng,
 789:.././crypto/mbedtls//library/rsa.c ****                             int mode,
 790:.././crypto/mbedtls//library/rsa.c ****                             const unsigned char *label, size_t label_len,
 791:.././crypto/mbedtls//library/rsa.c ****                             size_t *olen,
 792:.././crypto/mbedtls//library/rsa.c ****                             const unsigned char *input,
 793:.././crypto/mbedtls//library/rsa.c ****                             unsigned char *output,
 794:.././crypto/mbedtls//library/rsa.c ****                             size_t output_max_len )
 795:.././crypto/mbedtls//library/rsa.c **** {
 796:.././crypto/mbedtls//library/rsa.c ****     int ret;
 797:.././crypto/mbedtls//library/rsa.c ****     size_t ilen, i, pad_len;
 798:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p, bad, pad_done;
 799:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
 800:.././crypto/mbedtls//library/rsa.c ****     unsigned char lhash[MBEDTLS_MD_MAX_SIZE];
 801:.././crypto/mbedtls//library/rsa.c ****     unsigned int hlen;
 802:.././crypto/mbedtls//library/rsa.c ****     const mbedtls_md_info_t *md_info;
 803:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_context_t md_ctx;
 804:.././crypto/mbedtls//library/rsa.c **** 
 805:.././crypto/mbedtls//library/rsa.c ****     /*
 806:.././crypto/mbedtls//library/rsa.c ****      * Parameters sanity checks
 807:.././crypto/mbedtls//library/rsa.c ****      */
 808:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V21 )
 809:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 810:.././crypto/mbedtls//library/rsa.c **** 
 811:.././crypto/mbedtls//library/rsa.c ****     ilen = ctx->len;
 812:.././crypto/mbedtls//library/rsa.c **** 
 813:.././crypto/mbedtls//library/rsa.c ****     if( ilen < 16 || ilen > sizeof( buf ) )
 814:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 815:.././crypto/mbedtls//library/rsa.c **** 
 816:.././crypto/mbedtls//library/rsa.c ****     md_info = mbedtls_md_info_from_type( (mbedtls_md_type_t) ctx->hash_id );
 817:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
 818:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 819:.././crypto/mbedtls//library/rsa.c **** 
 820:.././crypto/mbedtls//library/rsa.c ****     hlen = mbedtls_md_get_size( md_info );
 821:.././crypto/mbedtls//library/rsa.c **** 
 822:.././crypto/mbedtls//library/rsa.c ****     // checking for integer underflow
 823:.././crypto/mbedtls//library/rsa.c ****     if( 2 * hlen + 2 > ilen )
 824:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 825:.././crypto/mbedtls//library/rsa.c **** 
 826:.././crypto/mbedtls//library/rsa.c ****     /*
 827:.././crypto/mbedtls//library/rsa.c ****      * RSA operation
 828:.././crypto/mbedtls//library/rsa.c ****      */
 829:.././crypto/mbedtls//library/rsa.c ****     ret = ( mode == MBEDTLS_RSA_PUBLIC )
 830:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 831:.././crypto/mbedtls//library/rsa.c ****           : mbedtls_rsa_private( ctx, f_rng, p_rng, input, buf );
 832:.././crypto/mbedtls//library/rsa.c **** 
 833:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 834:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 835:.././crypto/mbedtls//library/rsa.c **** 
 836:.././crypto/mbedtls//library/rsa.c ****     /*
 837:.././crypto/mbedtls//library/rsa.c ****      * Unmask data and generate lHash
 838:.././crypto/mbedtls//library/rsa.c ****      */
 839:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_init( &md_ctx );
 840:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_md_setup( &md_ctx, md_info, 0 ) ) != 0 )
 841:.././crypto/mbedtls//library/rsa.c ****     {
 842:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
 843:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 844:.././crypto/mbedtls//library/rsa.c ****     }
 845:.././crypto/mbedtls//library/rsa.c **** 
 846:.././crypto/mbedtls//library/rsa.c **** 
 847:.././crypto/mbedtls//library/rsa.c ****     /* Generate lHash */
 848:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md( md_info, label, label_len, lhash );
 849:.././crypto/mbedtls//library/rsa.c **** 
 850:.././crypto/mbedtls//library/rsa.c ****     /* seed: Apply seedMask to maskedSeed */
 851:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( buf + 1, hlen, buf + hlen + 1, ilen - hlen - 1,
 852:.././crypto/mbedtls//library/rsa.c ****                &md_ctx );
 853:.././crypto/mbedtls//library/rsa.c **** 
 854:.././crypto/mbedtls//library/rsa.c ****     /* DB: Apply dbMask to maskedDB */
 855:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( buf + hlen + 1, ilen - hlen - 1, buf + 1, hlen,
 856:.././crypto/mbedtls//library/rsa.c ****                &md_ctx );
 857:.././crypto/mbedtls//library/rsa.c **** 
 858:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_free( &md_ctx );
 859:.././crypto/mbedtls//library/rsa.c **** 
 860:.././crypto/mbedtls//library/rsa.c ****     /*
 861:.././crypto/mbedtls//library/rsa.c ****      * Check contents, in "constant-time"
 862:.././crypto/mbedtls//library/rsa.c ****      */
 863:.././crypto/mbedtls//library/rsa.c ****     p = buf;
 864:.././crypto/mbedtls//library/rsa.c ****     bad = 0;
 865:.././crypto/mbedtls//library/rsa.c **** 
 866:.././crypto/mbedtls//library/rsa.c ****     bad |= *p++; /* First byte must be 0 */
 867:.././crypto/mbedtls//library/rsa.c **** 
 868:.././crypto/mbedtls//library/rsa.c ****     p += hlen; /* Skip seed */
 869:.././crypto/mbedtls//library/rsa.c **** 
 870:.././crypto/mbedtls//library/rsa.c ****     /* Check lHash */
 871:.././crypto/mbedtls//library/rsa.c ****     for( i = 0; i < hlen; i++ )
 872:.././crypto/mbedtls//library/rsa.c ****         bad |= lhash[i] ^ *p++;
 873:.././crypto/mbedtls//library/rsa.c **** 
 874:.././crypto/mbedtls//library/rsa.c ****     /* Get zero-padding len, but always read till end of buffer
 875:.././crypto/mbedtls//library/rsa.c ****      * (minus one, for the 01 byte) */
 876:.././crypto/mbedtls//library/rsa.c ****     pad_len = 0;
 877:.././crypto/mbedtls//library/rsa.c ****     pad_done = 0;
 878:.././crypto/mbedtls//library/rsa.c ****     for( i = 0; i < ilen - 2 * hlen - 2; i++ )
 879:.././crypto/mbedtls//library/rsa.c ****     {
 880:.././crypto/mbedtls//library/rsa.c ****         pad_done |= p[i];
 881:.././crypto/mbedtls//library/rsa.c ****         pad_len += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 882:.././crypto/mbedtls//library/rsa.c ****     }
 883:.././crypto/mbedtls//library/rsa.c **** 
 884:.././crypto/mbedtls//library/rsa.c ****     p += pad_len;
 885:.././crypto/mbedtls//library/rsa.c ****     bad |= *p++ ^ 0x01;
 886:.././crypto/mbedtls//library/rsa.c **** 
 887:.././crypto/mbedtls//library/rsa.c ****     /*
 888:.././crypto/mbedtls//library/rsa.c ****      * The only information "leaked" is whether the padding was correct or not
 889:.././crypto/mbedtls//library/rsa.c ****      * (eg, no data is copied if it was not correct). This meets the
 890:.././crypto/mbedtls//library/rsa.c ****      * recommendations in PKCS#1 v2.2: an opponent cannot distinguish between
 891:.././crypto/mbedtls//library/rsa.c ****      * the different error conditions.
 892:.././crypto/mbedtls//library/rsa.c ****      */
 893:.././crypto/mbedtls//library/rsa.c ****     if( bad != 0 )
 894:.././crypto/mbedtls//library/rsa.c ****     {
 895:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_INVALID_PADDING;
 896:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 897:.././crypto/mbedtls//library/rsa.c ****     }
 898:.././crypto/mbedtls//library/rsa.c **** 
 899:.././crypto/mbedtls//library/rsa.c ****     if( ilen - ( p - buf ) > output_max_len )
 900:.././crypto/mbedtls//library/rsa.c ****     {
 901:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE;
 902:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 903:.././crypto/mbedtls//library/rsa.c ****     }
 904:.././crypto/mbedtls//library/rsa.c **** 
 905:.././crypto/mbedtls//library/rsa.c ****     *olen = ilen - (p - buf);
 906:.././crypto/mbedtls//library/rsa.c ****     memcpy( output, p, *olen );
 907:.././crypto/mbedtls//library/rsa.c ****     ret = 0;
 908:.././crypto/mbedtls//library/rsa.c **** 
 909:.././crypto/mbedtls//library/rsa.c **** cleanup:
 910:.././crypto/mbedtls//library/rsa.c ****     mbedtls_zeroize( buf, sizeof( buf ) );
 911:.././crypto/mbedtls//library/rsa.c ****     mbedtls_zeroize( lhash, sizeof( lhash ) );
 912:.././crypto/mbedtls//library/rsa.c **** 
 913:.././crypto/mbedtls//library/rsa.c ****     return( ret );
 914:.././crypto/mbedtls//library/rsa.c **** }
 915:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V21 */
 916:.././crypto/mbedtls//library/rsa.c **** 
 917:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
 918:.././crypto/mbedtls//library/rsa.c **** /*
 919:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSAES-PKCS1-V1_5-DECRYPT function
 920:.././crypto/mbedtls//library/rsa.c ****  */
 921:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsaes_pkcs1_v15_decrypt( mbedtls_rsa_context *ctx,
 922:.././crypto/mbedtls//library/rsa.c ****                                  int (*f_rng)(void *, unsigned char *, size_t),
 923:.././crypto/mbedtls//library/rsa.c ****                                  void *p_rng,
 924:.././crypto/mbedtls//library/rsa.c ****                                  int mode, size_t *olen,
 925:.././crypto/mbedtls//library/rsa.c ****                                  const unsigned char *input,
 926:.././crypto/mbedtls//library/rsa.c ****                                  unsigned char *output,
 927:.././crypto/mbedtls//library/rsa.c ****                                  size_t output_max_len)
 928:.././crypto/mbedtls//library/rsa.c **** {
 2585              		.loc 1 928 1 is_stmt 1 view -0
 2586              		.cfi_startproc
 2587              		@ args = 16, pretend = 0, frame = 1024
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
 929:.././crypto/mbedtls//library/rsa.c ****     int ret;
 2589              		.loc 1 929 5 view .LVU706
 930:.././crypto/mbedtls//library/rsa.c ****     size_t ilen, pad_count = 0, i;
 2590              		.loc 1 930 5 view .LVU707
 931:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p, bad, pad_done = 0;
 2591              		.loc 1 931 5 view .LVU708
 932:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
 2592              		.loc 1 932 5 view .LVU709
 933:.././crypto/mbedtls//library/rsa.c **** 
 934:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V15 )
 2593              		.loc 1 934 5 view .LVU710
 928:.././crypto/mbedtls//library/rsa.c ****     int ret;
 2594              		.loc 1 928 1 is_stmt 0 view .LVU711
 2595 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2596              	.LCFI16:
 2597              		.cfi_def_cfa_offset 20
 2598              		.cfi_offset 4, -20
 2599              		.cfi_offset 5, -16
 2600              		.cfi_offset 6, -12
 2601              		.cfi_offset 7, -8
 2602              		.cfi_offset 14, -4
 2603 0002 CE46     		mov	lr, r9
 2604 0004 4746     		mov	r7, r8
 2605 0006 80B5     		push	{r7, lr}
 2606              	.LCFI17:
 2607              		.cfi_def_cfa_offset 28
 2608              		.cfi_offset 8, -28
 2609              		.cfi_offset 9, -24
 2610 0008 614C     		ldr	r4, .L189
 2611 000a A544     		add	sp, sp, r4
 2612              	.LCFI18:
 2613              		.cfi_def_cfa_offset 1064
 2614              		.loc 1 934 7 view .LVU712
 2615 000c 012B     		cmp	r3, #1
 2616 000e 63D0     		beq	.L187
 935:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 936:.././crypto/mbedtls//library/rsa.c **** 
 937:.././crypto/mbedtls//library/rsa.c ****     ilen = ctx->len;
 2617              		.loc 1 937 5 is_stmt 1 view .LVU713
 2618              		.loc 1 937 10 is_stmt 0 view .LVU714
 2619 0010 4468     		ldr	r4, [r0, #4]
 938:.././crypto/mbedtls//library/rsa.c **** 
 939:.././crypto/mbedtls//library/rsa.c ****     if( ilen < 16 || ilen > sizeof( buf ) )
 2620              		.loc 1 939 19 view .LVU715
 2621 0012 2500     		movs	r5, r4
 937:.././crypto/mbedtls//library/rsa.c **** 
 2622              		.loc 1 937 10 view .LVU716
 2623 0014 A146     		mov	r9, r4
 2624              	.LVL399:
 2625              		.loc 1 939 5 is_stmt 1 view .LVU717
 2626              		.loc 1 939 7 is_stmt 0 view .LVU718
 2627 0016 FC24     		movs	r4, #252
 2628              	.LVL400:
 2629              		.loc 1 939 19 view .LVU719
 2630 0018 103D     		subs	r5, r5, #16
 2631              	.LVL401:
 2632              		.loc 1 939 7 view .LVU720
 2633 001a A400     		lsls	r4, r4, #2
 2634 001c A542     		cmp	r5, r4
 2635 001e 00D9     		bls	.LCB2481
 2636 0020 B3E0     		b	.L178	@long jump
 2637              	.LCB2481:
 940:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 941:.././crypto/mbedtls//library/rsa.c **** 
 942:.././crypto/mbedtls//library/rsa.c ****     ret = ( mode == MBEDTLS_RSA_PUBLIC )
 2638              		.loc 1 942 5 is_stmt 1 view .LVU721
 943:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 2639              		.loc 1 943 13 is_stmt 0 view .LVU722
 2640 0022 02AC     		add	r4, sp, #8
 944:.././crypto/mbedtls//library/rsa.c ****           : mbedtls_rsa_private( ctx, f_rng, p_rng, input, buf );
 2641              		.loc 1 944 11 view .LVU723
 2642 0024 002B     		cmp	r3, #0
 2643 0026 00D0     		beq	.LCB2485
 2644 0028 A5E0     		b	.L163	@long jump
 2645              	.LCB2485:
 943:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 2646              		.loc 1 943 13 view .LVU724
 2647 002a FFAB     		add	r3, sp, #1020
 2648              	.LVL402:
 943:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 2649              		.loc 1 943 13 view .LVU725
 2650 002c 2200     		movs	r2, r4
 2651              	.LVL403:
 943:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 2652              		.loc 1 943 13 view .LVU726
 2653 002e 196B     		ldr	r1, [r3, #48]
 2654              	.LVL404:
 943:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, input, buf )
 2655              		.loc 1 943 13 view .LVU727
 2656 0030 3033     		adds	r3, r3, #48
 2657 0032 FFF7FEFF 		bl	mbedtls_rsa_public
 2658              	.LVL405:
 945:.././crypto/mbedtls//library/rsa.c **** 
 946:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 2659              		.loc 1 946 5 is_stmt 1 view .LVU728
 2660              		.loc 1 946 7 is_stmt 0 view .LVU729
 2661 0036 0028     		cmp	r0, #0
 2662 0038 40D1     		bne	.L164
 2663              	.L186:
 947:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 948:.././crypto/mbedtls//library/rsa.c **** 
 949:.././crypto/mbedtls//library/rsa.c ****     p = buf;
 2664              		.loc 1 949 5 is_stmt 1 view .LVU730
 2665              	.LVL406:
 950:.././crypto/mbedtls//library/rsa.c ****     bad = 0;
 2666              		.loc 1 950 5 view .LVU731
 951:.././crypto/mbedtls//library/rsa.c **** 
 952:.././crypto/mbedtls//library/rsa.c ****     /*
 953:.././crypto/mbedtls//library/rsa.c ****      * Check and get padding len in "constant-time"
 954:.././crypto/mbedtls//library/rsa.c ****      */
 955:.././crypto/mbedtls//library/rsa.c ****     bad |= *p++; /* First byte must be 0 */
 2667              		.loc 1 955 5 view .LVU732
 956:.././crypto/mbedtls//library/rsa.c **** 
 957:.././crypto/mbedtls//library/rsa.c ****     /* This test does not depend on secret data */
 958:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE )
 959:.././crypto/mbedtls//library/rsa.c ****     {
 960:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++ ^ MBEDTLS_RSA_CRYPT;
 961:.././crypto/mbedtls//library/rsa.c **** 
 962:.././crypto/mbedtls//library/rsa.c ****         /* Get padding len, but always read till end of buffer
 963:.././crypto/mbedtls//library/rsa.c ****          * (minus one, for the 00 byte) */
 964:.././crypto/mbedtls//library/rsa.c ****         for( i = 0; i < ilen - 3; i++ )
 965:.././crypto/mbedtls//library/rsa.c ****         {
 966:.././crypto/mbedtls//library/rsa.c ****             pad_done  |= ((p[i] | (unsigned char)-p[i]) >> 7) ^ 1;
 967:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 968:.././crypto/mbedtls//library/rsa.c ****         }
 969:.././crypto/mbedtls//library/rsa.c **** 
 970:.././crypto/mbedtls//library/rsa.c ****         p += pad_count;
 971:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++; /* Must be zero */
 972:.././crypto/mbedtls//library/rsa.c ****     }
 973:.././crypto/mbedtls//library/rsa.c ****     else
 974:.././crypto/mbedtls//library/rsa.c ****     {
 975:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++ ^ MBEDTLS_RSA_SIGN;
 2668              		.loc 1 975 21 is_stmt 0 view .LVU733
 2669 003a 0122     		movs	r2, #1
 2670 003c 6778     		ldrb	r7, [r4, #1]
 955:.././crypto/mbedtls//library/rsa.c **** 
 2671              		.loc 1 955 12 view .LVU734
 2672 003e 2378     		ldrb	r3, [r4]
 2673              	.LVL407:
 958:.././crypto/mbedtls//library/rsa.c ****     {
 2674              		.loc 1 958 5 is_stmt 1 view .LVU735
 2675              		.loc 1 975 9 view .LVU736
 2676              		.loc 1 975 21 is_stmt 0 view .LVU737
 2677 0040 5740     		eors	r7, r2
 2678              		.loc 1 975 13 view .LVU738
 2679 0042 1F43     		orrs	r7, r3
 2680 0044 FBB2     		uxtb	r3, r7
 2681              	.LVL408:
 2682              		.loc 1 975 13 view .LVU739
 2683 0046 9C46     		mov	ip, r3
 2684              	.LVL409:
 976:.././crypto/mbedtls//library/rsa.c **** 
 977:.././crypto/mbedtls//library/rsa.c ****         /* Get padding len, but always read till end of buffer
 978:.././crypto/mbedtls//library/rsa.c ****          * (minus one, for the 00 byte) */
 979:.././crypto/mbedtls//library/rsa.c ****         for( i = 0; i < ilen - 3; i++ )
 2685              		.loc 1 979 9 is_stmt 1 view .LVU740
 2686              		.loc 1 979 21 view .LVU741
 2687              		.loc 1 979 30 is_stmt 0 view .LVU742
 2688 0048 4B46     		mov	r3, r9
 931:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
 2689              		.loc 1 931 28 view .LVU743
 2690 004a 0020     		movs	r0, #0
 2691              	.LVL410:
 2692              		.loc 1 979 16 view .LVU744
 2693 004c 0021     		movs	r1, #0
 930:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p, bad, pad_done = 0;
 2694              		.loc 1 930 18 view .LVU745
 2695 004e 0022     		movs	r2, #0
 980:.././crypto/mbedtls//library/rsa.c ****         {
 981:.././crypto/mbedtls//library/rsa.c ****             pad_done |= ( p[i] != 0xFF );
 982:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2696              		.loc 1 982 37 view .LVU746
 2697 0050 0126     		movs	r6, #1
 979:.././crypto/mbedtls//library/rsa.c ****         {
 2698              		.loc 1 979 30 view .LVU747
 2699 0052 DF1E     		subs	r7, r3, #3
 2700              	.LVL411:
 2701              	.L168:
 981:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2702              		.loc 1 981 13 is_stmt 1 discriminator 3 view .LVU748
 981:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2703              		.loc 1 981 28 is_stmt 0 discriminator 3 view .LVU749
 2704 0054 6318     		adds	r3, r4, r1
 981:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2705              		.loc 1 981 32 discriminator 3 view .LVU750
 2706 0056 9B78     		ldrb	r3, [r3, #2]
 979:.././crypto/mbedtls//library/rsa.c ****         {
 2707              		.loc 1 979 36 discriminator 3 view .LVU751
 2708 0058 0131     		adds	r1, r1, #1
 2709              	.LVL412:
 981:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2710              		.loc 1 981 32 discriminator 3 view .LVU752
 2711 005a FF3B     		subs	r3, r3, #255
 2712 005c 5D1E     		subs	r5, r3, #1
 2713 005e AB41     		sbcs	r3, r3, r5
 981:.././crypto/mbedtls//library/rsa.c ****             pad_count += ( pad_done == 0 );
 2714              		.loc 1 981 22 discriminator 3 view .LVU753
 2715 0060 1843     		orrs	r0, r3
 2716              	.LVL413:
 2717              		.loc 1 982 13 is_stmt 1 discriminator 3 view .LVU754
 2718              		.loc 1 982 37 is_stmt 0 discriminator 3 view .LVU755
 2719 0062 0300     		movs	r3, r0
 2720 0064 7340     		eors	r3, r6
 2721 0066 DBB2     		uxtb	r3, r3
 2722              		.loc 1 982 23 discriminator 3 view .LVU756
 2723 0068 D218     		adds	r2, r2, r3
 2724              	.LVL414:
 979:.././crypto/mbedtls//library/rsa.c ****         {
 2725              		.loc 1 979 35 is_stmt 1 discriminator 3 view .LVU757
 979:.././crypto/mbedtls//library/rsa.c ****         {
 2726              		.loc 1 979 21 discriminator 3 view .LVU758
 979:.././crypto/mbedtls//library/rsa.c ****         {
 2727              		.loc 1 979 9 is_stmt 0 discriminator 3 view .LVU759
 2728 006a B942     		cmp	r1, r7
 2729 006c F2D3     		bcc	.L168
 983:.././crypto/mbedtls//library/rsa.c ****         }
 984:.././crypto/mbedtls//library/rsa.c **** 
 985:.././crypto/mbedtls//library/rsa.c ****         p += pad_count;
 2730              		.loc 1 985 9 is_stmt 1 view .LVU760
 2731              	.LVL415:
 986:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++; /* Must be zero */
 2732              		.loc 1 986 9 view .LVU761
 2733              		.loc 1 986 18 is_stmt 0 view .LVU762
 2734 006e FFAB     		add	r3, sp, #1020
 2735 0070 0C33     		adds	r3, r3, #12
 2736 0072 9918     		adds	r1, r3, r2
 2737              	.LVL416:
 2738              		.loc 1 986 18 view .LVU763
 2739 0074 474B     		ldr	r3, .L189+4
 2740              		.loc 1 986 16 view .LVU764
 2741 0076 4848     		ldr	r0, .L189+8
 2742              	.LVL417:
 2743              		.loc 1 986 18 view .LVU765
 2744 0078 9846     		mov	r8, r3
 2745 007a 4144     		add	r1, r1, r8
 2746              	.LVL418:
 2747              		.loc 1 986 16 view .LVU766
 2748 007c 8046     		mov	r8, r0
 2749              		.loc 1 986 13 view .LVU767
 2750 007e 6746     		mov	r7, ip
 2751              		.loc 1 986 16 view .LVU768
 2752 0080 FFAB     		add	r3, sp, #1020
 2753 0082 0C33     		adds	r3, r3, #12
 2754 0084 9B18     		adds	r3, r3, r2
 2755 0086 4344     		add	r3, r3, r8
 2756              		.loc 1 986 13 view .LVU769
 2757 0088 1B78     		ldrb	r3, [r3]
 987:.././crypto/mbedtls//library/rsa.c ****     }
 988:.././crypto/mbedtls//library/rsa.c **** 
 989:.././crypto/mbedtls//library/rsa.c ****     bad |= ( pad_count < 8 );
 2758              		.loc 1 989 24 view .LVU770
 2759 008a 0720     		movs	r0, #7
 986:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++; /* Must be zero */
 2760              		.loc 1 986 13 view .LVU771
 2761 008c 1F43     		orrs	r7, r3
 2762              	.LVL419:
 2763              		.loc 1 989 5 is_stmt 1 view .LVU772
 990:.././crypto/mbedtls//library/rsa.c **** 
 991:.././crypto/mbedtls//library/rsa.c ****     if( bad )
 2764              		.loc 1 991 5 view .LVU773
 989:.././crypto/mbedtls//library/rsa.c **** 
 2765              		.loc 1 989 24 is_stmt 0 view .LVU774
 2766 008e 0023     		movs	r3, #0
 2767 0090 9042     		cmp	r0, r2
 2768 0092 5B41     		adcs	r3, r3, r3
 989:.././crypto/mbedtls//library/rsa.c **** 
 2769              		.loc 1 989 9 view .LVU775
 2770 0094 1F43     		orrs	r7, r3
 2771              	.LVL420:
 2772              		.loc 1 991 7 view .LVU776
 2773 0096 6AD1     		bne	.L176
 2774              	.LVL421:
 2775              	.L188:
 992:.././crypto/mbedtls//library/rsa.c ****     {
 993:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_INVALID_PADDING;
 994:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 995:.././crypto/mbedtls//library/rsa.c ****     }
 996:.././crypto/mbedtls//library/rsa.c **** 
 997:.././crypto/mbedtls//library/rsa.c ****     if( ilen - ( p - buf ) > output_max_len )
 2776              		.loc 1 997 5 is_stmt 1 view .LVU777
 2777              		.loc 1 997 14 is_stmt 0 view .LVU778
 2778 0098 4B46     		mov	r3, r9
 2779              		.loc 1 997 20 view .LVU779
 2780 009a 0A1B     		subs	r2, r1, r4
 2781              	.LVL422:
 2782              		.loc 1 997 14 view .LVU780
 2783 009c 9A1A     		subs	r2, r3, r2
 2784              		.loc 1 997 7 view .LVU781
 2785 009e FFAB     		add	r3, sp, #1020
 2786 00a0 3833     		adds	r3, r3, #56
 2787 00a2 1B68     		ldr	r3, [r3]
 2788 00a4 9A42     		cmp	r2, r3
 2789 00a6 64D8     		bhi	.L177
 998:.././crypto/mbedtls//library/rsa.c ****     {
 999:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_OUTPUT_TOO_LARGE;
1000:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
1001:.././crypto/mbedtls//library/rsa.c ****     }
1002:.././crypto/mbedtls//library/rsa.c **** 
1003:.././crypto/mbedtls//library/rsa.c ****     *olen = ilen - (p - buf);
 2790              		.loc 1 1003 5 is_stmt 1 view .LVU782
 2791              		.loc 1 1003 11 is_stmt 0 view .LVU783
 2792 00a8 FFAB     		add	r3, sp, #1020
 2793 00aa 2C33     		adds	r3, r3, #44
 2794 00ac 1B68     		ldr	r3, [r3]
 2795 00ae 1A60     		str	r2, [r3]
1004:.././crypto/mbedtls//library/rsa.c ****     memcpy( output, p, *olen );
 2796              		.loc 1 1004 5 is_stmt 1 view .LVU784
 2797 00b0 FFAB     		add	r3, sp, #1020
 2798 00b2 586B     		ldr	r0, [r3, #52]
 2799 00b4 3433     		adds	r3, r3, #52
 2800 00b6 FFF7FEFF 		bl	memcpy
 2801              	.LVL423:
1005:.././crypto/mbedtls//library/rsa.c ****     ret = 0;
 2802              		.loc 1 1005 5 view .LVU785
 2803              		.loc 1 1005 9 is_stmt 0 view .LVU786
 2804 00ba 0020     		movs	r0, #0
 2805              	.LVL424:
 2806              	.L164:
1006:.././crypto/mbedtls//library/rsa.c **** 
1007:.././crypto/mbedtls//library/rsa.c **** cleanup:
1008:.././crypto/mbedtls//library/rsa.c ****     mbedtls_zeroize( buf, sizeof( buf ) );
 2807              		.loc 1 1008 5 is_stmt 1 view .LVU787
 2808              	.LBB24:
 2809              	.LBI24:
  70:.././crypto/mbedtls//library/rsa.c ****     volatile unsigned char *p = (unsigned char*)v; while( n-- ) *p++ = 0;
 2810              		.loc 1 70 13 view .LVU788
 2811              	.LBB25:
  71:.././crypto/mbedtls//library/rsa.c **** }
 2812              		.loc 1 71 5 view .LVU789
  71:.././crypto/mbedtls//library/rsa.c **** }
 2813              		.loc 1 71 52 view .LVU790
  71:.././crypto/mbedtls//library/rsa.c **** }
 2814              		.loc 1 71 57 view .LVU791
  71:.././crypto/mbedtls//library/rsa.c **** }
 2815              		.loc 1 71 70 is_stmt 0 view .LVU792
 2816 00bc 0021     		movs	r1, #0
 2817              	.LVL425:
 2818              	.L169:
  71:.././crypto/mbedtls//library/rsa.c **** }
 2819              		.loc 1 71 65 is_stmt 1 view .LVU793
 2820 00be 2300     		movs	r3, r4
  71:.././crypto/mbedtls//library/rsa.c **** }
 2821              		.loc 1 71 70 is_stmt 0 view .LVU794
 2822 00c0 1970     		strb	r1, [r3]
  71:.././crypto/mbedtls//library/rsa.c **** }
 2823              		.loc 1 71 57 view .LVU795
 2824 00c2 FFAB     		add	r3, sp, #1020
  71:.././crypto/mbedtls//library/rsa.c **** }
 2825              		.loc 1 71 67 view .LVU796
 2826 00c4 0134     		adds	r4, r4, #1
 2827              	.LVL426:
  71:.././crypto/mbedtls//library/rsa.c **** }
 2828              		.loc 1 71 57 is_stmt 1 view .LVU797
  71:.././crypto/mbedtls//library/rsa.c **** }
 2829              		.loc 1 71 57 is_stmt 0 view .LVU798
 2830 00c6 0C33     		adds	r3, r3, #12
 2831 00c8 9C42     		cmp	r4, r3
 2832 00ca F8D1     		bne	.L169
 2833              	.LVL427:
 2834              	.L159:
  71:.././crypto/mbedtls//library/rsa.c **** }
 2835              		.loc 1 71 57 view .LVU799
 2836              	.LBE25:
 2837              	.LBE24:
1009:.././crypto/mbedtls//library/rsa.c **** 
1010:.././crypto/mbedtls//library/rsa.c ****     return( ret );
1011:.././crypto/mbedtls//library/rsa.c **** }
 2838              		.loc 1 1011 1 view .LVU800
 2839 00cc 334B     		ldr	r3, .L189+12
 2840 00ce 9D44     		add	sp, sp, r3
 2841              		@ sp needed
 2842 00d0 0CBC     		pop	{r2, r3}
 2843 00d2 9046     		mov	r8, r2
 2844 00d4 9946     		mov	r9, r3
 2845 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 2846              	.LVL428:
 2847              	.L187:
 934:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2848              		.loc 1 934 43 discriminator 1 view .LVU801
 2849 00d8 A333     		adds	r3, r3, #163
 2850              	.LVL429:
 934:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2851              		.loc 1 934 37 discriminator 1 view .LVU802
 2852 00da C358     		ldr	r3, [r0, r3]
 2853              	.LVL430:
 934:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2854              		.loc 1 934 37 discriminator 1 view .LVU803
 2855 00dc 002B     		cmp	r3, #0
 2856 00de 54D1     		bne	.L178
 937:.././crypto/mbedtls//library/rsa.c **** 
 2857              		.loc 1 937 5 is_stmt 1 view .LVU804
 937:.././crypto/mbedtls//library/rsa.c **** 
 2858              		.loc 1 937 10 is_stmt 0 view .LVU805
 2859 00e0 4368     		ldr	r3, [r0, #4]
 939:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2860              		.loc 1 939 19 view .LVU806
 2861 00e2 1C00     		movs	r4, r3
 937:.././crypto/mbedtls//library/rsa.c **** 
 2862              		.loc 1 937 10 view .LVU807
 2863 00e4 9946     		mov	r9, r3
 2864              	.LVL431:
 939:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2865              		.loc 1 939 5 is_stmt 1 view .LVU808
 939:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2866              		.loc 1 939 7 is_stmt 0 view .LVU809
 2867 00e6 FC23     		movs	r3, #252
 2868              	.LVL432:
 939:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2869              		.loc 1 939 19 view .LVU810
 2870 00e8 103C     		subs	r4, r4, #16
 2871              	.LVL433:
 939:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 2872              		.loc 1 939 7 view .LVU811
 2873 00ea 9B00     		lsls	r3, r3, #2
 2874 00ec 9C42     		cmp	r4, r3
 2875 00ee 4CD8     		bhi	.L178
 944:.././crypto/mbedtls//library/rsa.c **** 
 2876              		.loc 1 944 13 view .LVU812
 2877 00f0 02AC     		add	r4, sp, #8
 2878 00f2 FFAB     		add	r3, sp, #1020
 2879 00f4 0094     		str	r4, [sp]
 2880 00f6 3033     		adds	r3, r3, #48
 2881 00f8 1B68     		ldr	r3, [r3]
 2882 00fa FFF7FEFF 		bl	mbedtls_rsa_private
 2883              	.LVL434:
 946:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 2884              		.loc 1 946 5 is_stmt 1 view .LVU813
 946:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 2885              		.loc 1 946 7 is_stmt 0 view .LVU814
 2886 00fe 0028     		cmp	r0, #0
 2887 0100 DCD1     		bne	.L164
 949:.././crypto/mbedtls//library/rsa.c ****     bad = 0;
 2888              		.loc 1 949 5 is_stmt 1 view .LVU815
 2889              	.LVL435:
 950:.././crypto/mbedtls//library/rsa.c **** 
 2890              		.loc 1 950 5 view .LVU816
 955:.././crypto/mbedtls//library/rsa.c **** 
 2891              		.loc 1 955 5 view .LVU817
 958:.././crypto/mbedtls//library/rsa.c ****     {
 2892              		.loc 1 958 5 view .LVU818
 960:.././crypto/mbedtls//library/rsa.c **** 
 2893              		.loc 1 960 9 view .LVU819
 960:.././crypto/mbedtls//library/rsa.c **** 
 2894              		.loc 1 960 21 is_stmt 0 view .LVU820
 2895 0102 0223     		movs	r3, #2
 2896 0104 6778     		ldrb	r7, [r4, #1]
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2897              		.loc 1 964 16 view .LVU821
 2898 0106 0021     		movs	r1, #0
 960:.././crypto/mbedtls//library/rsa.c **** 
 2899              		.loc 1 960 21 view .LVU822
 2900 0108 5F40     		eors	r7, r3
 960:.././crypto/mbedtls//library/rsa.c **** 
 2901              		.loc 1 960 13 view .LVU823
 2902 010a 2378     		ldrb	r3, [r4]
 930:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p, bad, pad_done = 0;
 2903              		.loc 1 930 18 view .LVU824
 2904 010c 0022     		movs	r2, #0
 960:.././crypto/mbedtls//library/rsa.c **** 
 2905              		.loc 1 960 13 view .LVU825
 2906 010e 1F43     		orrs	r7, r3
 2907 0110 FBB2     		uxtb	r3, r7
 2908 0112 9C46     		mov	ip, r3
 2909              	.LVL436:
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2910              		.loc 1 964 9 is_stmt 1 view .LVU826
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2911              		.loc 1 964 21 view .LVU827
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2912              		.loc 1 964 30 is_stmt 0 view .LVU828
 2913 0114 4B46     		mov	r3, r9
 931:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
 2914              		.loc 1 931 28 view .LVU829
 2915 0116 0027     		movs	r7, #0
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2916              		.loc 1 966 23 view .LVU830
 2917 0118 0120     		movs	r0, #1
 2918              	.LVL437:
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2919              		.loc 1 964 30 view .LVU831
 2920 011a DE1E     		subs	r6, r3, #3
 2921              	.LVL438:
 2922              	.L166:
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2923              		.loc 1 966 13 is_stmt 1 discriminator 3 view .LVU832
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2924              		.loc 1 966 29 is_stmt 0 discriminator 3 view .LVU833
 2925 011c 6318     		adds	r3, r4, r1
 2926 011e 9B78     		ldrb	r3, [r3, #2]
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2927              		.loc 1 964 36 discriminator 3 view .LVU834
 2928 0120 0131     		adds	r1, r1, #1
 2929              	.LVL439:
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2930              		.loc 1 966 35 discriminator 3 view .LVU835
 2931 0122 5D42     		rsbs	r5, r3, #0
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2932              		.loc 1 966 23 discriminator 3 view .LVU836
 2933 0124 2B43     		orrs	r3, r5
 2934 0126 DBB2     		uxtb	r3, r3
 2935 0128 DB09     		lsrs	r3, r3, #7
 2936 012a 4340     		eors	r3, r0
 2937 012c 1F43     		orrs	r7, r3
 2938              	.LVL440:
 966:.././crypto/mbedtls//library/rsa.c ****             pad_count += ((pad_done | (unsigned char)-pad_done) >> 7) ^ 1;
 2939              		.loc 1 966 23 discriminator 3 view .LVU837
 2940 012e FFB2     		uxtb	r7, r7
 2941              	.LVL441:
 967:.././crypto/mbedtls//library/rsa.c ****         }
 2942              		.loc 1 967 13 is_stmt 1 discriminator 3 view .LVU838
 967:.././crypto/mbedtls//library/rsa.c ****         }
 2943              		.loc 1 967 39 is_stmt 0 discriminator 3 view .LVU839
 2944 0130 7B42     		rsbs	r3, r7, #0
 967:.././crypto/mbedtls//library/rsa.c ****         }
 2945              		.loc 1 967 71 discriminator 3 view .LVU840
 2946 0132 3B43     		orrs	r3, r7
 2947 0134 DBB2     		uxtb	r3, r3
 2948 0136 DB09     		lsrs	r3, r3, #7
 2949 0138 4340     		eors	r3, r0
 2950 013a DBB2     		uxtb	r3, r3
 967:.././crypto/mbedtls//library/rsa.c ****         }
 2951              		.loc 1 967 23 discriminator 3 view .LVU841
 2952 013c D218     		adds	r2, r2, r3
 2953              	.LVL442:
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2954              		.loc 1 964 35 is_stmt 1 discriminator 3 view .LVU842
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2955              		.loc 1 964 21 discriminator 3 view .LVU843
 964:.././crypto/mbedtls//library/rsa.c ****         {
 2956              		.loc 1 964 9 is_stmt 0 discriminator 3 view .LVU844
 2957 013e B142     		cmp	r1, r6
 2958 0140 ECD3     		bcc	.L166
 970:.././crypto/mbedtls//library/rsa.c ****         bad |= *p++; /* Must be zero */
 2959              		.loc 1 970 9 is_stmt 1 view .LVU845
 2960              	.LVL443:
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2961              		.loc 1 971 9 view .LVU846
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2962              		.loc 1 971 18 is_stmt 0 view .LVU847
 2963 0142 FFAB     		add	r3, sp, #1020
 2964 0144 0C33     		adds	r3, r3, #12
 2965 0146 9918     		adds	r1, r3, r2
 2966              	.LVL444:
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2967              		.loc 1 971 18 view .LVU848
 2968 0148 124B     		ldr	r3, .L189+4
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2969              		.loc 1 971 16 view .LVU849
 2970 014a 1348     		ldr	r0, .L189+8
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2971              		.loc 1 971 18 view .LVU850
 2972 014c 9846     		mov	r8, r3
 2973 014e 4144     		add	r1, r1, r8
 2974              	.LVL445:
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2975              		.loc 1 971 16 view .LVU851
 2976 0150 8046     		mov	r8, r0
 2977 0152 FFAB     		add	r3, sp, #1020
 2978 0154 0C33     		adds	r3, r3, #12
 2979 0156 9B18     		adds	r3, r3, r2
 2980 0158 4344     		add	r3, r3, r8
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2981              		.loc 1 971 13 view .LVU852
 2982 015a 1F78     		ldrb	r7, [r3]
 2983              	.LVL446:
 971:.././crypto/mbedtls//library/rsa.c ****     }
 2984              		.loc 1 971 13 view .LVU853
 2985 015c 6346     		mov	r3, ip
 2986 015e 3B43     		orrs	r3, r7
 2987 0160 1F00     		movs	r7, r3
 2988              	.LVL447:
 989:.././crypto/mbedtls//library/rsa.c **** 
 2989              		.loc 1 989 5 is_stmt 1 view .LVU854
 991:.././crypto/mbedtls//library/rsa.c ****     {
 2990              		.loc 1 991 5 view .LVU855
 989:.././crypto/mbedtls//library/rsa.c **** 
 2991              		.loc 1 989 24 is_stmt 0 view .LVU856
 2992 0162 0720     		movs	r0, #7
 2993 0164 0023     		movs	r3, #0
 2994 0166 9042     		cmp	r0, r2
 2995 0168 5B41     		adcs	r3, r3, r3
 989:.././crypto/mbedtls//library/rsa.c **** 
 2996              		.loc 1 989 9 view .LVU857
 2997 016a 1F43     		orrs	r7, r3
 2998              	.LVL448:
 991:.././crypto/mbedtls//library/rsa.c ****     {
 2999              		.loc 1 991 7 view .LVU858
 3000 016c 94D0     		beq	.L188
 3001              	.LVL449:
 3002              	.L176:
 993:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 3003              		.loc 1 993 13 view .LVU859
 3004 016e 0C48     		ldr	r0, .L189+16
 3005 0170 A4E7     		b	.L164
 3006              	.LVL450:
 3007              	.L177:
 999:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 3008              		.loc 1 999 13 view .LVU860
 3009 0172 0C48     		ldr	r0, .L189+20
 3010 0174 A2E7     		b	.L164
 3011              	.LVL451:
 3012              	.L163:
 944:.././crypto/mbedtls//library/rsa.c **** 
 3013              		.loc 1 944 13 view .LVU861
 3014 0176 FFAB     		add	r3, sp, #1020
 3015              	.LVL452:
 944:.././crypto/mbedtls//library/rsa.c **** 
 3016              		.loc 1 944 13 view .LVU862
 3017 0178 0094     		str	r4, [sp]
 3018 017a 3033     		adds	r3, r3, #48
 3019 017c 1B68     		ldr	r3, [r3]
 3020 017e FFF7FEFF 		bl	mbedtls_rsa_private
 3021              	.LVL453:
 946:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 3022              		.loc 1 946 5 is_stmt 1 view .LVU863
 946:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
 3023              		.loc 1 946 7 is_stmt 0 view .LVU864
 3024 0182 0028     		cmp	r0, #0
 3025 0184 00D1     		bne	.LCB2904
 3026 0186 58E7     		b	.L186	@long jump
 3027              	.LCB2904:
 3028 0188 98E7     		b	.L164
 3029              	.LVL454:
 3030              	.L178:
 935:.././crypto/mbedtls//library/rsa.c **** 
 3031              		.loc 1 935 15 view .LVU865
 3032 018a 0748     		ldr	r0, .L189+24
 3033              	.LVL455:
 935:.././crypto/mbedtls//library/rsa.c **** 
 3034              		.loc 1 935 15 view .LVU866
 3035 018c 9EE7     		b	.L159
 3036              	.L190:
 3037 018e C046     		.align	2
 3038              	.L189:
 3039 0190 F4FBFFFF 		.word	-1036
 3040 0194 03FCFFFF 		.word	-1021
 3041 0198 02FCFFFF 		.word	-1022
 3042 019c 0C040000 		.word	1036
 3043 01a0 00BFFFFF 		.word	-16640
 3044 01a4 00BCFFFF 		.word	-17408
 3045 01a8 80BFFFFF 		.word	-16512
 3046              		.cfi_endproc
 3047              	.LFE24:
 3049              		.section	.text.mbedtls_rsa_pkcs1_decrypt,"ax",%progbits
 3050              		.align	1
 3051              		.p2align 2,,3
 3052              		.global	mbedtls_rsa_pkcs1_decrypt
 3053              		.syntax unified
 3054              		.code	16
 3055              		.thumb_func
 3056              		.fpu softvfp
 3058              	mbedtls_rsa_pkcs1_decrypt:
 3059              	.LVL456:
 3060              	.LFB25:
1012:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V15 */
1013:.././crypto/mbedtls//library/rsa.c **** 
1014:.././crypto/mbedtls//library/rsa.c **** /*
1015:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA operation, then remove the message padding
1016:.././crypto/mbedtls//library/rsa.c ****  */
1017:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_pkcs1_decrypt( mbedtls_rsa_context *ctx,
1018:.././crypto/mbedtls//library/rsa.c ****                        int (*f_rng)(void *, unsigned char *, size_t),
1019:.././crypto/mbedtls//library/rsa.c ****                        void *p_rng,
1020:.././crypto/mbedtls//library/rsa.c ****                        int mode, size_t *olen,
1021:.././crypto/mbedtls//library/rsa.c ****                        const unsigned char *input,
1022:.././crypto/mbedtls//library/rsa.c ****                        unsigned char *output,
1023:.././crypto/mbedtls//library/rsa.c ****                        size_t output_max_len)
1024:.././crypto/mbedtls//library/rsa.c **** {
 3061              		.loc 1 1024 1 is_stmt 1 view -0
 3062              		.cfi_startproc
 3063              		@ args = 16, pretend = 0, frame = 0
 3064              		@ frame_needed = 0, uses_anonymous_args = 0
1025:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3065              		.loc 1 1025 5 view .LVU868
1024:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3066              		.loc 1 1024 1 is_stmt 0 view .LVU869
 3067 0000 10B5     		push	{r4, lr}
 3068              	.LCFI19:
 3069              		.cfi_def_cfa_offset 8
 3070              		.cfi_offset 4, -8
 3071              		.cfi_offset 14, -4
 3072              		.loc 1 1025 16 view .LVU870
 3073 0002 A424     		movs	r4, #164
 3074              		.loc 1 1025 5 view .LVU871
 3075 0004 0459     		ldr	r4, [r0, r4]
1024:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3076              		.loc 1 1024 1 view .LVU872
 3077 0006 84B0     		sub	sp, sp, #16
 3078              	.LCFI20:
 3079              		.cfi_def_cfa_offset 24
 3080              		.loc 1 1025 5 view .LVU873
 3081 0008 002C     		cmp	r4, #0
 3082 000a 0BD1     		bne	.L193
1026:.././crypto/mbedtls//library/rsa.c ****     {
1027:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
1028:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V15:
1029:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsaes_pkcs1_v15_decrypt( ctx, f_rng, p_rng, mode, olen,
 3083              		.loc 1 1029 13 is_stmt 1 view .LVU874
 3084              		.loc 1 1029 20 is_stmt 0 view .LVU875
 3085 000c 099C     		ldr	r4, [sp, #36]
 3086 000e 0394     		str	r4, [sp, #12]
 3087 0010 089C     		ldr	r4, [sp, #32]
 3088 0012 0294     		str	r4, [sp, #8]
 3089 0014 079C     		ldr	r4, [sp, #28]
 3090 0016 0194     		str	r4, [sp, #4]
 3091 0018 069C     		ldr	r4, [sp, #24]
 3092 001a 0094     		str	r4, [sp]
 3093 001c FFF7FEFF 		bl	mbedtls_rsa_rsaes_pkcs1_v15_decrypt
 3094              	.LVL457:
 3095              	.L191:
1030:.././crypto/mbedtls//library/rsa.c ****                                                 input, output, output_max_len );
1031:.././crypto/mbedtls//library/rsa.c **** #endif
1032:.././crypto/mbedtls//library/rsa.c **** 
1033:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
1034:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V21:
1035:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsaes_oaep_decrypt( ctx, f_rng, p_rng, mode, NULL, 0,
1036:.././crypto/mbedtls//library/rsa.c ****                                            olen, input, output,
1037:.././crypto/mbedtls//library/rsa.c ****                                            output_max_len );
1038:.././crypto/mbedtls//library/rsa.c **** #endif
1039:.././crypto/mbedtls//library/rsa.c **** 
1040:.././crypto/mbedtls//library/rsa.c ****         default:
1041:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1042:.././crypto/mbedtls//library/rsa.c ****     }
1043:.././crypto/mbedtls//library/rsa.c **** }
 3096              		.loc 1 1043 1 view .LVU876
 3097 0020 04B0     		add	sp, sp, #16
 3098              		@ sp needed
 3099 0022 10BD     		pop	{r4, pc}
 3100              	.LVL458:
 3101              	.L193:
1041:.././crypto/mbedtls//library/rsa.c ****     }
 3102              		.loc 1 1041 19 view .LVU877
 3103 0024 0048     		ldr	r0, .L194
 3104              	.LVL459:
1041:.././crypto/mbedtls//library/rsa.c ****     }
 3105              		.loc 1 1041 19 view .LVU878
 3106 0026 FBE7     		b	.L191
 3107              	.L195:
 3108              		.align	2
 3109              	.L194:
 3110 0028 00BFFFFF 		.word	-16640
 3111              		.cfi_endproc
 3112              	.LFE25:
 3114              		.section	.text.mbedtls_rsa_rsassa_pkcs1_v15_sign,"ax",%progbits
 3115              		.align	1
 3116              		.p2align 2,,3
 3117              		.global	mbedtls_rsa_rsassa_pkcs1_v15_sign
 3118              		.syntax unified
 3119              		.code	16
 3120              		.thumb_func
 3121              		.fpu softvfp
 3123              	mbedtls_rsa_rsassa_pkcs1_v15_sign:
 3124              	.LVL460:
 3125              	.LFB26:
1044:.././crypto/mbedtls//library/rsa.c **** 
1045:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
1046:.././crypto/mbedtls//library/rsa.c **** /*
1047:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSASSA-PSS-SIGN function
1048:.././crypto/mbedtls//library/rsa.c ****  */
1049:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsassa_pss_sign( mbedtls_rsa_context *ctx,
1050:.././crypto/mbedtls//library/rsa.c ****                          int (*f_rng)(void *, unsigned char *, size_t),
1051:.././crypto/mbedtls//library/rsa.c ****                          void *p_rng,
1052:.././crypto/mbedtls//library/rsa.c ****                          int mode,
1053:.././crypto/mbedtls//library/rsa.c ****                          mbedtls_md_type_t md_alg,
1054:.././crypto/mbedtls//library/rsa.c ****                          unsigned int hashlen,
1055:.././crypto/mbedtls//library/rsa.c ****                          const unsigned char *hash,
1056:.././crypto/mbedtls//library/rsa.c ****                          unsigned char *sig )
1057:.././crypto/mbedtls//library/rsa.c **** {
1058:.././crypto/mbedtls//library/rsa.c ****     size_t olen;
1059:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p = sig;
1060:.././crypto/mbedtls//library/rsa.c ****     unsigned char salt[MBEDTLS_MD_MAX_SIZE];
1061:.././crypto/mbedtls//library/rsa.c ****     unsigned int slen, hlen, offset = 0;
1062:.././crypto/mbedtls//library/rsa.c ****     int ret;
1063:.././crypto/mbedtls//library/rsa.c ****     size_t msb;
1064:.././crypto/mbedtls//library/rsa.c ****     const mbedtls_md_info_t *md_info;
1065:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_context_t md_ctx;
1066:.././crypto/mbedtls//library/rsa.c **** 
1067:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V21 )
1068:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1069:.././crypto/mbedtls//library/rsa.c **** 
1070:.././crypto/mbedtls//library/rsa.c ****     if( f_rng == NULL )
1071:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1072:.././crypto/mbedtls//library/rsa.c **** 
1073:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
1074:.././crypto/mbedtls//library/rsa.c **** 
1075:.././crypto/mbedtls//library/rsa.c ****     if( md_alg != MBEDTLS_MD_NONE )
1076:.././crypto/mbedtls//library/rsa.c ****     {
1077:.././crypto/mbedtls//library/rsa.c ****         /* Gather length of hash to sign */
1078:.././crypto/mbedtls//library/rsa.c ****         md_info = mbedtls_md_info_from_type( md_alg );
1079:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
1080:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1081:.././crypto/mbedtls//library/rsa.c **** 
1082:.././crypto/mbedtls//library/rsa.c ****         hashlen = mbedtls_md_get_size( md_info );
1083:.././crypto/mbedtls//library/rsa.c ****     }
1084:.././crypto/mbedtls//library/rsa.c **** 
1085:.././crypto/mbedtls//library/rsa.c ****     md_info = mbedtls_md_info_from_type( (mbedtls_md_type_t) ctx->hash_id );
1086:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
1087:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1088:.././crypto/mbedtls//library/rsa.c **** 
1089:.././crypto/mbedtls//library/rsa.c ****     hlen = mbedtls_md_get_size( md_info );
1090:.././crypto/mbedtls//library/rsa.c ****     slen = hlen;
1091:.././crypto/mbedtls//library/rsa.c **** 
1092:.././crypto/mbedtls//library/rsa.c ****     if( olen < hlen + slen + 2 )
1093:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1094:.././crypto/mbedtls//library/rsa.c **** 
1095:.././crypto/mbedtls//library/rsa.c ****     memset( sig, 0, olen );
1096:.././crypto/mbedtls//library/rsa.c **** 
1097:.././crypto/mbedtls//library/rsa.c ****     /* Generate salt of length slen */
1098:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = f_rng( p_rng, salt, slen ) ) != 0 )
1099:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_RNG_FAILED + ret );
1100:.././crypto/mbedtls//library/rsa.c **** 
1101:.././crypto/mbedtls//library/rsa.c ****     /* Note: EMSA-PSS encoding is over the length of N - 1 bits */
1102:.././crypto/mbedtls//library/rsa.c ****     msb = mbedtls_mpi_bitlen( &ctx->N ) - 1;
1103:.././crypto/mbedtls//library/rsa.c ****     p += olen - hlen * 2 - 2;
1104:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0x01;
1105:.././crypto/mbedtls//library/rsa.c ****     memcpy( p, salt, slen );
1106:.././crypto/mbedtls//library/rsa.c ****     p += slen;
1107:.././crypto/mbedtls//library/rsa.c **** 
1108:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_init( &md_ctx );
1109:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_md_setup( &md_ctx, md_info, 0 ) ) != 0 )
1110:.././crypto/mbedtls//library/rsa.c ****     {
1111:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
1112:.././crypto/mbedtls//library/rsa.c ****         /* No need to zeroize salt: we didn't use it. */
1113:.././crypto/mbedtls//library/rsa.c ****         return( ret );
1114:.././crypto/mbedtls//library/rsa.c ****     }
1115:.././crypto/mbedtls//library/rsa.c **** 
1116:.././crypto/mbedtls//library/rsa.c ****     /* Generate H = Hash( M' ) */
1117:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_starts( &md_ctx );
1118:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, p, 8 );
1119:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, hash, hashlen );
1120:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, salt, slen );
1121:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_finish( &md_ctx, p );
1122:.././crypto/mbedtls//library/rsa.c ****     mbedtls_zeroize( salt, sizeof( salt ) );
1123:.././crypto/mbedtls//library/rsa.c **** 
1124:.././crypto/mbedtls//library/rsa.c ****     /* Compensate for boundary condition when applying mask */
1125:.././crypto/mbedtls//library/rsa.c ****     if( msb % 8 == 0 )
1126:.././crypto/mbedtls//library/rsa.c ****         offset = 1;
1127:.././crypto/mbedtls//library/rsa.c **** 
1128:.././crypto/mbedtls//library/rsa.c ****     /* maskedDB: Apply dbMask to DB */
1129:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( sig + offset, olen - hlen - 1 - offset, p, hlen, &md_ctx );
1130:.././crypto/mbedtls//library/rsa.c **** 
1131:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_free( &md_ctx );
1132:.././crypto/mbedtls//library/rsa.c **** 
1133:.././crypto/mbedtls//library/rsa.c ****     msb = mbedtls_mpi_bitlen( &ctx->N ) - 1;
1134:.././crypto/mbedtls//library/rsa.c ****     sig[0] &= 0xFF >> ( olen * 8 - msb );
1135:.././crypto/mbedtls//library/rsa.c **** 
1136:.././crypto/mbedtls//library/rsa.c ****     p += hlen;
1137:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0xBC;
1138:.././crypto/mbedtls//library/rsa.c **** 
1139:.././crypto/mbedtls//library/rsa.c ****     return( ( mode == MBEDTLS_RSA_PUBLIC )
1140:.././crypto/mbedtls//library/rsa.c ****             ? mbedtls_rsa_public(  ctx, sig, sig )
1141:.././crypto/mbedtls//library/rsa.c ****             : mbedtls_rsa_private( ctx, f_rng, p_rng, sig, sig ) );
1142:.././crypto/mbedtls//library/rsa.c **** }
1143:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V21 */
1144:.././crypto/mbedtls//library/rsa.c **** 
1145:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
1146:.././crypto/mbedtls//library/rsa.c **** /*
1147:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSASSA-PKCS1-V1_5-SIGN function
1148:.././crypto/mbedtls//library/rsa.c ****  */
1149:.././crypto/mbedtls//library/rsa.c **** /*
1150:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA operation to sign the message digest
1151:.././crypto/mbedtls//library/rsa.c ****  */
1152:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsassa_pkcs1_v15_sign( mbedtls_rsa_context *ctx,
1153:.././crypto/mbedtls//library/rsa.c ****                                int (*f_rng)(void *, unsigned char *, size_t),
1154:.././crypto/mbedtls//library/rsa.c ****                                void *p_rng,
1155:.././crypto/mbedtls//library/rsa.c ****                                int mode,
1156:.././crypto/mbedtls//library/rsa.c ****                                mbedtls_md_type_t md_alg,
1157:.././crypto/mbedtls//library/rsa.c ****                                unsigned int hashlen,
1158:.././crypto/mbedtls//library/rsa.c ****                                const unsigned char *hash,
1159:.././crypto/mbedtls//library/rsa.c ****                                unsigned char *sig )
1160:.././crypto/mbedtls//library/rsa.c **** {
 3126              		.loc 1 1160 1 is_stmt 1 view -0
 3127              		.cfi_startproc
 3128              		@ args = 16, pretend = 0, frame = 24
 3129              		@ frame_needed = 0, uses_anonymous_args = 0
1161:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3130              		.loc 1 1161 5 view .LVU880
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3131              		.loc 1 1160 1 is_stmt 0 view .LVU881
 3132 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3133              	.LCFI21:
 3134              		.cfi_def_cfa_offset 20
 3135              		.cfi_offset 4, -20
 3136              		.cfi_offset 5, -16
 3137              		.cfi_offset 6, -12
 3138              		.cfi_offset 7, -8
 3139              		.cfi_offset 14, -4
 3140 0002 5746     		mov	r7, r10
 3141 0004 4E46     		mov	r6, r9
 3142 0006 4546     		mov	r5, r8
 3143 0008 DE46     		mov	lr, fp
 3144 000a E0B5     		push	{r5, r6, r7, lr}
 3145              	.LCFI22:
 3146              		.cfi_def_cfa_offset 36
 3147              		.cfi_offset 8, -36
 3148              		.cfi_offset 9, -32
 3149              		.cfi_offset 10, -28
 3150              		.cfi_offset 11, -24
 3151 000c 89B0     		sub	sp, sp, #36
 3152              	.LCFI23:
 3153              		.cfi_def_cfa_offset 72
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3154              		.loc 1 1160 1 view .LVU882
 3155 000e 9846     		mov	r8, r3
 3156 0010 12AB     		add	r3, sp, #72
 3157              	.LVL461:
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3158              		.loc 1 1160 1 view .LVU883
 3159 0012 1B78     		ldrb	r3, [r3]
 3160              	.LVL462:
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3161              		.loc 1 1160 1 view .LVU884
 3162 0014 0700     		movs	r7, r0
 3163 0016 9A46     		mov	r10, r3
 3164              		.loc 1 1161 26 view .LVU885
 3165 0018 0023     		movs	r3, #0
 3166 001a 0693     		str	r3, [sp, #24]
1162:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p = sig;
 3167              		.loc 1 1162 5 is_stmt 1 view .LVU886
1163:.././crypto/mbedtls//library/rsa.c ****     const char *oid = NULL;
 3168              		.loc 1 1163 17 is_stmt 0 view .LVU887
 3169 001c 0793     		str	r3, [sp, #28]
1164:.././crypto/mbedtls//library/rsa.c ****     unsigned char *sig_try = NULL, *verif = NULL;
1165:.././crypto/mbedtls//library/rsa.c ****     size_t i;
1166:.././crypto/mbedtls//library/rsa.c ****     unsigned char diff;
1167:.././crypto/mbedtls//library/rsa.c ****     volatile unsigned char diff_no_optimize;
1168:.././crypto/mbedtls//library/rsa.c ****     int ret;
1169:.././crypto/mbedtls//library/rsa.c **** 
1170:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V15 )
 3170              		.loc 1 1170 7 view .LVU888
 3171 001e 4346     		mov	r3, r8
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3172              		.loc 1 1160 1 view .LVU889
 3173 0020 9146     		mov	r9, r2
 3174 0022 159E     		ldr	r6, [sp, #84]
 3175              	.LVL463:
1163:.././crypto/mbedtls//library/rsa.c ****     const char *oid = NULL;
 3176              		.loc 1 1163 5 is_stmt 1 view .LVU890
1164:.././crypto/mbedtls//library/rsa.c ****     unsigned char *sig_try = NULL, *verif = NULL;
 3177              		.loc 1 1164 5 view .LVU891
1165:.././crypto/mbedtls//library/rsa.c ****     unsigned char diff;
 3178              		.loc 1 1165 5 view .LVU892
1166:.././crypto/mbedtls//library/rsa.c ****     volatile unsigned char diff_no_optimize;
 3179              		.loc 1 1166 5 view .LVU893
1167:.././crypto/mbedtls//library/rsa.c ****     int ret;
 3180              		.loc 1 1167 5 view .LVU894
1168:.././crypto/mbedtls//library/rsa.c **** 
 3181              		.loc 1 1168 5 view .LVU895
 3182              		.loc 1 1170 5 view .LVU896
1160:.././crypto/mbedtls//library/rsa.c ****     size_t nb_pad, olen, oid_size = 0;
 3183              		.loc 1 1160 1 is_stmt 0 view .LVU897
 3184 0024 0391     		str	r1, [sp, #12]
 3185              		.loc 1 1170 7 view .LVU898
 3186 0026 012B     		cmp	r3, #1
 3187 0028 00D1     		bne	.LCB3079
 3188 002a 97E0     		b	.L221	@long jump
 3189              	.LCB3079:
 3190              	.L197:
1171:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1172:.././crypto/mbedtls//library/rsa.c **** 
1173:.././crypto/mbedtls//library/rsa.c ****     olen = ctx->len;
 3191              		.loc 1 1173 5 is_stmt 1 view .LVU899
1174:.././crypto/mbedtls//library/rsa.c ****     nb_pad = olen - 3;
1175:.././crypto/mbedtls//library/rsa.c **** 
1176:.././crypto/mbedtls//library/rsa.c ****     if( md_alg != MBEDTLS_MD_NONE )
 3192              		.loc 1 1176 7 is_stmt 0 view .LVU900
 3193 002c 5346     		mov	r3, r10
1173:.././crypto/mbedtls//library/rsa.c ****     nb_pad = olen - 3;
 3194              		.loc 1 1173 10 view .LVU901
 3195 002e 7C68     		ldr	r4, [r7, #4]
 3196              	.LVL464:
1174:.././crypto/mbedtls//library/rsa.c ****     nb_pad = olen - 3;
 3197              		.loc 1 1174 5 is_stmt 1 view .LVU902
1174:.././crypto/mbedtls//library/rsa.c ****     nb_pad = olen - 3;
 3198              		.loc 1 1174 12 is_stmt 0 view .LVU903
 3199 0030 E51E     		subs	r5, r4, #3
 3200              	.LVL465:
 3201              		.loc 1 1176 5 is_stmt 1 view .LVU904
 3202              		.loc 1 1176 7 is_stmt 0 view .LVU905
 3203 0032 002B     		cmp	r3, #0
 3204 0034 00D0     		beq	.LCB3091
 3205 0036 99E0     		b	.L222	@long jump
 3206              	.LCB3091:
 3207              	.LVL466:
 3208              	.L199:
1177:.././crypto/mbedtls//library/rsa.c ****     {
1178:.././crypto/mbedtls//library/rsa.c ****         const mbedtls_md_info_t *md_info = mbedtls_md_info_from_type( md_alg );
1179:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
1180:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1181:.././crypto/mbedtls//library/rsa.c **** 
1182:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_oid_get_oid_by_md( md_alg, &oid, &oid_size ) != 0 )
1183:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1184:.././crypto/mbedtls//library/rsa.c **** 
1185:.././crypto/mbedtls//library/rsa.c ****         nb_pad -= 10 + oid_size;
1186:.././crypto/mbedtls//library/rsa.c **** 
1187:.././crypto/mbedtls//library/rsa.c ****         hashlen = mbedtls_md_get_size( md_info );
1188:.././crypto/mbedtls//library/rsa.c ****     }
1189:.././crypto/mbedtls//library/rsa.c **** 
1190:.././crypto/mbedtls//library/rsa.c ****     nb_pad -= hashlen;
 3209              		.loc 1 1190 5 is_stmt 1 view .LVU906
 3210              		.loc 1 1190 12 is_stmt 0 view .LVU907
 3211 0038 139B     		ldr	r3, [sp, #76]
 3212 003a ED1A     		subs	r5, r5, r3
 3213              	.LVL467:
1191:.././crypto/mbedtls//library/rsa.c **** 
1192:.././crypto/mbedtls//library/rsa.c ****     if( ( nb_pad < 8 ) || ( nb_pad > olen ) )
 3214              		.loc 1 1192 5 is_stmt 1 view .LVU908
 3215              		.loc 1 1192 7 is_stmt 0 view .LVU909
 3216 003c 072D     		cmp	r5, #7
 3217 003e 00D8     		bhi	.LCB3111
 3218 0040 91E0     		b	.L200	@long jump
 3219              	.LCB3111:
 3220              		.loc 1 1192 24 discriminator 1 view .LVU910
 3221 0042 AC42     		cmp	r4, r5
 3222 0044 00D2     		bcs	.LCB3113
 3223 0046 8EE0     		b	.L200	@long jump
 3224              	.LCB3113:
1193:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1194:.././crypto/mbedtls//library/rsa.c **** 
1195:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0;
 3225              		.loc 1 1195 5 is_stmt 1 view .LVU911
 3226              	.LVL468:
 3227              		.loc 1 1195 10 is_stmt 0 view .LVU912
 3228 0048 0023     		movs	r3, #0
 3229 004a 9B46     		mov	fp, r3
 3230 004c 3370     		strb	r3, [r6]
1196:.././crypto/mbedtls//library/rsa.c ****     *p++ = MBEDTLS_RSA_SIGN;
 3231              		.loc 1 1196 5 is_stmt 1 view .LVU913
 3232              		.loc 1 1196 7 is_stmt 0 view .LVU914
 3233 004e B41C     		adds	r4, r6, #2
 3234              	.LVL469:
 3235              		.loc 1 1196 10 view .LVU915
 3236 0050 0133     		adds	r3, r3, #1
 3237 0052 7370     		strb	r3, [r6, #1]
1197:.././crypto/mbedtls//library/rsa.c ****     memset( p, 0xFF, nb_pad );
 3238              		.loc 1 1197 5 is_stmt 1 view .LVU916
 3239 0054 2A00     		movs	r2, r5
 3240 0056 FF21     		movs	r1, #255
 3241 0058 2000     		movs	r0, r4
 3242 005a FFF7FEFF 		bl	memset
 3243              	.LVL470:
1198:.././crypto/mbedtls//library/rsa.c ****     p += nb_pad;
 3244              		.loc 1 1198 5 view .LVU917
1199:.././crypto/mbedtls//library/rsa.c ****     *p++ = 0;
 3245              		.loc 1 1199 10 is_stmt 0 view .LVU918
 3246 005e 5B46     		mov	r3, fp
1198:.././crypto/mbedtls//library/rsa.c ****     p += nb_pad;
 3247              		.loc 1 1198 7 view .LVU919
 3248 0060 6019     		adds	r0, r4, r5
 3249              	.LVL471:
 3250              		.loc 1 1199 5 is_stmt 1 view .LVU920
 3251              		.loc 1 1199 10 is_stmt 0 view .LVU921
 3252 0062 0370     		strb	r3, [r0]
1200:.././crypto/mbedtls//library/rsa.c **** 
1201:.././crypto/mbedtls//library/rsa.c ****     if( md_alg == MBEDTLS_MD_NONE )
 3253              		.loc 1 1201 5 is_stmt 1 view .LVU922
 3254              		.loc 1 1201 7 is_stmt 0 view .LVU923
 3255 0064 5346     		mov	r3, r10
 3256 0066 002B     		cmp	r3, #0
 3257 0068 69D0     		beq	.L223
1202:.././crypto/mbedtls//library/rsa.c ****     {
1203:.././crypto/mbedtls//library/rsa.c ****         memcpy( p, hash, hashlen );
1204:.././crypto/mbedtls//library/rsa.c ****     }
1205:.././crypto/mbedtls//library/rsa.c ****     else
1206:.././crypto/mbedtls//library/rsa.c ****     {
1207:.././crypto/mbedtls//library/rsa.c ****         /*
1208:.././crypto/mbedtls//library/rsa.c ****          * DigestInfo ::= SEQUENCE {
1209:.././crypto/mbedtls//library/rsa.c ****          *   digestAlgorithm DigestAlgorithmIdentifier,
1210:.././crypto/mbedtls//library/rsa.c ****          *   digest Digest }
1211:.././crypto/mbedtls//library/rsa.c ****          *
1212:.././crypto/mbedtls//library/rsa.c ****          * DigestAlgorithmIdentifier ::= AlgorithmIdentifier
1213:.././crypto/mbedtls//library/rsa.c ****          *
1214:.././crypto/mbedtls//library/rsa.c ****          * Digest ::= OCTET STRING
1215:.././crypto/mbedtls//library/rsa.c ****          */
1216:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_SEQUENCE | MBEDTLS_ASN1_CONSTRUCTED;
 3258              		.loc 1 1216 9 is_stmt 1 view .LVU924
 3259              	.LVL472:
 3260              		.loc 1 1216 14 is_stmt 0 view .LVU925
 3261 006a 3022     		movs	r2, #48
1217:.././crypto/mbedtls//library/rsa.c ****         *p++ = (unsigned char) ( 0x08 + oid_size + hashlen );
 3262              		.loc 1 1217 50 view .LVU926
 3263 006c 139B     		ldr	r3, [sp, #76]
1216:.././crypto/mbedtls//library/rsa.c ****         *p++ = (unsigned char) ( 0x08 + oid_size + hashlen );
 3264              		.loc 1 1216 14 view .LVU927
 3265 006e 4270     		strb	r2, [r0, #1]
 3266              		.loc 1 1217 9 is_stmt 1 view .LVU928
 3267              		.loc 1 1217 50 is_stmt 0 view .LVU929
 3268 0070 069C     		ldr	r4, [sp, #24]
 3269 0072 DBB2     		uxtb	r3, r3
 3270 0074 9A46     		mov	r10, r3
 3271              	.LVL473:
 3272              		.loc 1 1217 16 view .LVU930
 3273 0076 2300     		movs	r3, r4
 3274 0078 0833     		adds	r3, r3, #8
 3275 007a 5344     		add	r3, r3, r10
 3276              		.loc 1 1217 14 view .LVU931
 3277 007c 8370     		strb	r3, [r0, #2]
1218:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_SEQUENCE | MBEDTLS_ASN1_CONSTRUCTED;
 3278              		.loc 1 1218 9 is_stmt 1 view .LVU932
 3279              	.LVL474:
1219:.././crypto/mbedtls//library/rsa.c ****         *p++ = (unsigned char) ( 0x04 + oid_size );
 3280              		.loc 1 1219 16 is_stmt 0 view .LVU933
 3281 007e E3B2     		uxtb	r3, r4
1218:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_SEQUENCE | MBEDTLS_ASN1_CONSTRUCTED;
 3282              		.loc 1 1218 14 view .LVU934
 3283 0080 C270     		strb	r2, [r0, #3]
 3284              		.loc 1 1219 9 is_stmt 1 view .LVU935
 3285              	.LVL475:
 3286              		.loc 1 1219 16 is_stmt 0 view .LVU936
 3287 0082 1A1D     		adds	r2, r3, #4
 3288              		.loc 1 1219 14 view .LVU937
 3289 0084 0271     		strb	r2, [r0, #4]
1220:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_OID;
 3290              		.loc 1 1220 9 is_stmt 1 view .LVU938
 3291              	.LVL476:
 3292              		.loc 1 1220 14 is_stmt 0 view .LVU939
 3293 0086 0622     		movs	r2, #6
1221:.././crypto/mbedtls//library/rsa.c ****         *p++ = oid_size & 0xFF;
 3294              		.loc 1 1221 11 view .LVU940
 3295 0088 C51D     		adds	r5, r0, #7
 3296              	.LVL477:
1220:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_OID;
 3297              		.loc 1 1220 14 view .LVU941
 3298 008a 4271     		strb	r2, [r0, #5]
 3299              		.loc 1 1221 9 is_stmt 1 view .LVU942
 3300              	.LVL478:
 3301              		.loc 1 1221 14 is_stmt 0 view .LVU943
 3302 008c 8371     		strb	r3, [r0, #6]
1222:.././crypto/mbedtls//library/rsa.c ****         memcpy( p, oid, oid_size );
 3303              		.loc 1 1222 9 is_stmt 1 view .LVU944
 3304 008e 2200     		movs	r2, r4
 3305 0090 2800     		movs	r0, r5
 3306 0092 0799     		ldr	r1, [sp, #28]
 3307 0094 FFF7FEFF 		bl	memcpy
 3308              	.LVL479:
1223:.././crypto/mbedtls//library/rsa.c ****         p += oid_size;
 3309              		.loc 1 1223 9 view .LVU945
1224:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_NULL;
 3310              		.loc 1 1224 14 is_stmt 0 view .LVU946
 3311 0098 0523     		movs	r3, #5
1223:.././crypto/mbedtls//library/rsa.c ****         p += oid_size;
 3312              		.loc 1 1223 11 view .LVU947
 3313 009a 2D19     		adds	r5, r5, r4
 3314              	.LVL480:
 3315              		.loc 1 1224 9 is_stmt 1 view .LVU948
 3316              		.loc 1 1224 14 is_stmt 0 view .LVU949
 3317 009c 2B70     		strb	r3, [r5]
1225:.././crypto/mbedtls//library/rsa.c ****         *p++ = 0x00;
 3318              		.loc 1 1225 9 is_stmt 1 view .LVU950
 3319              	.LVL481:
 3320              		.loc 1 1225 14 is_stmt 0 view .LVU951
 3321 009e 5B46     		mov	r3, fp
 3322 00a0 6B70     		strb	r3, [r5, #1]
1226:.././crypto/mbedtls//library/rsa.c ****         *p++ = MBEDTLS_ASN1_OCTET_STRING;
 3323              		.loc 1 1226 9 is_stmt 1 view .LVU952
 3324              	.LVL482:
 3325              		.loc 1 1226 14 is_stmt 0 view .LVU953
 3326 00a2 0423     		movs	r3, #4
 3327 00a4 AB70     		strb	r3, [r5, #2]
1227:.././crypto/mbedtls//library/rsa.c ****         *p++ = hashlen;
 3328              		.loc 1 1227 9 is_stmt 1 view .LVU954
 3329              	.LVL483:
 3330              		.loc 1 1227 14 is_stmt 0 view .LVU955
 3331 00a6 5346     		mov	r3, r10
1228:.././crypto/mbedtls//library/rsa.c ****         memcpy( p, hash, hashlen );
 3332              		.loc 1 1228 9 view .LVU956
 3333 00a8 139A     		ldr	r2, [sp, #76]
1227:.././crypto/mbedtls//library/rsa.c ****         *p++ = hashlen;
 3334              		.loc 1 1227 14 view .LVU957
 3335 00aa EB70     		strb	r3, [r5, #3]
 3336              		.loc 1 1228 9 is_stmt 1 view .LVU958
 3337 00ac 1499     		ldr	r1, [sp, #80]
 3338 00ae 281D     		adds	r0, r5, #4
 3339              	.LVL484:
 3340              		.loc 1 1228 9 is_stmt 0 view .LVU959
 3341 00b0 FFF7FEFF 		bl	memcpy
 3342              	.LVL485:
1229:.././crypto/mbedtls//library/rsa.c ****     }
1230:.././crypto/mbedtls//library/rsa.c **** 
1231:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PUBLIC )
 3343              		.loc 1 1231 5 is_stmt 1 view .LVU960
 3344              		.loc 1 1231 7 is_stmt 0 view .LVU961
 3345 00b4 4346     		mov	r3, r8
 3346 00b6 002B     		cmp	r3, #0
 3347 00b8 49D0     		beq	.L224
 3348              	.LVL486:
 3349              	.L203:
1232:.././crypto/mbedtls//library/rsa.c ****         return( mbedtls_rsa_public(  ctx, sig, sig ) );
1233:.././crypto/mbedtls//library/rsa.c **** 
1234:.././crypto/mbedtls//library/rsa.c ****     /*
1235:.././crypto/mbedtls//library/rsa.c ****      * In order to prevent Lenstra's attack, make the signature in a
1236:.././crypto/mbedtls//library/rsa.c ****      * temporary buffer and check it before returning it.
1237:.././crypto/mbedtls//library/rsa.c ****      */
1238:.././crypto/mbedtls//library/rsa.c ****     sig_try = mbedtls_calloc( 1, ctx->len );
 3350              		.loc 1 1238 5 is_stmt 1 view .LVU962
 3351              		.loc 1 1238 15 is_stmt 0 view .LVU963
 3352 00ba 7C68     		ldr	r4, [r7, #4]
 3353 00bc 0120     		movs	r0, #1
 3354 00be 2100     		movs	r1, r4
 3355 00c0 FFF7FEFF 		bl	calloc
 3356              	.LVL487:
 3357              		.loc 1 1238 15 view .LVU964
 3358 00c4 051E     		subs	r5, r0, #0
 3359              	.LVL488:
1239:.././crypto/mbedtls//library/rsa.c ****     if( sig_try == NULL )
 3360              		.loc 1 1239 5 is_stmt 1 view .LVU965
 3361              		.loc 1 1239 7 is_stmt 0 view .LVU966
 3362 00c6 6BD0     		beq	.L208
1240:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_MPI_ALLOC_FAILED );
1241:.././crypto/mbedtls//library/rsa.c **** 
1242:.././crypto/mbedtls//library/rsa.c ****     verif   = mbedtls_calloc( 1, ctx->len );
 3363              		.loc 1 1242 5 is_stmt 1 view .LVU967
 3364              		.loc 1 1242 15 is_stmt 0 view .LVU968
 3365 00c8 2100     		movs	r1, r4
 3366 00ca 0120     		movs	r0, #1
 3367              	.LVL489:
 3368              		.loc 1 1242 15 view .LVU969
 3369 00cc FFF7FEFF 		bl	calloc
 3370              	.LVL490:
 3371 00d0 041E     		subs	r4, r0, #0
 3372              	.LVL491:
1243:.././crypto/mbedtls//library/rsa.c ****     if( verif == NULL )
 3373              		.loc 1 1243 5 is_stmt 1 view .LVU970
 3374              		.loc 1 1243 7 is_stmt 0 view .LVU971
 3375 00d2 69D0     		beq	.L225
1244:.././crypto/mbedtls//library/rsa.c ****     {
1245:.././crypto/mbedtls//library/rsa.c ****         mbedtls_free( sig_try );
1246:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_MPI_ALLOC_FAILED );
1247:.././crypto/mbedtls//library/rsa.c ****     }
1248:.././crypto/mbedtls//library/rsa.c **** 
1249:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_rsa_private( ctx, f_rng, p_rng, sig, sig_try ) );
 3376              		.loc 1 1249 5 is_stmt 1 view .LVU972
 3377              		.loc 1 1249 5 view .LVU973
 3378 00d4 3300     		movs	r3, r6
 3379 00d6 4A46     		mov	r2, r9
 3380 00d8 3800     		movs	r0, r7
 3381              	.LVL492:
 3382              		.loc 1 1249 5 is_stmt 0 view .LVU974
 3383 00da 0399     		ldr	r1, [sp, #12]
 3384 00dc 0095     		str	r5, [sp]
 3385 00de FFF7FEFF 		bl	mbedtls_rsa_private
 3386              	.LVL493:
 3387 00e2 8046     		mov	r8, r0
 3388              	.LVL494:
 3389              		.loc 1 1249 5 view .LVU975
 3390 00e4 0028     		cmp	r0, #0
 3391 00e6 1CD1     		bne	.L205
 3392              		.loc 1 1249 5 is_stmt 1 discriminator 2 view .LVU976
1250:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_rsa_public( ctx, sig_try, verif ) );
 3393              		.loc 1 1250 5 discriminator 2 view .LVU977
 3394              		.loc 1 1250 5 discriminator 2 view .LVU978
 3395 00e8 2200     		movs	r2, r4
 3396 00ea 2900     		movs	r1, r5
 3397 00ec 3800     		movs	r0, r7
 3398              	.LVL495:
 3399              		.loc 1 1250 5 is_stmt 0 discriminator 2 view .LVU979
 3400 00ee FFF7FEFF 		bl	mbedtls_rsa_public
 3401              	.LVL496:
 3402 00f2 8046     		mov	r8, r0
 3403              	.LVL497:
 3404              		.loc 1 1250 5 discriminator 2 view .LVU980
 3405 00f4 031E     		subs	r3, r0, #0
 3406 00f6 14D1     		bne	.L205
 3407              	.LVL498:
1251:.././crypto/mbedtls//library/rsa.c **** 
1252:.././crypto/mbedtls//library/rsa.c ****     /* Compare in constant time just in case */
1253:.././crypto/mbedtls//library/rsa.c ****     for( diff = 0, i = 0; i < ctx->len; i++ )
 3408              		.loc 1 1253 27 is_stmt 1 view .LVU981
 3409              		.loc 1 1253 34 is_stmt 0 view .LVU982
 3410 00f8 7A68     		ldr	r2, [r7, #4]
 3411              		.loc 1 1253 15 view .LVU983
 3412 00fa 0020     		movs	r0, #0
 3413              	.LVL499:
 3414              		.loc 1 1253 5 view .LVU984
 3415 00fc 002A     		cmp	r2, #0
 3416 00fe 06D0     		beq	.L206
 3417              	.LVL500:
 3418              	.L207:
1254:.././crypto/mbedtls//library/rsa.c ****         diff |= verif[i] ^ sig[i];
 3419              		.loc 1 1254 9 is_stmt 1 discriminator 3 view .LVU985
 3420              		.loc 1 1254 14 is_stmt 0 discriminator 3 view .LVU986
 3421 0100 E15C     		ldrb	r1, [r4, r3]
 3422 0102 F75C     		ldrb	r7, [r6, r3]
1253:.././crypto/mbedtls//library/rsa.c ****         diff |= verif[i] ^ sig[i];
 3423              		.loc 1 1253 42 discriminator 3 view .LVU987
 3424 0104 0133     		adds	r3, r3, #1
 3425              	.LVL501:
 3426              		.loc 1 1254 14 discriminator 3 view .LVU988
 3427 0106 7940     		eors	r1, r7
 3428 0108 0843     		orrs	r0, r1
 3429              	.LVL502:
1253:.././crypto/mbedtls//library/rsa.c ****         diff |= verif[i] ^ sig[i];
 3430              		.loc 1 1253 41 is_stmt 1 discriminator 3 view .LVU989
1253:.././crypto/mbedtls//library/rsa.c ****         diff |= verif[i] ^ sig[i];
 3431              		.loc 1 1253 27 discriminator 3 view .LVU990
1253:.././crypto/mbedtls//library/rsa.c ****         diff |= verif[i] ^ sig[i];
 3432              		.loc 1 1253 5 is_stmt 0 discriminator 3 view .LVU991
 3433 010a 9342     		cmp	r3, r2
 3434 010c F8D1     		bne	.L207
 3435              	.LVL503:
 3436              	.L206:
1255:.././crypto/mbedtls//library/rsa.c ****     diff_no_optimize = diff;
 3437              		.loc 1 1255 5 is_stmt 1 view .LVU992
 3438              		.loc 1 1255 22 is_stmt 0 view .LVU993
 3439 010e 02A9     		add	r1, sp, #8
 3440 0110 0F23     		movs	r3, #15
 3441 0112 8C46     		mov	ip, r1
 3442 0114 6344     		add	r3, r3, ip
 3443 0116 1870     		strb	r0, [r3]
1256:.././crypto/mbedtls//library/rsa.c **** 
1257:.././crypto/mbedtls//library/rsa.c ****     if( diff_no_optimize != 0 )
 3444              		.loc 1 1257 5 is_stmt 1 view .LVU994
 3445              		.loc 1 1257 26 is_stmt 0 view .LVU995
 3446 0118 1B78     		ldrb	r3, [r3]
 3447              		.loc 1 1257 7 view .LVU996
 3448 011a 002B     		cmp	r3, #0
 3449 011c 3BD0     		beq	.L226
1258:.././crypto/mbedtls//library/rsa.c ****     {
1259:.././crypto/mbedtls//library/rsa.c ****         ret = MBEDTLS_ERR_RSA_PRIVATE_FAILED;
 3450              		.loc 1 1259 13 view .LVU997
 3451 011e 264B     		ldr	r3, .L227
 3452 0120 9846     		mov	r8, r3
 3453              	.LVL504:
 3454              	.L205:
1260:.././crypto/mbedtls//library/rsa.c ****         goto cleanup;
1261:.././crypto/mbedtls//library/rsa.c ****     }
1262:.././crypto/mbedtls//library/rsa.c **** 
1263:.././crypto/mbedtls//library/rsa.c ****     memcpy( sig, sig_try, ctx->len );
1264:.././crypto/mbedtls//library/rsa.c **** 
1265:.././crypto/mbedtls//library/rsa.c **** cleanup:
1266:.././crypto/mbedtls//library/rsa.c ****     mbedtls_free( sig_try );
 3455              		.loc 1 1266 5 is_stmt 1 view .LVU998
 3456 0122 2800     		movs	r0, r5
 3457 0124 FFF7FEFF 		bl	free
 3458              	.LVL505:
1267:.././crypto/mbedtls//library/rsa.c ****     mbedtls_free( verif );
 3459              		.loc 1 1267 5 view .LVU999
 3460 0128 2000     		movs	r0, r4
 3461 012a FFF7FEFF 		bl	free
 3462              	.LVL506:
1268:.././crypto/mbedtls//library/rsa.c **** 
1269:.././crypto/mbedtls//library/rsa.c ****     return( ret );
 3463              		.loc 1 1269 5 view .LVU1000
 3464              	.L196:
1270:.././crypto/mbedtls//library/rsa.c **** }
 3465              		.loc 1 1270 1 is_stmt 0 view .LVU1001
 3466 012e 4046     		mov	r0, r8
 3467 0130 09B0     		add	sp, sp, #36
 3468              		@ sp needed
 3469              	.LVL507:
 3470              		.loc 1 1270 1 view .LVU1002
 3471 0132 3CBC     		pop	{r2, r3, r4, r5}
 3472 0134 9046     		mov	r8, r2
 3473 0136 9946     		mov	r9, r3
 3474 0138 A246     		mov	r10, r4
 3475 013a AB46     		mov	fp, r5
 3476 013c F0BD     		pop	{r4, r5, r6, r7, pc}
 3477              	.LVL508:
 3478              	.L223:
1203:.././crypto/mbedtls//library/rsa.c ****     }
 3479              		.loc 1 1203 9 is_stmt 1 view .LVU1003
 3480 013e 139A     		ldr	r2, [sp, #76]
 3481 0140 1499     		ldr	r1, [sp, #80]
1199:.././crypto/mbedtls//library/rsa.c **** 
 3482              		.loc 1 1199 7 is_stmt 0 view .LVU1004
 3483 0142 0130     		adds	r0, r0, #1
 3484              	.LVL509:
1203:.././crypto/mbedtls//library/rsa.c ****     }
 3485              		.loc 1 1203 9 view .LVU1005
 3486 0144 FFF7FEFF 		bl	memcpy
 3487              	.LVL510:
1231:.././crypto/mbedtls//library/rsa.c ****         return( mbedtls_rsa_public(  ctx, sig, sig ) );
 3488              		.loc 1 1231 5 is_stmt 1 view .LVU1006
1231:.././crypto/mbedtls//library/rsa.c ****         return( mbedtls_rsa_public(  ctx, sig, sig ) );
 3489              		.loc 1 1231 7 is_stmt 0 view .LVU1007
 3490 0148 4346     		mov	r3, r8
 3491 014a 002B     		cmp	r3, #0
 3492 014c B5D1     		bne	.L203
 3493              	.LVL511:
 3494              	.L224:
1232:.././crypto/mbedtls//library/rsa.c **** 
 3495              		.loc 1 1232 9 is_stmt 1 view .LVU1008
1232:.././crypto/mbedtls//library/rsa.c **** 
 3496              		.loc 1 1232 17 is_stmt 0 view .LVU1009
 3497 014e 3200     		movs	r2, r6
 3498 0150 3100     		movs	r1, r6
 3499 0152 3800     		movs	r0, r7
 3500 0154 FFF7FEFF 		bl	mbedtls_rsa_public
 3501              	.LVL512:
1232:.././crypto/mbedtls//library/rsa.c **** 
 3502              		.loc 1 1232 17 view .LVU1010
 3503 0158 8046     		mov	r8, r0
 3504              	.LVL513:
1232:.././crypto/mbedtls//library/rsa.c **** 
 3505              		.loc 1 1232 17 view .LVU1011
 3506 015a E8E7     		b	.L196
 3507              	.LVL514:
 3508              	.L221:
1170:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3509              		.loc 1 1170 43 discriminator 1 view .LVU1012
 3510 015c A333     		adds	r3, r3, #163
 3511              	.LVL515:
1170:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3512              		.loc 1 1170 37 discriminator 1 view .LVU1013
 3513 015e C358     		ldr	r3, [r0, r3]
 3514 0160 002B     		cmp	r3, #0
 3515 0162 00D1     		bne	.LCB3399
 3516 0164 62E7     		b	.L197	@long jump
 3517              	.LCB3399:
 3518              	.LVL516:
 3519              	.L200:
1171:.././crypto/mbedtls//library/rsa.c **** 
 3520              		.loc 1 1171 15 view .LVU1014
 3521 0166 154B     		ldr	r3, .L227+4
 3522 0168 9846     		mov	r8, r3
 3523              	.LVL517:
1171:.././crypto/mbedtls//library/rsa.c **** 
 3524              		.loc 1 1171 15 view .LVU1015
 3525 016a E0E7     		b	.L196
 3526              	.LVL518:
 3527              	.L222:
 3528              	.LBB26:
1178:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
 3529              		.loc 1 1178 9 is_stmt 1 view .LVU1016
1178:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
 3530              		.loc 1 1178 44 is_stmt 0 view .LVU1017
 3531 016c 5046     		mov	r0, r10
 3532              	.LVL519:
1178:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
 3533              		.loc 1 1178 44 view .LVU1018
 3534 016e FFF7FEFF 		bl	mbedtls_md_info_from_type
 3535              	.LVL520:
1178:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
 3536              		.loc 1 1178 44 view .LVU1019
 3537 0172 8346     		mov	fp, r0
 3538              	.LVL521:
1179:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3539              		.loc 1 1179 9 is_stmt 1 view .LVU1020
1179:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3540              		.loc 1 1179 11 is_stmt 0 view .LVU1021
 3541 0174 0028     		cmp	r0, #0
 3542 0176 F6D0     		beq	.L200
1182:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3543              		.loc 1 1182 9 is_stmt 1 view .LVU1022
1182:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3544              		.loc 1 1182 13 is_stmt 0 view .LVU1023
 3545 0178 5046     		mov	r0, r10
 3546              	.LVL522:
1182:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3547              		.loc 1 1182 13 view .LVU1024
 3548 017a 06AA     		add	r2, sp, #24
 3549 017c 07A9     		add	r1, sp, #28
 3550 017e FFF7FEFF 		bl	mbedtls_oid_get_oid_by_md
 3551              	.LVL523:
1182:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3552              		.loc 1 1182 11 view .LVU1025
 3553 0182 0028     		cmp	r0, #0
 3554 0184 EFD1     		bne	.L200
1185:.././crypto/mbedtls//library/rsa.c **** 
 3555              		.loc 1 1185 9 is_stmt 1 view .LVU1026
1185:.././crypto/mbedtls//library/rsa.c **** 
 3556              		.loc 1 1185 16 is_stmt 0 view .LVU1027
 3557 0186 069B     		ldr	r3, [sp, #24]
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3558              		.loc 1 1187 19 view .LVU1028
 3559 0188 5846     		mov	r0, fp
1185:.././crypto/mbedtls//library/rsa.c **** 
 3560              		.loc 1 1185 16 view .LVU1029
 3561 018a ED1A     		subs	r5, r5, r3
 3562              	.LVL524:
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3563              		.loc 1 1187 19 view .LVU1030
 3564 018c FFF7FEFF 		bl	mbedtls_md_get_size
 3565              	.LVL525:
1185:.././crypto/mbedtls//library/rsa.c **** 
 3566              		.loc 1 1185 16 view .LVU1031
 3567 0190 0A3D     		subs	r5, r5, #10
 3568              	.LVL526:
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3569              		.loc 1 1187 9 is_stmt 1 view .LVU1032
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3570              		.loc 1 1187 19 is_stmt 0 view .LVU1033
 3571 0192 1390     		str	r0, [sp, #76]
 3572              	.LVL527:
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3573              		.loc 1 1187 19 view .LVU1034
 3574 0194 50E7     		b	.L199
 3575              	.LVL528:
 3576              	.L226:
1187:.././crypto/mbedtls//library/rsa.c ****     }
 3577              		.loc 1 1187 19 view .LVU1035
 3578              	.LBE26:
1263:.././crypto/mbedtls//library/rsa.c **** 
 3579              		.loc 1 1263 5 is_stmt 1 view .LVU1036
 3580 0196 2900     		movs	r1, r5
 3581 0198 3000     		movs	r0, r6
 3582 019a FFF7FEFF 		bl	memcpy
 3583              	.LVL529:
 3584 019e C0E7     		b	.L205
 3585              	.LVL530:
 3586              	.L208:
1240:.././crypto/mbedtls//library/rsa.c **** 
 3587              		.loc 1 1240 15 is_stmt 0 view .LVU1037
 3588 01a0 1023     		movs	r3, #16
 3589 01a2 5B42     		rsbs	r3, r3, #0
 3590 01a4 9846     		mov	r8, r3
 3591              	.LVL531:
1240:.././crypto/mbedtls//library/rsa.c **** 
 3592              		.loc 1 1240 15 view .LVU1038
 3593 01a6 C2E7     		b	.L196
 3594              	.LVL532:
 3595              	.L225:
1245:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_MPI_ALLOC_FAILED );
 3596              		.loc 1 1245 9 is_stmt 1 view .LVU1039
 3597 01a8 2800     		movs	r0, r5
 3598              	.LVL533:
1245:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_MPI_ALLOC_FAILED );
 3599              		.loc 1 1245 9 is_stmt 0 view .LVU1040
 3600 01aa FFF7FEFF 		bl	free
 3601              	.LVL534:
1246:.././crypto/mbedtls//library/rsa.c ****     }
 3602              		.loc 1 1246 9 is_stmt 1 view .LVU1041
1246:.././crypto/mbedtls//library/rsa.c ****     }
 3603              		.loc 1 1246 15 is_stmt 0 view .LVU1042
 3604 01ae 1023     		movs	r3, #16
 3605 01b0 5B42     		rsbs	r3, r3, #0
 3606 01b2 9846     		mov	r8, r3
 3607              	.LVL535:
1246:.././crypto/mbedtls//library/rsa.c ****     }
 3608              		.loc 1 1246 15 view .LVU1043
 3609 01b4 BBE7     		b	.L196
 3610              	.L228:
 3611 01b6 C046     		.align	2
 3612              	.L227:
 3613 01b8 00BDFFFF 		.word	-17152
 3614 01bc 80BFFFFF 		.word	-16512
 3615              		.cfi_endproc
 3616              	.LFE26:
 3618              		.section	.text.mbedtls_rsa_pkcs1_sign,"ax",%progbits
 3619              		.align	1
 3620              		.p2align 2,,3
 3621              		.global	mbedtls_rsa_pkcs1_sign
 3622              		.syntax unified
 3623              		.code	16
 3624              		.thumb_func
 3625              		.fpu softvfp
 3627              	mbedtls_rsa_pkcs1_sign:
 3628              	.LVL536:
 3629              	.LFB27:
1271:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V15 */
1272:.././crypto/mbedtls//library/rsa.c **** 
1273:.././crypto/mbedtls//library/rsa.c **** /*
1274:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA operation to sign the message digest
1275:.././crypto/mbedtls//library/rsa.c ****  */
1276:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_pkcs1_sign( mbedtls_rsa_context *ctx,
1277:.././crypto/mbedtls//library/rsa.c ****                     int (*f_rng)(void *, unsigned char *, size_t),
1278:.././crypto/mbedtls//library/rsa.c ****                     void *p_rng,
1279:.././crypto/mbedtls//library/rsa.c ****                     int mode,
1280:.././crypto/mbedtls//library/rsa.c ****                     mbedtls_md_type_t md_alg,
1281:.././crypto/mbedtls//library/rsa.c ****                     unsigned int hashlen,
1282:.././crypto/mbedtls//library/rsa.c ****                     const unsigned char *hash,
1283:.././crypto/mbedtls//library/rsa.c ****                     unsigned char *sig )
1284:.././crypto/mbedtls//library/rsa.c **** {
 3630              		.loc 1 1284 1 is_stmt 1 view -0
 3631              		.cfi_startproc
 3632              		@ args = 16, pretend = 0, frame = 0
 3633              		@ frame_needed = 0, uses_anonymous_args = 0
1285:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3634              		.loc 1 1285 5 view .LVU1045
1284:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3635              		.loc 1 1284 1 is_stmt 0 view .LVU1046
 3636 0000 30B5     		push	{r4, r5, lr}
 3637              	.LCFI24:
 3638              		.cfi_def_cfa_offset 12
 3639              		.cfi_offset 4, -12
 3640              		.cfi_offset 5, -8
 3641              		.cfi_offset 14, -4
 3642 0002 85B0     		sub	sp, sp, #20
 3643              	.LCFI25:
 3644              		.cfi_def_cfa_offset 32
1284:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3645              		.loc 1 1284 1 view .LVU1047
 3646 0004 08AC     		add	r4, sp, #32
 3647              	.LVL537:
1284:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 3648              		.loc 1 1284 1 view .LVU1048
 3649 0006 2578     		ldrb	r5, [r4]
 3650              		.loc 1 1285 16 view .LVU1049
 3651 0008 A424     		movs	r4, #164
 3652              	.LVL538:
 3653              		.loc 1 1285 5 view .LVU1050
 3654 000a 0459     		ldr	r4, [r0, r4]
 3655 000c 002C     		cmp	r4, #0
 3656 000e 0AD1     		bne	.L231
1286:.././crypto/mbedtls//library/rsa.c ****     {
1287:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
1288:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V15:
1289:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsassa_pkcs1_v15_sign( ctx, f_rng, p_rng, mode, md_alg,
 3657              		.loc 1 1289 13 is_stmt 1 view .LVU1051
 3658              		.loc 1 1289 20 is_stmt 0 view .LVU1052
 3659 0010 0B9C     		ldr	r4, [sp, #44]
 3660 0012 0095     		str	r5, [sp]
 3661 0014 0394     		str	r4, [sp, #12]
 3662 0016 0A9C     		ldr	r4, [sp, #40]
 3663 0018 0294     		str	r4, [sp, #8]
 3664 001a 099C     		ldr	r4, [sp, #36]
 3665 001c 0194     		str	r4, [sp, #4]
 3666 001e FFF7FEFF 		bl	mbedtls_rsa_rsassa_pkcs1_v15_sign
 3667              	.LVL539:
 3668              	.L229:
1290:.././crypto/mbedtls//library/rsa.c ****                                               hashlen, hash, sig );
1291:.././crypto/mbedtls//library/rsa.c **** #endif
1292:.././crypto/mbedtls//library/rsa.c **** 
1293:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
1294:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V21:
1295:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsassa_pss_sign( ctx, f_rng, p_rng, mode, md_alg,
1296:.././crypto/mbedtls//library/rsa.c ****                                         hashlen, hash, sig );
1297:.././crypto/mbedtls//library/rsa.c **** #endif
1298:.././crypto/mbedtls//library/rsa.c **** 
1299:.././crypto/mbedtls//library/rsa.c ****         default:
1300:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1301:.././crypto/mbedtls//library/rsa.c ****     }
1302:.././crypto/mbedtls//library/rsa.c **** }
 3669              		.loc 1 1302 1 view .LVU1053
 3670 0022 05B0     		add	sp, sp, #20
 3671              		@ sp needed
 3672 0024 30BD     		pop	{r4, r5, pc}
 3673              	.LVL540:
 3674              	.L231:
1300:.././crypto/mbedtls//library/rsa.c ****     }
 3675              		.loc 1 1300 19 view .LVU1054
 3676 0026 0148     		ldr	r0, .L232
 3677              	.LVL541:
1300:.././crypto/mbedtls//library/rsa.c ****     }
 3678              		.loc 1 1300 19 view .LVU1055
 3679 0028 FBE7     		b	.L229
 3680              	.L233:
 3681 002a C046     		.align	2
 3682              	.L232:
 3683 002c 00BFFFFF 		.word	-16640
 3684              		.cfi_endproc
 3685              	.LFE27:
 3687              		.section	.text.mbedtls_rsa_rsassa_pkcs1_v15_verify,"ax",%progbits
 3688              		.align	1
 3689              		.p2align 2,,3
 3690              		.global	mbedtls_rsa_rsassa_pkcs1_v15_verify
 3691              		.syntax unified
 3692              		.code	16
 3693              		.thumb_func
 3694              		.fpu softvfp
 3696              	mbedtls_rsa_rsassa_pkcs1_v15_verify:
 3697              	.LVL542:
 3698              	.LFB28:
1303:.././crypto/mbedtls//library/rsa.c **** 
1304:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
1305:.././crypto/mbedtls//library/rsa.c **** /*
1306:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSASSA-PSS-VERIFY function
1307:.././crypto/mbedtls//library/rsa.c ****  */
1308:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsassa_pss_verify_ext( mbedtls_rsa_context *ctx,
1309:.././crypto/mbedtls//library/rsa.c ****                                int (*f_rng)(void *, unsigned char *, size_t),
1310:.././crypto/mbedtls//library/rsa.c ****                                void *p_rng,
1311:.././crypto/mbedtls//library/rsa.c ****                                int mode,
1312:.././crypto/mbedtls//library/rsa.c ****                                mbedtls_md_type_t md_alg,
1313:.././crypto/mbedtls//library/rsa.c ****                                unsigned int hashlen,
1314:.././crypto/mbedtls//library/rsa.c ****                                const unsigned char *hash,
1315:.././crypto/mbedtls//library/rsa.c ****                                mbedtls_md_type_t mgf1_hash_id,
1316:.././crypto/mbedtls//library/rsa.c ****                                int expected_salt_len,
1317:.././crypto/mbedtls//library/rsa.c ****                                const unsigned char *sig )
1318:.././crypto/mbedtls//library/rsa.c **** {
1319:.././crypto/mbedtls//library/rsa.c ****     int ret;
1320:.././crypto/mbedtls//library/rsa.c ****     size_t siglen;
1321:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p;
1322:.././crypto/mbedtls//library/rsa.c ****     unsigned char result[MBEDTLS_MD_MAX_SIZE];
1323:.././crypto/mbedtls//library/rsa.c ****     unsigned char zeros[8];
1324:.././crypto/mbedtls//library/rsa.c ****     unsigned int hlen;
1325:.././crypto/mbedtls//library/rsa.c ****     size_t slen, msb;
1326:.././crypto/mbedtls//library/rsa.c ****     const mbedtls_md_info_t *md_info;
1327:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_context_t md_ctx;
1328:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
1329:.././crypto/mbedtls//library/rsa.c **** 
1330:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V21 )
1331:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1332:.././crypto/mbedtls//library/rsa.c **** 
1333:.././crypto/mbedtls//library/rsa.c ****     siglen = ctx->len;
1334:.././crypto/mbedtls//library/rsa.c **** 
1335:.././crypto/mbedtls//library/rsa.c ****     if( siglen < 16 || siglen > sizeof( buf ) )
1336:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1337:.././crypto/mbedtls//library/rsa.c **** 
1338:.././crypto/mbedtls//library/rsa.c ****     ret = ( mode == MBEDTLS_RSA_PUBLIC )
1339:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
1340:.././crypto/mbedtls//library/rsa.c ****           : mbedtls_rsa_private( ctx, f_rng, p_rng, sig, buf );
1341:.././crypto/mbedtls//library/rsa.c **** 
1342:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
1343:.././crypto/mbedtls//library/rsa.c ****         return( ret );
1344:.././crypto/mbedtls//library/rsa.c **** 
1345:.././crypto/mbedtls//library/rsa.c ****     p = buf;
1346:.././crypto/mbedtls//library/rsa.c **** 
1347:.././crypto/mbedtls//library/rsa.c ****     if( buf[siglen - 1] != 0xBC )
1348:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1349:.././crypto/mbedtls//library/rsa.c **** 
1350:.././crypto/mbedtls//library/rsa.c ****     if( md_alg != MBEDTLS_MD_NONE )
1351:.././crypto/mbedtls//library/rsa.c ****     {
1352:.././crypto/mbedtls//library/rsa.c ****         /* Gather length of hash to sign */
1353:.././crypto/mbedtls//library/rsa.c ****         md_info = mbedtls_md_info_from_type( md_alg );
1354:.././crypto/mbedtls//library/rsa.c ****         if( md_info == NULL )
1355:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1356:.././crypto/mbedtls//library/rsa.c **** 
1357:.././crypto/mbedtls//library/rsa.c ****         hashlen = mbedtls_md_get_size( md_info );
1358:.././crypto/mbedtls//library/rsa.c ****     }
1359:.././crypto/mbedtls//library/rsa.c **** 
1360:.././crypto/mbedtls//library/rsa.c ****     md_info = mbedtls_md_info_from_type( mgf1_hash_id );
1361:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
1362:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1363:.././crypto/mbedtls//library/rsa.c **** 
1364:.././crypto/mbedtls//library/rsa.c ****     hlen = mbedtls_md_get_size( md_info );
1365:.././crypto/mbedtls//library/rsa.c ****     slen = siglen - hlen - 1; /* Currently length of salt + padding */
1366:.././crypto/mbedtls//library/rsa.c **** 
1367:.././crypto/mbedtls//library/rsa.c ****     memset( zeros, 0, 8 );
1368:.././crypto/mbedtls//library/rsa.c **** 
1369:.././crypto/mbedtls//library/rsa.c ****     /*
1370:.././crypto/mbedtls//library/rsa.c ****      * Note: EMSA-PSS verification is over the length of N - 1 bits
1371:.././crypto/mbedtls//library/rsa.c ****      */
1372:.././crypto/mbedtls//library/rsa.c ****     msb = mbedtls_mpi_bitlen( &ctx->N ) - 1;
1373:.././crypto/mbedtls//library/rsa.c **** 
1374:.././crypto/mbedtls//library/rsa.c ****     /* Compensate for boundary condition when applying mask */
1375:.././crypto/mbedtls//library/rsa.c ****     if( msb % 8 == 0 )
1376:.././crypto/mbedtls//library/rsa.c ****     {
1377:.././crypto/mbedtls//library/rsa.c ****         p++;
1378:.././crypto/mbedtls//library/rsa.c ****         siglen -= 1;
1379:.././crypto/mbedtls//library/rsa.c ****     }
1380:.././crypto/mbedtls//library/rsa.c ****     if( buf[0] >> ( 8 - siglen * 8 + msb ) )
1381:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1382:.././crypto/mbedtls//library/rsa.c **** 
1383:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_init( &md_ctx );
1384:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_md_setup( &md_ctx, md_info, 0 ) ) != 0 )
1385:.././crypto/mbedtls//library/rsa.c ****     {
1386:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
1387:.././crypto/mbedtls//library/rsa.c ****         return( ret );
1388:.././crypto/mbedtls//library/rsa.c ****     }
1389:.././crypto/mbedtls//library/rsa.c **** 
1390:.././crypto/mbedtls//library/rsa.c ****     mgf_mask( p, siglen - hlen - 1, p + siglen - hlen - 1, hlen, &md_ctx );
1391:.././crypto/mbedtls//library/rsa.c **** 
1392:.././crypto/mbedtls//library/rsa.c ****     buf[0] &= 0xFF >> ( siglen * 8 - msb );
1393:.././crypto/mbedtls//library/rsa.c **** 
1394:.././crypto/mbedtls//library/rsa.c ****     while( p < buf + siglen && *p == 0 )
1395:.././crypto/mbedtls//library/rsa.c ****         p++;
1396:.././crypto/mbedtls//library/rsa.c **** 
1397:.././crypto/mbedtls//library/rsa.c ****     if( p == buf + siglen ||
1398:.././crypto/mbedtls//library/rsa.c ****         *p++ != 0x01 )
1399:.././crypto/mbedtls//library/rsa.c ****     {
1400:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
1401:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1402:.././crypto/mbedtls//library/rsa.c ****     }
1403:.././crypto/mbedtls//library/rsa.c **** 
1404:.././crypto/mbedtls//library/rsa.c ****     /* Actual salt len */
1405:.././crypto/mbedtls//library/rsa.c ****     slen -= p - buf;
1406:.././crypto/mbedtls//library/rsa.c **** 
1407:.././crypto/mbedtls//library/rsa.c ****     if( expected_salt_len != MBEDTLS_RSA_SALT_LEN_ANY &&
1408:.././crypto/mbedtls//library/rsa.c ****         slen != (size_t) expected_salt_len )
1409:.././crypto/mbedtls//library/rsa.c ****     {
1410:.././crypto/mbedtls//library/rsa.c ****         mbedtls_md_free( &md_ctx );
1411:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1412:.././crypto/mbedtls//library/rsa.c ****     }
1413:.././crypto/mbedtls//library/rsa.c **** 
1414:.././crypto/mbedtls//library/rsa.c ****     /*
1415:.././crypto/mbedtls//library/rsa.c ****      * Generate H = Hash( M' )
1416:.././crypto/mbedtls//library/rsa.c ****      */
1417:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_starts( &md_ctx );
1418:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, zeros, 8 );
1419:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, hash, hashlen );
1420:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_update( &md_ctx, p, slen );
1421:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_finish( &md_ctx, result );
1422:.././crypto/mbedtls//library/rsa.c **** 
1423:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_free( &md_ctx );
1424:.././crypto/mbedtls//library/rsa.c **** 
1425:.././crypto/mbedtls//library/rsa.c ****     if( memcmp( p + slen, result, hlen ) == 0 )
1426:.././crypto/mbedtls//library/rsa.c ****         return( 0 );
1427:.././crypto/mbedtls//library/rsa.c ****     else
1428:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1429:.././crypto/mbedtls//library/rsa.c **** }
1430:.././crypto/mbedtls//library/rsa.c **** 
1431:.././crypto/mbedtls//library/rsa.c **** /*
1432:.././crypto/mbedtls//library/rsa.c ****  * Simplified PKCS#1 v2.1 RSASSA-PSS-VERIFY function
1433:.././crypto/mbedtls//library/rsa.c ****  */
1434:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsassa_pss_verify( mbedtls_rsa_context *ctx,
1435:.././crypto/mbedtls//library/rsa.c ****                            int (*f_rng)(void *, unsigned char *, size_t),
1436:.././crypto/mbedtls//library/rsa.c ****                            void *p_rng,
1437:.././crypto/mbedtls//library/rsa.c ****                            int mode,
1438:.././crypto/mbedtls//library/rsa.c ****                            mbedtls_md_type_t md_alg,
1439:.././crypto/mbedtls//library/rsa.c ****                            unsigned int hashlen,
1440:.././crypto/mbedtls//library/rsa.c ****                            const unsigned char *hash,
1441:.././crypto/mbedtls//library/rsa.c ****                            const unsigned char *sig )
1442:.././crypto/mbedtls//library/rsa.c **** {
1443:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_type_t mgf1_hash_id = ( ctx->hash_id != MBEDTLS_MD_NONE )
1444:.././crypto/mbedtls//library/rsa.c ****                              ? (mbedtls_md_type_t) ctx->hash_id
1445:.././crypto/mbedtls//library/rsa.c ****                              : md_alg;
1446:.././crypto/mbedtls//library/rsa.c **** 
1447:.././crypto/mbedtls//library/rsa.c ****     return( mbedtls_rsa_rsassa_pss_verify_ext( ctx, f_rng, p_rng, mode,
1448:.././crypto/mbedtls//library/rsa.c ****                                        md_alg, hashlen, hash,
1449:.././crypto/mbedtls//library/rsa.c ****                                        mgf1_hash_id, MBEDTLS_RSA_SALT_LEN_ANY,
1450:.././crypto/mbedtls//library/rsa.c ****                                        sig ) );
1451:.././crypto/mbedtls//library/rsa.c **** 
1452:.././crypto/mbedtls//library/rsa.c **** }
1453:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V21 */
1454:.././crypto/mbedtls//library/rsa.c **** 
1455:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
1456:.././crypto/mbedtls//library/rsa.c **** /*
1457:.././crypto/mbedtls//library/rsa.c ****  * Implementation of the PKCS#1 v2.1 RSASSA-PKCS1-v1_5-VERIFY function
1458:.././crypto/mbedtls//library/rsa.c ****  */
1459:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_rsassa_pkcs1_v15_verify( mbedtls_rsa_context *ctx,
1460:.././crypto/mbedtls//library/rsa.c ****                                  int (*f_rng)(void *, unsigned char *, size_t),
1461:.././crypto/mbedtls//library/rsa.c ****                                  void *p_rng,
1462:.././crypto/mbedtls//library/rsa.c ****                                  int mode,
1463:.././crypto/mbedtls//library/rsa.c ****                                  mbedtls_md_type_t md_alg,
1464:.././crypto/mbedtls//library/rsa.c ****                                  unsigned int hashlen,
1465:.././crypto/mbedtls//library/rsa.c ****                                  const unsigned char *hash,
1466:.././crypto/mbedtls//library/rsa.c ****                                  const unsigned char *sig )
1467:.././crypto/mbedtls//library/rsa.c **** {
 3699              		.loc 1 1467 1 is_stmt 1 view -0
 3700              		.cfi_startproc
 3701              		@ args = 16, pretend = 0, frame = 1056
 3702              		@ frame_needed = 0, uses_anonymous_args = 0
1468:.././crypto/mbedtls//library/rsa.c ****     int ret;
 3703              		.loc 1 1468 5 view .LVU1057
1469:.././crypto/mbedtls//library/rsa.c ****     size_t len, siglen, asn1_len;
 3704              		.loc 1 1469 5 view .LVU1058
1470:.././crypto/mbedtls//library/rsa.c ****     unsigned char *p, *p0, *end;
 3705              		.loc 1 1470 5 view .LVU1059
1471:.././crypto/mbedtls//library/rsa.c ****     mbedtls_md_type_t msg_md_alg;
 3706              		.loc 1 1471 5 view .LVU1060
1472:.././crypto/mbedtls//library/rsa.c ****     const mbedtls_md_info_t *md_info;
 3707              		.loc 1 1472 5 view .LVU1061
1473:.././crypto/mbedtls//library/rsa.c ****     mbedtls_asn1_buf oid;
 3708              		.loc 1 1473 5 view .LVU1062
1474:.././crypto/mbedtls//library/rsa.c ****     unsigned char buf[MBEDTLS_MPI_MAX_SIZE];
 3709              		.loc 1 1474 5 view .LVU1063
1475:.././crypto/mbedtls//library/rsa.c **** 
1476:.././crypto/mbedtls//library/rsa.c ****     if( mode == MBEDTLS_RSA_PRIVATE && ctx->padding != MBEDTLS_RSA_PKCS_V15 )
 3710              		.loc 1 1476 5 view .LVU1064
1467:.././crypto/mbedtls//library/rsa.c ****     int ret;
 3711              		.loc 1 1467 1 is_stmt 0 view .LVU1065
 3712 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3713              	.LCFI26:
 3714              		.cfi_def_cfa_offset 20
 3715              		.cfi_offset 4, -20
 3716              		.cfi_offset 5, -16
 3717              		.cfi_offset 6, -12
 3718              		.cfi_offset 7, -8
 3719              		.cfi_offset 14, -4
 3720 0002 4F46     		mov	r7, r9
 3721 0004 D646     		mov	lr, r10
 3722 0006 4646     		mov	r6, r8
 3723 0008 C0B5     		push	{r6, r7, lr}
 3724              	.LCFI27:
 3725              		.cfi_def_cfa_offset 32
 3726              		.cfi_offset 8, -32
 3727              		.cfi_offset 9, -28
 3728              		.cfi_offset 10, -24
 3729 000a 754C     		ldr	r4, .L261
 3730 000c A544     		add	sp, sp, r4
 3731              	.LCFI28:
 3732              		.cfi_def_cfa_offset 1096
1467:.././crypto/mbedtls//library/rsa.c ****     int ret;
 3733              		.loc 1 1467 1 view .LVU1066
 3734 000e FFAC     		add	r4, sp, #1020
 3735 0010 4C34     		adds	r4, r4, #76
 3736 0012 2778     		ldrb	r7, [r4]
 3737              		.loc 1 1476 7 view .LVU1067
 3738 0014 012B     		cmp	r3, #1
 3739 0016 37D0     		beq	.L258
1477:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1478:.././crypto/mbedtls//library/rsa.c **** 
1479:.././crypto/mbedtls//library/rsa.c ****     siglen = ctx->len;
 3740              		.loc 1 1479 5 is_stmt 1 view .LVU1068
 3741              		.loc 1 1479 12 is_stmt 0 view .LVU1069
 3742 0018 4668     		ldr	r6, [r0, #4]
 3743              	.LVL543:
1480:.././crypto/mbedtls//library/rsa.c **** 
1481:.././crypto/mbedtls//library/rsa.c ****     if( siglen < 16 || siglen > sizeof( buf ) )
 3744              		.loc 1 1481 5 is_stmt 1 view .LVU1070
 3745              		.loc 1 1481 7 is_stmt 0 view .LVU1071
 3746 001a FC24     		movs	r4, #252
 3747              		.loc 1 1481 21 view .LVU1072
 3748 001c 3500     		movs	r5, r6
 3749 001e 103D     		subs	r5, r5, #16
 3750              		.loc 1 1481 7 view .LVU1073
 3751 0020 A400     		lsls	r4, r4, #2
 3752 0022 A542     		cmp	r5, r4
 3753 0024 00D9     		bls	.LCB3663
 3754 0026 D9E0     		b	.L248	@long jump
 3755              	.LCB3663:
1482:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1483:.././crypto/mbedtls//library/rsa.c **** 
1484:.././crypto/mbedtls//library/rsa.c ****     ret = ( mode == MBEDTLS_RSA_PUBLIC )
 3756              		.loc 1 1484 5 is_stmt 1 view .LVU1074
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
1486:.././crypto/mbedtls//library/rsa.c ****           : mbedtls_rsa_private( ctx, f_rng, p_rng, sig, buf );
 3757              		.loc 1 1486 11 is_stmt 0 view .LVU1075
 3758 0028 002B     		cmp	r3, #0
 3759 002a 3AD1     		bne	.L239
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
 3760              		.loc 1 1485 13 view .LVU1076
 3761 002c FFAB     		add	r3, sp, #1020
 3762              	.LVL544:
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
 3763              		.loc 1 1485 13 view .LVU1077
 3764 002e 0AAC     		add	r4, sp, #40
 3765 0030 2200     		movs	r2, r4
 3766              	.LVL545:
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
 3767              		.loc 1 1485 13 view .LVU1078
 3768 0032 996D     		ldr	r1, [r3, #88]
 3769              	.LVL546:
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
 3770              		.loc 1 1485 13 view .LVU1079
 3771 0034 5833     		adds	r3, r3, #88
 3772 0036 FFF7FEFF 		bl	mbedtls_rsa_public
 3773              	.LVL547:
1485:.././crypto/mbedtls//library/rsa.c ****           ? mbedtls_rsa_public(  ctx, sig, buf )
 3774              		.loc 1 1485 13 view .LVU1080
 3775 003a 0500     		movs	r5, r0
 3776              	.L240:
 3777              	.LVL548:
1487:.././crypto/mbedtls//library/rsa.c **** 
1488:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
 3778              		.loc 1 1488 5 is_stmt 1 view .LVU1081
 3779              		.loc 1 1488 7 is_stmt 0 view .LVU1082
 3780 003c 002D     		cmp	r5, #0
 3781 003e 1AD1     		bne	.L234
1489:.././crypto/mbedtls//library/rsa.c ****         return( ret );
1490:.././crypto/mbedtls//library/rsa.c **** 
1491:.././crypto/mbedtls//library/rsa.c ****     p = buf;
 3782              		.loc 1 1491 5 is_stmt 1 view .LVU1083
1492:.././crypto/mbedtls//library/rsa.c **** 
1493:.././crypto/mbedtls//library/rsa.c ****     if( *p++ != 0 || *p++ != MBEDTLS_RSA_SIGN )
 3783              		.loc 1 1493 5 view .LVU1084
 3784              		.loc 1 1493 7 is_stmt 0 view .LVU1085
 3785 0040 2378     		ldrb	r3, [r4]
 3786 0042 002B     		cmp	r3, #0
 3787 0044 16D1     		bne	.L242
 3788              		.loc 1 1493 24 discriminator 1 view .LVU1086
 3789 0046 02AA     		add	r2, sp, #8
 3790 0048 9446     		mov	ip, r2
 3791 004a 2223     		movs	r3, #34
 3792              		.loc 1 1493 19 discriminator 1 view .LVU1087
 3793 004c 6278     		ldrb	r2, [r4, #1]
 3794              		.loc 1 1493 24 discriminator 1 view .LVU1088
 3795 004e 6344     		add	r3, r3, ip
 3796 0050 0693     		str	r3, [sp, #24]
 3797              		.loc 1 1493 19 discriminator 1 view .LVU1089
 3798 0052 012A     		cmp	r2, #1
 3799 0054 0ED1     		bne	.L242
1494:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1495:.././crypto/mbedtls//library/rsa.c **** 
1496:.././crypto/mbedtls//library/rsa.c ****     while( *p != 0 )
 3800              		.loc 1 1496 10 is_stmt 1 view .LVU1090
 3801              		.loc 1 1496 12 is_stmt 0 view .LVU1091
 3802 0056 A278     		ldrb	r2, [r4, #2]
 3803              		.loc 1 1496 10 view .LVU1092
 3804 0058 002A     		cmp	r2, #0
 3805 005a 0BD0     		beq	.L242
 3806 005c 701E     		subs	r0, r6, #1
 3807 005e 2018     		adds	r0, r4, r0
 3808 0060 06E0     		b	.L243
 3809              	.L260:
1497:.././crypto/mbedtls//library/rsa.c ****     {
1498:.././crypto/mbedtls//library/rsa.c ****         if( p >= buf + siglen - 1 || *p != 0xFF )
 3810              		.loc 1 1498 35 discriminator 1 view .LVU1093
 3811 0062 FF2A     		cmp	r2, #255
 3812 0064 06D1     		bne	.L242
1499:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1500:.././crypto/mbedtls//library/rsa.c ****         p++;
 3813              		.loc 1 1500 9 is_stmt 1 view .LVU1094
1496:.././crypto/mbedtls//library/rsa.c ****     {
 3814              		.loc 1 1496 12 is_stmt 0 view .LVU1095
 3815 0066 5A78     		ldrb	r2, [r3, #1]
 3816              		.loc 1 1500 10 view .LVU1096
 3817 0068 591C     		adds	r1, r3, #1
1496:.././crypto/mbedtls//library/rsa.c ****     {
 3818              		.loc 1 1496 10 is_stmt 1 view .LVU1097
 3819 006a 002A     		cmp	r2, #0
 3820 006c 22D0     		beq	.L259
 3821 006e 0B00     		movs	r3, r1
 3822              	.L243:
1498:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 3823              		.loc 1 1498 9 view .LVU1098
1498:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 3824              		.loc 1 1498 11 is_stmt 0 view .LVU1099
 3825 0070 8342     		cmp	r3, r0
 3826 0072 F6D3     		bcc	.L260
 3827              	.L242:
1494:.././crypto/mbedtls//library/rsa.c **** 
 3828              		.loc 1 1494 15 view .LVU1100
 3829 0074 5B4D     		ldr	r5, .L261+4
 3830              	.LVL549:
 3831              	.L234:
1501:.././crypto/mbedtls//library/rsa.c ****     }
1502:.././crypto/mbedtls//library/rsa.c ****     p++; /* skip 00 byte */
1503:.././crypto/mbedtls//library/rsa.c **** 
1504:.././crypto/mbedtls//library/rsa.c ****     /* We've read: 00 01 PS 00 where PS must be at least 8 bytes */
1505:.././crypto/mbedtls//library/rsa.c ****     if( p - buf < 11 )
1506:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1507:.././crypto/mbedtls//library/rsa.c **** 
1508:.././crypto/mbedtls//library/rsa.c ****     len = siglen - ( p - buf );
1509:.././crypto/mbedtls//library/rsa.c **** 
1510:.././crypto/mbedtls//library/rsa.c ****     if( len == hashlen && md_alg == MBEDTLS_MD_NONE )
1511:.././crypto/mbedtls//library/rsa.c ****     {
1512:.././crypto/mbedtls//library/rsa.c ****         if( memcmp( p, hash, hashlen ) == 0 )
1513:.././crypto/mbedtls//library/rsa.c ****             return( 0 );
1514:.././crypto/mbedtls//library/rsa.c ****         else
1515:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1516:.././crypto/mbedtls//library/rsa.c ****     }
1517:.././crypto/mbedtls//library/rsa.c **** 
1518:.././crypto/mbedtls//library/rsa.c ****     md_info = mbedtls_md_info_from_type( md_alg );
1519:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
1520:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
1521:.././crypto/mbedtls//library/rsa.c ****     hashlen = mbedtls_md_get_size( md_info );
1522:.././crypto/mbedtls//library/rsa.c **** 
1523:.././crypto/mbedtls//library/rsa.c ****     end = p + len;
1524:.././crypto/mbedtls//library/rsa.c **** 
1525:.././crypto/mbedtls//library/rsa.c ****     /*
1526:.././crypto/mbedtls//library/rsa.c ****      * Parse the ASN.1 structure inside the PKCS#1 v1.5 structure.
1527:.././crypto/mbedtls//library/rsa.c ****      * Insist on 2-byte length tags, to protect against variants of
1528:.././crypto/mbedtls//library/rsa.c ****      * Bleichenbacher's forgery attack against lax PKCS#1v1.5 verification.
1529:.././crypto/mbedtls//library/rsa.c ****      */
1530:.././crypto/mbedtls//library/rsa.c ****     p0 = p;
1531:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len,
1532:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
1533:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1534:.././crypto/mbedtls//library/rsa.c ****     if( p != p0 + 2 || asn1_len + 2 != len )
1535:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1536:.././crypto/mbedtls//library/rsa.c **** 
1537:.././crypto/mbedtls//library/rsa.c ****     p0 = p;
1538:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len,
1539:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
1540:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1541:.././crypto/mbedtls//library/rsa.c ****     if( p != p0 + 2 || asn1_len + 6 + hashlen != len )
1542:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1543:.././crypto/mbedtls//library/rsa.c **** 
1544:.././crypto/mbedtls//library/rsa.c ****     p0 = p;
1545:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &oid.len, MBEDTLS_ASN1_OID ) ) != 0 )
1546:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1547:.././crypto/mbedtls//library/rsa.c ****     if( p != p0 + 2 )
1548:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1549:.././crypto/mbedtls//library/rsa.c **** 
1550:.././crypto/mbedtls//library/rsa.c ****     oid.p = p;
1551:.././crypto/mbedtls//library/rsa.c ****     p += oid.len;
1552:.././crypto/mbedtls//library/rsa.c **** 
1553:.././crypto/mbedtls//library/rsa.c ****     if( mbedtls_oid_get_md_alg( &oid, &msg_md_alg ) != 0 )
1554:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1555:.././crypto/mbedtls//library/rsa.c **** 
1556:.././crypto/mbedtls//library/rsa.c ****     if( md_alg != msg_md_alg )
1557:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1558:.././crypto/mbedtls//library/rsa.c **** 
1559:.././crypto/mbedtls//library/rsa.c ****     /*
1560:.././crypto/mbedtls//library/rsa.c ****      * assume the algorithm parameters must be NULL
1561:.././crypto/mbedtls//library/rsa.c ****      */
1562:.././crypto/mbedtls//library/rsa.c ****     p0 = p;
1563:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len, MBEDTLS_ASN1_NULL ) ) != 0 )
1564:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1565:.././crypto/mbedtls//library/rsa.c ****     if( p != p0 + 2 )
1566:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1567:.././crypto/mbedtls//library/rsa.c **** 
1568:.././crypto/mbedtls//library/rsa.c ****     p0 = p;
1569:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len, MBEDTLS_ASN1_OCTET_STRING ) ) != 0 )
1570:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1571:.././crypto/mbedtls//library/rsa.c ****     if( p != p0 + 2 || asn1_len != hashlen )
1572:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1573:.././crypto/mbedtls//library/rsa.c **** 
1574:.././crypto/mbedtls//library/rsa.c ****     if( memcmp( p, hash, hashlen ) != 0 )
1575:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1576:.././crypto/mbedtls//library/rsa.c **** 
1577:.././crypto/mbedtls//library/rsa.c ****     p += hashlen;
1578:.././crypto/mbedtls//library/rsa.c **** 
1579:.././crypto/mbedtls//library/rsa.c ****     if( p != end )
1580:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
1581:.././crypto/mbedtls//library/rsa.c **** 
1582:.././crypto/mbedtls//library/rsa.c ****     return( 0 );
1583:.././crypto/mbedtls//library/rsa.c **** }
 3832              		.loc 1 1583 1 view .LVU1101
 3833 0076 2800     		movs	r0, r5
 3834 0078 8523     		movs	r3, #133
 3835 007a DB00     		lsls	r3, r3, #3
 3836 007c 9D44     		add	sp, sp, r3
 3837              		@ sp needed
 3838 007e 1CBC     		pop	{r2, r3, r4}
 3839 0080 9046     		mov	r8, r2
 3840 0082 9946     		mov	r9, r3
 3841 0084 A246     		mov	r10, r4
 3842 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 3843              	.LVL550:
 3844              	.L258:
1476:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3845              		.loc 1 1476 43 discriminator 1 view .LVU1102
 3846 0088 A333     		adds	r3, r3, #163
 3847              	.LVL551:
1476:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3848              		.loc 1 1476 37 discriminator 1 view .LVU1103
 3849 008a C358     		ldr	r3, [r0, r3]
 3850              	.LVL552:
1476:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3851              		.loc 1 1476 37 discriminator 1 view .LVU1104
 3852 008c 002B     		cmp	r3, #0
 3853 008e 00D0     		beq	.LCB3764
 3854 0090 A4E0     		b	.L248	@long jump
 3855              	.LCB3764:
1479:.././crypto/mbedtls//library/rsa.c **** 
 3856              		.loc 1 1479 5 is_stmt 1 view .LVU1105
1479:.././crypto/mbedtls//library/rsa.c **** 
 3857              		.loc 1 1479 12 is_stmt 0 view .LVU1106
 3858 0092 4668     		ldr	r6, [r0, #4]
 3859              	.LVL553:
1481:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3860              		.loc 1 1481 5 is_stmt 1 view .LVU1107
1481:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3861              		.loc 1 1481 7 is_stmt 0 view .LVU1108
 3862 0094 FC23     		movs	r3, #252
1481:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3863              		.loc 1 1481 21 view .LVU1109
 3864 0096 3400     		movs	r4, r6
 3865 0098 103C     		subs	r4, r4, #16
1481:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3866              		.loc 1 1481 7 view .LVU1110
 3867 009a 9B00     		lsls	r3, r3, #2
 3868 009c 9C42     		cmp	r4, r3
 3869 009e 00D9     		bls	.LCB3774
 3870 00a0 9CE0     		b	.L248	@long jump
 3871              	.LCB3774:
 3872              	.L239:
1486:.././crypto/mbedtls//library/rsa.c **** 
 3873              		.loc 1 1486 13 discriminator 1 view .LVU1111
 3874 00a2 0AAC     		add	r4, sp, #40
 3875 00a4 FFAB     		add	r3, sp, #1020
 3876 00a6 0094     		str	r4, [sp]
 3877 00a8 5833     		adds	r3, r3, #88
 3878 00aa 1B68     		ldr	r3, [r3]
 3879 00ac FFF7FEFF 		bl	mbedtls_rsa_private
 3880              	.LVL554:
1486:.././crypto/mbedtls//library/rsa.c **** 
 3881              		.loc 1 1486 13 discriminator 1 view .LVU1112
 3882 00b0 0500     		movs	r5, r0
 3883 00b2 C3E7     		b	.L240
 3884              	.LVL555:
 3885              	.L259:
1502:.././crypto/mbedtls//library/rsa.c **** 
 3886              		.loc 1 1502 5 is_stmt 1 view .LVU1113
1502:.././crypto/mbedtls//library/rsa.c **** 
 3887              		.loc 1 1502 6 is_stmt 0 view .LVU1114
 3888 00b4 0233     		adds	r3, r3, #2
 3889 00b6 0693     		str	r3, [sp, #24]
1505:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 3890              		.loc 1 1505 5 is_stmt 1 view .LVU1115
1505:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 3891              		.loc 1 1505 11 is_stmt 0 view .LVU1116
 3892 00b8 1C1B     		subs	r4, r3, r4
1505:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_INVALID_PADDING );
 3893              		.loc 1 1505 7 view .LVU1117
 3894 00ba 0A2C     		cmp	r4, #10
 3895 00bc DADD     		ble	.L242
1508:.././crypto/mbedtls//library/rsa.c **** 
 3896              		.loc 1 1508 5 is_stmt 1 view .LVU1118
1510:.././crypto/mbedtls//library/rsa.c ****     {
 3897              		.loc 1 1510 7 is_stmt 0 view .LVU1119
 3898 00be FFAA     		add	r2, sp, #1020
 3899 00c0 5032     		adds	r2, r2, #80
 3900 00c2 1268     		ldr	r2, [r2]
1508:.././crypto/mbedtls//library/rsa.c **** 
 3901              		.loc 1 1508 9 view .LVU1120
 3902 00c4 361B     		subs	r6, r6, r4
 3903              	.LVL556:
1510:.././crypto/mbedtls//library/rsa.c ****     {
 3904              		.loc 1 1510 5 is_stmt 1 view .LVU1121
1510:.././crypto/mbedtls//library/rsa.c ****     {
 3905              		.loc 1 1510 7 is_stmt 0 view .LVU1122
 3906 00c6 9642     		cmp	r6, r2
 3907 00c8 0ED1     		bne	.L244
1510:.././crypto/mbedtls//library/rsa.c ****     {
 3908              		.loc 1 1510 24 discriminator 1 view .LVU1123
 3909 00ca 002F     		cmp	r7, #0
 3910 00cc 0CD1     		bne	.L244
1512:.././crypto/mbedtls//library/rsa.c ****             return( 0 );
 3911              		.loc 1 1512 9 is_stmt 1 view .LVU1124
1512:.././crypto/mbedtls//library/rsa.c ****             return( 0 );
 3912              		.loc 1 1512 13 is_stmt 0 view .LVU1125
 3913 00ce FFAA     		add	r2, sp, #1020
 3914 00d0 FFA9     		add	r1, sp, #1020
 3915 00d2 5032     		adds	r2, r2, #80
 3916 00d4 5431     		adds	r1, r1, #84
 3917 00d6 1800     		movs	r0, r3
 3918 00d8 1268     		ldr	r2, [r2]
 3919 00da 0968     		ldr	r1, [r1]
 3920 00dc FFF7FEFF 		bl	memcmp
 3921              	.LVL557:
1512:.././crypto/mbedtls//library/rsa.c ****             return( 0 );
 3922              		.loc 1 1512 11 view .LVU1126
 3923 00e0 0028     		cmp	r0, #0
 3924 00e2 C8D0     		beq	.L234
 3925              	.LVL558:
 3926              	.L246:
1515:.././crypto/mbedtls//library/rsa.c ****     }
 3927              		.loc 1 1515 19 view .LVU1127
 3928 00e4 404D     		ldr	r5, .L261+8
 3929 00e6 C6E7     		b	.L234
 3930              	.LVL559:
 3931              	.L244:
1518:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
 3932              		.loc 1 1518 5 is_stmt 1 view .LVU1128
1518:.././crypto/mbedtls//library/rsa.c ****     if( md_info == NULL )
 3933              		.loc 1 1518 15 is_stmt 0 view .LVU1129
 3934 00e8 3800     		movs	r0, r7
 3935 00ea FFF7FEFF 		bl	mbedtls_md_info_from_type
 3936              	.LVL560:
1519:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3937              		.loc 1 1519 5 is_stmt 1 view .LVU1130
1519:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 3938              		.loc 1 1519 7 is_stmt 0 view .LVU1131
 3939 00ee 0028     		cmp	r0, #0
 3940 00f0 74D0     		beq	.L248
1521:.././crypto/mbedtls//library/rsa.c **** 
 3941              		.loc 1 1521 5 is_stmt 1 view .LVU1132
1521:.././crypto/mbedtls//library/rsa.c **** 
 3942              		.loc 1 1521 15 is_stmt 0 view .LVU1133
 3943 00f2 FFF7FEFF 		bl	mbedtls_md_get_size
 3944              	.LVL561:
1523:.././crypto/mbedtls//library/rsa.c **** 
 3945              		.loc 1 1523 13 view .LVU1134
 3946 00f6 069B     		ldr	r3, [sp, #24]
1521:.././crypto/mbedtls//library/rsa.c **** 
 3947              		.loc 1 1521 15 view .LVU1135
 3948 00f8 8046     		mov	r8, r0
 3949              	.LVL562:
1523:.././crypto/mbedtls//library/rsa.c **** 
 3950              		.loc 1 1523 5 is_stmt 1 view .LVU1136
1523:.././crypto/mbedtls//library/rsa.c **** 
 3951              		.loc 1 1523 9 is_stmt 0 view .LVU1137
 3952 00fa 9C19     		adds	r4, r3, r6
 3953              	.LVL563:
1530:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len,
 3954              		.loc 1 1530 5 is_stmt 1 view .LVU1138
1523:.././crypto/mbedtls//library/rsa.c **** 
 3955              		.loc 1 1523 13 is_stmt 0 view .LVU1139
 3956 00fc 9946     		mov	r9, r3
 3957              	.LVL564:
1531:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3958              		.loc 1 1531 5 is_stmt 1 view .LVU1140
1531:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3959              		.loc 1 1531 17 is_stmt 0 view .LVU1141
 3960 00fe 2100     		movs	r1, r4
 3961 0100 3023     		movs	r3, #48
 3962              	.LVL565:
1531:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3963              		.loc 1 1531 17 view .LVU1142
 3964 0102 05AA     		add	r2, sp, #20
 3965 0104 06A8     		add	r0, sp, #24
 3966              	.LVL566:
1531:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3967              		.loc 1 1531 17 view .LVU1143
 3968 0106 FFF7FEFF 		bl	mbedtls_asn1_get_tag
 3969              	.LVL567:
1531:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3970              		.loc 1 1531 7 view .LVU1144
 3971 010a 0028     		cmp	r0, #0
 3972 010c EAD1     		bne	.L246
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3973              		.loc 1 1534 5 is_stmt 1 view .LVU1145
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3974              		.loc 1 1534 11 is_stmt 0 view .LVU1146
 3975 010e 069B     		ldr	r3, [sp, #24]
 3976 0110 9A46     		mov	r10, r3
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3977              		.loc 1 1534 17 view .LVU1147
 3978 0112 4B46     		mov	r3, r9
 3979 0114 0233     		adds	r3, r3, #2
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3980              		.loc 1 1534 7 view .LVU1148
 3981 0116 9A45     		cmp	r10, r3
 3982 0118 E4D1     		bne	.L246
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3983              		.loc 1 1534 33 discriminator 1 view .LVU1149
 3984 011a 059B     		ldr	r3, [sp, #20]
 3985 011c 0233     		adds	r3, r3, #2
1534:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 3986              		.loc 1 1534 21 discriminator 1 view .LVU1150
 3987 011e B342     		cmp	r3, r6
 3988 0120 E0D1     		bne	.L246
1537:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len,
 3989              		.loc 1 1537 5 is_stmt 1 view .LVU1151
 3990              	.LVL568:
1538:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3991              		.loc 1 1538 5 view .LVU1152
1538:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3992              		.loc 1 1538 17 is_stmt 0 view .LVU1153
 3993 0122 3023     		movs	r3, #48
 3994 0124 2100     		movs	r1, r4
 3995 0126 05AA     		add	r2, sp, #20
 3996 0128 06A8     		add	r0, sp, #24
 3997              	.LVL569:
1538:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 3998              		.loc 1 1538 17 view .LVU1154
 3999 012a FFF7FEFF 		bl	mbedtls_asn1_get_tag
 4000              	.LVL570:
1538:.././crypto/mbedtls//library/rsa.c ****             MBEDTLS_ASN1_CONSTRUCTED | MBEDTLS_ASN1_SEQUENCE ) ) != 0 )
 4001              		.loc 1 1538 7 view .LVU1155
 4002 012e 0028     		cmp	r0, #0
 4003 0130 D8D1     		bne	.L246
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4004              		.loc 1 1541 5 is_stmt 1 view .LVU1156
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4005              		.loc 1 1541 11 is_stmt 0 view .LVU1157
 4006 0132 069B     		ldr	r3, [sp, #24]
 4007 0134 9946     		mov	r9, r3
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4008              		.loc 1 1541 17 view .LVU1158
 4009 0136 5346     		mov	r3, r10
 4010 0138 0233     		adds	r3, r3, #2
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4011              		.loc 1 1541 7 view .LVU1159
 4012 013a 9945     		cmp	r9, r3
 4013 013c D2D1     		bne	.L246
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4014              		.loc 1 1541 37 discriminator 1 view .LVU1160
 4015 013e 059B     		ldr	r3, [sp, #20]
 4016 0140 0633     		adds	r3, r3, #6
 4017 0142 4344     		add	r3, r3, r8
1541:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4018              		.loc 1 1541 21 discriminator 1 view .LVU1161
 4019 0144 B342     		cmp	r3, r6
 4020 0146 CDD1     		bne	.L246
1544:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &oid.len, MBEDTLS_ASN1_OID ) ) != 0 )
 4021              		.loc 1 1544 5 is_stmt 1 view .LVU1162
 4022              	.LVL571:
1545:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4023              		.loc 1 1545 5 view .LVU1163
1545:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4024              		.loc 1 1545 17 is_stmt 0 view .LVU1164
 4025 0148 0623     		movs	r3, #6
 4026 014a 2100     		movs	r1, r4
 4027 014c 08AA     		add	r2, sp, #32
 4028 014e 06A8     		add	r0, sp, #24
 4029              	.LVL572:
1545:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4030              		.loc 1 1545 17 view .LVU1165
 4031 0150 FFF7FEFF 		bl	mbedtls_asn1_get_tag
 4032              	.LVL573:
1545:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4033              		.loc 1 1545 7 view .LVU1166
 4034 0154 0028     		cmp	r0, #0
 4035 0156 C5D1     		bne	.L246
1547:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4036              		.loc 1 1547 5 is_stmt 1 view .LVU1167
1547:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4037              		.loc 1 1547 17 is_stmt 0 view .LVU1168
 4038 0158 4A46     		mov	r2, r9
1547:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4039              		.loc 1 1547 11 view .LVU1169
 4040 015a 069B     		ldr	r3, [sp, #24]
1547:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4041              		.loc 1 1547 17 view .LVU1170
 4042 015c 0232     		adds	r2, r2, #2
1547:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4043              		.loc 1 1547 7 view .LVU1171
 4044 015e 9342     		cmp	r3, r2
 4045 0160 C0D1     		bne	.L246
1550:.././crypto/mbedtls//library/rsa.c ****     p += oid.len;
 4046              		.loc 1 1550 5 is_stmt 1 view .LVU1172
1551:.././crypto/mbedtls//library/rsa.c **** 
 4047              		.loc 1 1551 7 is_stmt 0 view .LVU1173
 4048 0162 089A     		ldr	r2, [sp, #32]
1550:.././crypto/mbedtls//library/rsa.c ****     p += oid.len;
 4049              		.loc 1 1550 11 view .LVU1174
 4050 0164 0993     		str	r3, [sp, #36]
1551:.././crypto/mbedtls//library/rsa.c **** 
 4051              		.loc 1 1551 5 is_stmt 1 view .LVU1175
1551:.././crypto/mbedtls//library/rsa.c **** 
 4052              		.loc 1 1551 7 is_stmt 0 view .LVU1176
 4053 0166 9446     		mov	ip, r2
 4054 0168 6344     		add	r3, r3, ip
 4055 016a 0693     		str	r3, [sp, #24]
1553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4056              		.loc 1 1553 5 is_stmt 1 view .LVU1177
1553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4057              		.loc 1 1553 9 is_stmt 0 view .LVU1178
 4058 016c 02AB     		add	r3, sp, #8
 4059 016e 0B26     		movs	r6, #11
 4060              	.LVL574:
1553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4061              		.loc 1 1553 9 view .LVU1179
 4062 0170 9C46     		mov	ip, r3
 4063 0172 6644     		add	r6, r6, ip
 4064 0174 3100     		movs	r1, r6
 4065 0176 07A8     		add	r0, sp, #28
 4066              	.LVL575:
1551:.././crypto/mbedtls//library/rsa.c **** 
 4067              		.loc 1 1551 7 view .LVU1180
 4068 0178 0392     		str	r2, [sp, #12]
1553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4069              		.loc 1 1553 9 view .LVU1181
 4070 017a FFF7FEFF 		bl	mbedtls_oid_get_md_alg
 4071              	.LVL576:
1553:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4072              		.loc 1 1553 7 view .LVU1182
 4073 017e 0028     		cmp	r0, #0
 4074 0180 B0D1     		bne	.L246
1556:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4075              		.loc 1 1556 5 is_stmt 1 view .LVU1183
1556:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4076              		.loc 1 1556 7 is_stmt 0 view .LVU1184
 4077 0182 3378     		ldrb	r3, [r6]
 4078 0184 BB42     		cmp	r3, r7
 4079 0186 ADD1     		bne	.L246
1562:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len, MBEDTLS_ASN1_NULL ) ) != 0 )
 4080              		.loc 1 1562 5 is_stmt 1 view .LVU1185
1563:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4081              		.loc 1 1563 17 is_stmt 0 view .LVU1186
 4082 0188 0523     		movs	r3, #5
 4083 018a 2100     		movs	r1, r4
 4084 018c 05AA     		add	r2, sp, #20
 4085 018e 06A8     		add	r0, sp, #24
1562:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len, MBEDTLS_ASN1_NULL ) ) != 0 )
 4086              		.loc 1 1562 8 view .LVU1187
 4087 0190 069E     		ldr	r6, [sp, #24]
 4088              	.LVL577:
1563:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4089              		.loc 1 1563 5 is_stmt 1 view .LVU1188
1563:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4090              		.loc 1 1563 17 is_stmt 0 view .LVU1189
 4091 0192 FFF7FEFF 		bl	mbedtls_asn1_get_tag
 4092              	.LVL578:
1563:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4093              		.loc 1 1563 7 view .LVU1190
 4094 0196 0028     		cmp	r0, #0
 4095 0198 A4D1     		bne	.L246
1565:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4096              		.loc 1 1565 5 is_stmt 1 view .LVU1191
1565:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4097              		.loc 1 1565 11 is_stmt 0 view .LVU1192
 4098 019a 069F     		ldr	r7, [sp, #24]
1565:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4099              		.loc 1 1565 17 view .LVU1193
 4100 019c 0236     		adds	r6, r6, #2
 4101              	.LVL579:
1565:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4102              		.loc 1 1565 7 view .LVU1194
 4103 019e B742     		cmp	r7, r6
 4104 01a0 A0D1     		bne	.L246
1568:.././crypto/mbedtls//library/rsa.c ****     if( ( ret = mbedtls_asn1_get_tag( &p, end, &asn1_len, MBEDTLS_ASN1_OCTET_STRING ) ) != 0 )
 4105              		.loc 1 1568 5 is_stmt 1 view .LVU1195
 4106              	.LVL580:
1569:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4107              		.loc 1 1569 5 view .LVU1196
1569:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4108              		.loc 1 1569 17 is_stmt 0 view .LVU1197
 4109 01a2 0423     		movs	r3, #4
 4110 01a4 2100     		movs	r1, r4
 4111 01a6 05AA     		add	r2, sp, #20
 4112 01a8 06A8     		add	r0, sp, #24
 4113              	.LVL581:
1569:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4114              		.loc 1 1569 17 view .LVU1198
 4115 01aa FFF7FEFF 		bl	mbedtls_asn1_get_tag
 4116              	.LVL582:
1569:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4117              		.loc 1 1569 7 view .LVU1199
 4118 01ae 0028     		cmp	r0, #0
 4119 01b0 98D1     		bne	.L246
1571:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4120              		.loc 1 1571 5 is_stmt 1 view .LVU1200
1571:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4121              		.loc 1 1571 11 is_stmt 0 view .LVU1201
 4122 01b2 069E     		ldr	r6, [sp, #24]
1571:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4123              		.loc 1 1571 17 view .LVU1202
 4124 01b4 0237     		adds	r7, r7, #2
 4125              	.LVL583:
1571:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4126              		.loc 1 1571 7 view .LVU1203
 4127 01b6 BE42     		cmp	r6, r7
 4128 01b8 94D1     		bne	.L246
1571:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4129              		.loc 1 1571 21 discriminator 1 view .LVU1204
 4130 01ba 059B     		ldr	r3, [sp, #20]
 4131 01bc 4345     		cmp	r3, r8
 4132 01be 91D1     		bne	.L246
1574:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4133              		.loc 1 1574 5 is_stmt 1 view .LVU1205
1574:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4134              		.loc 1 1574 9 is_stmt 0 view .LVU1206
 4135 01c0 FFAB     		add	r3, sp, #1020
 4136 01c2 4246     		mov	r2, r8
 4137 01c4 3000     		movs	r0, r6
 4138              	.LVL584:
1574:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4139              		.loc 1 1574 9 view .LVU1207
 4140 01c6 596D     		ldr	r1, [r3, #84]
 4141 01c8 5433     		adds	r3, r3, #84
 4142 01ca FFF7FEFF 		bl	memcmp
 4143              	.LVL585:
1574:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4144              		.loc 1 1574 7 view .LVU1208
 4145 01ce 0028     		cmp	r0, #0
 4146 01d0 88D1     		bne	.L246
1577:.././crypto/mbedtls//library/rsa.c **** 
 4147              		.loc 1 1577 5 is_stmt 1 view .LVU1209
1579:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4148              		.loc 1 1579 5 view .LVU1210
1577:.././crypto/mbedtls//library/rsa.c **** 
 4149              		.loc 1 1577 7 is_stmt 0 view .LVU1211
 4150 01d2 4644     		add	r6, r6, r8
1579:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_VERIFY_FAILED );
 4151              		.loc 1 1579 7 view .LVU1212
 4152 01d4 B442     		cmp	r4, r6
 4153 01d6 00D1     		bne	.LCB4011
 4154 01d8 4DE7     		b	.L234	@long jump
 4155              	.LCB4011:
 4156 01da 83E7     		b	.L246
 4157              	.LVL586:
 4158              	.L248:
1482:.././crypto/mbedtls//library/rsa.c **** 
 4159              		.loc 1 1482 15 view .LVU1213
 4160 01dc 034D     		ldr	r5, .L261+12
 4161 01de 4AE7     		b	.L234
 4162              	.L262:
 4163              		.align	2
 4164              	.L261:
 4165 01e0 D8FBFFFF 		.word	-1064
 4166 01e4 00BFFFFF 		.word	-16640
 4167 01e8 80BCFFFF 		.word	-17280
 4168 01ec 80BFFFFF 		.word	-16512
 4169              		.cfi_endproc
 4170              	.LFE28:
 4172              		.section	.text.mbedtls_rsa_pkcs1_verify,"ax",%progbits
 4173              		.align	1
 4174              		.p2align 2,,3
 4175              		.global	mbedtls_rsa_pkcs1_verify
 4176              		.syntax unified
 4177              		.code	16
 4178              		.thumb_func
 4179              		.fpu softvfp
 4181              	mbedtls_rsa_pkcs1_verify:
 4182              	.LVL587:
 4183              	.LFB29:
1584:.././crypto/mbedtls//library/rsa.c **** #endif /* MBEDTLS_PKCS1_V15 */
1585:.././crypto/mbedtls//library/rsa.c **** 
1586:.././crypto/mbedtls//library/rsa.c **** /*
1587:.././crypto/mbedtls//library/rsa.c ****  * Do an RSA operation and check the message digest
1588:.././crypto/mbedtls//library/rsa.c ****  */
1589:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_pkcs1_verify( mbedtls_rsa_context *ctx,
1590:.././crypto/mbedtls//library/rsa.c ****                       int (*f_rng)(void *, unsigned char *, size_t),
1591:.././crypto/mbedtls//library/rsa.c ****                       void *p_rng,
1592:.././crypto/mbedtls//library/rsa.c ****                       int mode,
1593:.././crypto/mbedtls//library/rsa.c ****                       mbedtls_md_type_t md_alg,
1594:.././crypto/mbedtls//library/rsa.c ****                       unsigned int hashlen,
1595:.././crypto/mbedtls//library/rsa.c ****                       const unsigned char *hash,
1596:.././crypto/mbedtls//library/rsa.c ****                       const unsigned char *sig )
1597:.././crypto/mbedtls//library/rsa.c **** {
 4184              		.loc 1 1597 1 is_stmt 1 view -0
 4185              		.cfi_startproc
 4186              		@ args = 16, pretend = 0, frame = 0
 4187              		@ frame_needed = 0, uses_anonymous_args = 0
1598:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 4188              		.loc 1 1598 5 view .LVU1215
1597:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 4189              		.loc 1 1597 1 is_stmt 0 view .LVU1216
 4190 0000 30B5     		push	{r4, r5, lr}
 4191              	.LCFI29:
 4192              		.cfi_def_cfa_offset 12
 4193              		.cfi_offset 4, -12
 4194              		.cfi_offset 5, -8
 4195              		.cfi_offset 14, -4
 4196 0002 85B0     		sub	sp, sp, #20
 4197              	.LCFI30:
 4198              		.cfi_def_cfa_offset 32
1597:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 4199              		.loc 1 1597 1 view .LVU1217
 4200 0004 08AC     		add	r4, sp, #32
 4201              	.LVL588:
1597:.././crypto/mbedtls//library/rsa.c ****     switch( ctx->padding )
 4202              		.loc 1 1597 1 view .LVU1218
 4203 0006 2578     		ldrb	r5, [r4]
 4204              		.loc 1 1598 16 view .LVU1219
 4205 0008 A424     		movs	r4, #164
 4206              	.LVL589:
 4207              		.loc 1 1598 5 view .LVU1220
 4208 000a 0459     		ldr	r4, [r0, r4]
 4209 000c 002C     		cmp	r4, #0
 4210 000e 0AD1     		bne	.L265
1599:.././crypto/mbedtls//library/rsa.c ****     {
1600:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V15)
1601:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V15:
1602:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsassa_pkcs1_v15_verify( ctx, f_rng, p_rng, mode, md_alg,
 4211              		.loc 1 1602 13 is_stmt 1 view .LVU1221
 4212              		.loc 1 1602 20 is_stmt 0 view .LVU1222
 4213 0010 0B9C     		ldr	r4, [sp, #44]
 4214 0012 0095     		str	r5, [sp]
 4215 0014 0394     		str	r4, [sp, #12]
 4216 0016 0A9C     		ldr	r4, [sp, #40]
 4217 0018 0294     		str	r4, [sp, #8]
 4218 001a 099C     		ldr	r4, [sp, #36]
 4219 001c 0194     		str	r4, [sp, #4]
 4220 001e FFF7FEFF 		bl	mbedtls_rsa_rsassa_pkcs1_v15_verify
 4221              	.LVL590:
 4222              	.L263:
1603:.././crypto/mbedtls//library/rsa.c ****                                                 hashlen, hash, sig );
1604:.././crypto/mbedtls//library/rsa.c **** #endif
1605:.././crypto/mbedtls//library/rsa.c **** 
1606:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_PKCS1_V21)
1607:.././crypto/mbedtls//library/rsa.c ****         case MBEDTLS_RSA_PKCS_V21:
1608:.././crypto/mbedtls//library/rsa.c ****             return mbedtls_rsa_rsassa_pss_verify( ctx, f_rng, p_rng, mode, md_alg,
1609:.././crypto/mbedtls//library/rsa.c ****                                           hashlen, hash, sig );
1610:.././crypto/mbedtls//library/rsa.c **** #endif
1611:.././crypto/mbedtls//library/rsa.c **** 
1612:.././crypto/mbedtls//library/rsa.c ****         default:
1613:.././crypto/mbedtls//library/rsa.c ****             return( MBEDTLS_ERR_RSA_INVALID_PADDING );
1614:.././crypto/mbedtls//library/rsa.c ****     }
1615:.././crypto/mbedtls//library/rsa.c **** }
 4223              		.loc 1 1615 1 view .LVU1223
 4224 0022 05B0     		add	sp, sp, #20
 4225              		@ sp needed
 4226 0024 30BD     		pop	{r4, r5, pc}
 4227              	.LVL591:
 4228              	.L265:
1613:.././crypto/mbedtls//library/rsa.c ****     }
 4229              		.loc 1 1613 19 view .LVU1224
 4230 0026 0148     		ldr	r0, .L266
 4231              	.LVL592:
1613:.././crypto/mbedtls//library/rsa.c ****     }
 4232              		.loc 1 1613 19 view .LVU1225
 4233 0028 FBE7     		b	.L263
 4234              	.L267:
 4235 002a C046     		.align	2
 4236              	.L266:
 4237 002c 00BFFFFF 		.word	-16640
 4238              		.cfi_endproc
 4239              	.LFE29:
 4241              		.section	.text.mbedtls_rsa_free,"ax",%progbits
 4242              		.align	1
 4243              		.p2align 2,,3
 4244              		.global	mbedtls_rsa_free
 4245              		.syntax unified
 4246              		.code	16
 4247              		.thumb_func
 4248              		.fpu softvfp
 4250              	mbedtls_rsa_free:
 4251              	.LVL593:
 4252              	.LFB31:
1616:.././crypto/mbedtls//library/rsa.c **** 
1617:.././crypto/mbedtls//library/rsa.c **** /*
1618:.././crypto/mbedtls//library/rsa.c ****  * Copy the components of an RSA key
1619:.././crypto/mbedtls//library/rsa.c ****  */
1620:.././crypto/mbedtls//library/rsa.c **** int mbedtls_rsa_copy( mbedtls_rsa_context *dst, const mbedtls_rsa_context *src )
1621:.././crypto/mbedtls//library/rsa.c **** {
1622:.././crypto/mbedtls//library/rsa.c ****     int ret;
1623:.././crypto/mbedtls//library/rsa.c **** 
1624:.././crypto/mbedtls//library/rsa.c ****     dst->ver = src->ver;
1625:.././crypto/mbedtls//library/rsa.c ****     dst->len = src->len;
1626:.././crypto/mbedtls//library/rsa.c **** 
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->N, &src->N ) );
1628:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
1629:.././crypto/mbedtls//library/rsa.c **** 
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->D, &src->D ) );
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
1635:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
1636:.././crypto/mbedtls//library/rsa.c **** 
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RN, &src->RN ) );
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
1639:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
1640:.././crypto/mbedtls//library/rsa.c **** 
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vi, &src->Vi ) );
1642:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
1643:.././crypto/mbedtls//library/rsa.c **** 
1644:.././crypto/mbedtls//library/rsa.c ****     dst->padding = src->padding;
1645:.././crypto/mbedtls//library/rsa.c ****     dst->hash_id = src->hash_id;
1646:.././crypto/mbedtls//library/rsa.c **** 
1647:.././crypto/mbedtls//library/rsa.c **** cleanup:
1648:.././crypto/mbedtls//library/rsa.c ****     if( ret != 0 )
1649:.././crypto/mbedtls//library/rsa.c ****         mbedtls_rsa_free( dst );
1650:.././crypto/mbedtls//library/rsa.c **** 
1651:.././crypto/mbedtls//library/rsa.c ****     return( ret );
1652:.././crypto/mbedtls//library/rsa.c **** }
1653:.././crypto/mbedtls//library/rsa.c **** 
1654:.././crypto/mbedtls//library/rsa.c **** /*
1655:.././crypto/mbedtls//library/rsa.c ****  * Free the components of an RSA key
1656:.././crypto/mbedtls//library/rsa.c ****  */
1657:.././crypto/mbedtls//library/rsa.c **** void mbedtls_rsa_free( mbedtls_rsa_context *ctx )
1658:.././crypto/mbedtls//library/rsa.c **** {
 4253              		.loc 1 1658 1 is_stmt 1 view -0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 0
 4256              		@ frame_needed = 0, uses_anonymous_args = 0
1659:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->Vi ); mbedtls_mpi_free( &ctx->Vf );
 4257              		.loc 1 1659 5 view .LVU1227
1658:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->Vi ); mbedtls_mpi_free( &ctx->Vf );
 4258              		.loc 1 1658 1 is_stmt 0 view .LVU1228
 4259 0000 10B5     		push	{r4, lr}
 4260              	.LCFI31:
 4261              		.cfi_def_cfa_offset 8
 4262              		.cfi_offset 4, -8
 4263              		.cfi_offset 14, -4
1658:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->Vi ); mbedtls_mpi_free( &ctx->Vf );
 4264              		.loc 1 1658 1 view .LVU1229
 4265 0002 0400     		movs	r4, r0
 4266              		.loc 1 1659 5 view .LVU1230
 4267 0004 8C30     		adds	r0, r0, #140
 4268              	.LVL594:
 4269              		.loc 1 1659 5 view .LVU1231
 4270 0006 FFF7FEFF 		bl	mbedtls_mpi_free
 4271              	.LVL595:
 4272              		.loc 1 1659 35 is_stmt 1 view .LVU1232
 4273 000a 2000     		movs	r0, r4
 4274 000c 9830     		adds	r0, r0, #152
 4275 000e FFF7FEFF 		bl	mbedtls_mpi_free
 4276              	.LVL596:
1660:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->RQ ); mbedtls_mpi_free( &ctx->RP ); mbedtls_mpi_free( &ctx->RN );
 4277              		.loc 1 1660 5 view .LVU1233
 4278 0012 2000     		movs	r0, r4
 4279 0014 8030     		adds	r0, r0, #128
 4280 0016 FFF7FEFF 		bl	mbedtls_mpi_free
 4281              	.LVL597:
 4282              		.loc 1 1660 35 view .LVU1234
 4283 001a 2000     		movs	r0, r4
 4284 001c 7430     		adds	r0, r0, #116
 4285 001e FFF7FEFF 		bl	mbedtls_mpi_free
 4286              	.LVL598:
 4287              		.loc 1 1660 65 view .LVU1235
 4288 0022 2000     		movs	r0, r4
 4289 0024 6830     		adds	r0, r0, #104
 4290 0026 FFF7FEFF 		bl	mbedtls_mpi_free
 4291              	.LVL599:
1661:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->QP ); mbedtls_mpi_free( &ctx->DQ ); mbedtls_mpi_free( &ctx->DP );
 4292              		.loc 1 1661 5 view .LVU1236
 4293 002a 2000     		movs	r0, r4
 4294 002c 5C30     		adds	r0, r0, #92
 4295 002e FFF7FEFF 		bl	mbedtls_mpi_free
 4296              	.LVL600:
 4297              		.loc 1 1661 35 view .LVU1237
 4298 0032 2000     		movs	r0, r4
 4299 0034 5030     		adds	r0, r0, #80
 4300 0036 FFF7FEFF 		bl	mbedtls_mpi_free
 4301              	.LVL601:
 4302              		.loc 1 1661 65 view .LVU1238
 4303 003a 2000     		movs	r0, r4
 4304 003c 4430     		adds	r0, r0, #68
 4305 003e FFF7FEFF 		bl	mbedtls_mpi_free
 4306              	.LVL602:
1662:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->Q  ); mbedtls_mpi_free( &ctx->P  ); mbedtls_mpi_free( &ctx->D );
 4307              		.loc 1 1662 5 view .LVU1239
 4308 0042 2000     		movs	r0, r4
 4309 0044 3830     		adds	r0, r0, #56
 4310 0046 FFF7FEFF 		bl	mbedtls_mpi_free
 4311              	.LVL603:
 4312              		.loc 1 1662 35 view .LVU1240
 4313 004a 2000     		movs	r0, r4
 4314 004c 2C30     		adds	r0, r0, #44
 4315 004e FFF7FEFF 		bl	mbedtls_mpi_free
 4316              	.LVL604:
 4317              		.loc 1 1662 65 view .LVU1241
 4318 0052 2000     		movs	r0, r4
 4319 0054 2030     		adds	r0, r0, #32
 4320 0056 FFF7FEFF 		bl	mbedtls_mpi_free
 4321              	.LVL605:
1663:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_free( &ctx->E  ); mbedtls_mpi_free( &ctx->N  );
 4322              		.loc 1 1663 5 view .LVU1242
 4323 005a 2000     		movs	r0, r4
 4324 005c 1430     		adds	r0, r0, #20
 4325 005e FFF7FEFF 		bl	mbedtls_mpi_free
 4326              	.LVL606:
 4327              		.loc 1 1663 35 view .LVU1243
 4328 0062 2000     		movs	r0, r4
 4329 0064 0830     		adds	r0, r0, #8
 4330 0066 FFF7FEFF 		bl	mbedtls_mpi_free
 4331              	.LVL607:
1664:.././crypto/mbedtls//library/rsa.c **** 
1665:.././crypto/mbedtls//library/rsa.c **** #if defined(MBEDTLS_THREADING_C)
1666:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mutex_free( &ctx->mutex );
1667:.././crypto/mbedtls//library/rsa.c **** #endif
1668:.././crypto/mbedtls//library/rsa.c **** }
 4332              		.loc 1 1668 1 is_stmt 0 view .LVU1244
 4333              		@ sp needed
 4334              	.LVL608:
 4335              		.loc 1 1668 1 view .LVU1245
 4336 006a 10BD     		pop	{r4, pc}
 4337              		.cfi_endproc
 4338              	.LFE31:
 4340              		.section	.text.mbedtls_rsa_gen_key,"ax",%progbits
 4341              		.align	1
 4342              		.p2align 2,,3
 4343              		.global	mbedtls_rsa_gen_key
 4344              		.syntax unified
 4345              		.code	16
 4346              		.thumb_func
 4347              		.fpu softvfp
 4349              	mbedtls_rsa_gen_key:
 4350              	.LVL609:
 4351              	.LFB15:
 108:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4352              		.loc 1 108 1 is_stmt 1 view -0
 4353              		.cfi_startproc
 4354              		@ args = 4, pretend = 0, frame = 56
 4355              		@ frame_needed = 0, uses_anonymous_args = 0
 109:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi P1, Q1, H, G;
 4356              		.loc 1 109 5 view .LVU1247
 110:.././crypto/mbedtls//library/rsa.c **** 
 4357              		.loc 1 110 5 view .LVU1248
 112:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4358              		.loc 1 112 5 view .LVU1249
 108:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4359              		.loc 1 108 1 is_stmt 0 view .LVU1250
 4360 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4361              	.LCFI32:
 4362              		.cfi_def_cfa_offset 20
 4363              		.cfi_offset 4, -20
 4364              		.cfi_offset 5, -16
 4365              		.cfi_offset 6, -12
 4366              		.cfi_offset 7, -8
 4367              		.cfi_offset 14, -4
 4368 0002 5746     		mov	r7, r10
 4369 0004 4546     		mov	r5, r8
 4370 0006 DE46     		mov	lr, fp
 4371 0008 4E46     		mov	r6, r9
 4372 000a E0B5     		push	{r5, r6, r7, lr}
 4373              	.LCFI33:
 4374              		.cfi_def_cfa_offset 36
 4375              		.cfi_offset 8, -36
 4376              		.cfi_offset 9, -32
 4377              		.cfi_offset 10, -28
 4378              		.cfi_offset 11, -24
 4379 000c 91B0     		sub	sp, sp, #68
 4380              	.LCFI34:
 4381              		.cfi_def_cfa_offset 104
 108:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4382              		.loc 1 108 1 view .LVU1251
 4383 000e 0500     		movs	r5, r0
 4384 0010 0F1E     		subs	r7, r1, #0
 4385 0012 9046     		mov	r8, r2
 4386 0014 9A46     		mov	r10, r3
 4387 0016 0390     		str	r0, [sp, #12]
 112:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4388              		.loc 1 112 7 view .LVU1252
 4389 0018 00D1     		bne	.LCB4231
 4390 001a D4E0     		b	.L280	@long jump
 4391              	.LCB4231:
 112:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4392              		.loc 1 112 23 discriminator 1 view .LVU1253
 4393 001c 7F2B     		cmp	r3, #127
 4394 001e 00D8     		bhi	.LCB4233
 4395 0020 D1E0     		b	.L280	@long jump
 4396              	.LCB4233:
 112:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4397              		.loc 1 112 38 discriminator 2 view .LVU1254
 4398 0022 1A9B     		ldr	r3, [sp, #104]
 4399              	.LVL610:
 112:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4400              		.loc 1 112 38 discriminator 2 view .LVU1255
 4401 0024 022B     		cmp	r3, #2
 4402 0026 00DC     		bgt	.LCB4237
 4403 0028 CDE0     		b	.L280	@long jump
 4404              	.LCB4237:
 115:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4405              		.loc 1 115 5 is_stmt 1 view .LVU1256
 115:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_BAD_INPUT_DATA );
 4406              		.loc 1 115 7 is_stmt 0 view .LVU1257
 4407 002a 5346     		mov	r3, r10
 4408 002c DB07     		lsls	r3, r3, #31
 4409 002e 00D5     		bpl	.LCB4243
 4410 0030 C9E0     		b	.L280	@long jump
 4411              	.LCB4243:
 118:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H ); mbedtls_mpi_init( &G );
 4412              		.loc 1 118 5 is_stmt 1 view .LVU1258
 4413 0032 04AB     		add	r3, sp, #16
 4414 0034 1800     		movs	r0, r3
 4415              	.LVL611:
 118:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H ); mbedtls_mpi_init( &G );
 4416              		.loc 1 118 5 is_stmt 0 view .LVU1259
 4417 0036 FFF7FEFF 		bl	mbedtls_mpi_init
 4418              	.LVL612:
 118:.././crypto/mbedtls//library/rsa.c ****     mbedtls_mpi_init( &H ); mbedtls_mpi_init( &G );
 4419              		.loc 1 118 30 is_stmt 1 view .LVU1260
 4420 003a 07AB     		add	r3, sp, #28
 4421 003c 1800     		movs	r0, r3
 4422 003e FFF7FEFF 		bl	mbedtls_mpi_init
 4423              	.LVL613:
 119:.././crypto/mbedtls//library/rsa.c **** 
 4424              		.loc 1 119 5 view .LVU1261
 4425 0042 0AAB     		add	r3, sp, #40
 4426 0044 1800     		movs	r0, r3
 4427 0046 FFF7FEFF 		bl	mbedtls_mpi_init
 4428              	.LVL614:
 119:.././crypto/mbedtls//library/rsa.c **** 
 4429              		.loc 1 119 29 view .LVU1262
 4430 004a 0DAB     		add	r3, sp, #52
 4431 004c 1800     		movs	r0, r3
 4432 004e FFF7FEFF 		bl	mbedtls_mpi_init
 4433              	.LVL615:
 125:.././crypto/mbedtls//library/rsa.c **** 
 4434              		.loc 1 125 5 view .LVU1263
 125:.././crypto/mbedtls//library/rsa.c **** 
 4435              		.loc 1 125 5 view .LVU1264
 4436 0052 2B00     		movs	r3, r5
 4437 0054 1433     		adds	r3, r3, #20
 4438 0056 1800     		movs	r0, r3
 4439 0058 1A99     		ldr	r1, [sp, #104]
 4440 005a 0293     		str	r3, [sp, #8]
 4441 005c FFF7FEFF 		bl	mbedtls_mpi_lset
 4442              	.LVL616:
 4443 0060 041E     		subs	r4, r0, #0
 4444              	.LVL617:
 125:.././crypto/mbedtls//library/rsa.c **** 
 4445              		.loc 1 125 5 is_stmt 0 view .LVU1265
 4446 0062 5BD1     		bne	.L271
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4447              		.loc 1 129 9 view .LVU1266
 4448 0064 5346     		mov	r3, r10
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4449              		.loc 1 138 9 view .LVU1267
 4450 0066 0822     		movs	r2, #8
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4451              		.loc 1 129 9 view .LVU1268
 4452 0068 5B08     		lsrs	r3, r3, #1
 4453 006a 9946     		mov	r9, r3
 4454 006c 2B00     		movs	r3, r5
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4455              		.loc 1 138 9 view .LVU1269
 4456 006e 9446     		mov	ip, r2
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4457              		.loc 1 132 9 view .LVU1270
 4458 0070 1E00     		movs	r6, r3
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4459              		.loc 1 138 9 view .LVU1271
 4460 0072 6344     		add	r3, r3, ip
 4461 0074 9B46     		mov	fp, r3
 4462 0076 4C46     		mov	r4, r9
 4463 0078 2C35     		adds	r5, r5, #44
 4464              	.LVL618:
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4465              		.loc 1 132 9 view .LVU1272
 4466 007a 3836     		adds	r6, r6, #56
 4467              	.LVL619:
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4468              		.loc 1 132 9 view .LVU1273
 4469 007c 05E0     		b	.L273
 4470              	.LVL620:
 4471              	.L275:
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4472              		.loc 1 148 9 is_stmt 1 view .LVU1274
 150:.././crypto/mbedtls//library/rsa.c **** 
 4473              		.loc 1 150 10 view .LVU1275
 150:.././crypto/mbedtls//library/rsa.c **** 
 4474              		.loc 1 150 12 is_stmt 0 view .LVU1276
 4475 007e 0121     		movs	r1, #1
 4476 0080 0DA8     		add	r0, sp, #52
 4477 0082 FFF7FEFF 		bl	mbedtls_mpi_cmp_int
 4478              	.LVL621:
 150:.././crypto/mbedtls//library/rsa.c **** 
 4479              		.loc 1 150 5 view .LVU1277
 4480 0086 0028     		cmp	r0, #0
 4481 0088 67D0     		beq	.L289
 4482              	.L273:
 125:.././crypto/mbedtls//library/rsa.c **** 
 4483              		.loc 1 125 5 is_stmt 1 discriminator 2 view .LVU1278
 127:.././crypto/mbedtls//library/rsa.c ****     {
 4484              		.loc 1 127 5 discriminator 2 view .LVU1279
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4485              		.loc 1 129 9 discriminator 2 view .LVU1280
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4486              		.loc 1 129 9 discriminator 2 view .LVU1281
 4487 008a 4346     		mov	r3, r8
 4488 008c 0022     		movs	r2, #0
 4489 008e 0093     		str	r3, [sp]
 4490 0090 2100     		movs	r1, r4
 4491 0092 3B00     		movs	r3, r7
 4492 0094 2800     		movs	r0, r5
 4493 0096 FFF7FEFF 		bl	mbedtls_mpi_gen_prime
 4494              	.LVL622:
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4495              		.loc 1 129 9 is_stmt 0 discriminator 2 view .LVU1282
 4496 009a 0028     		cmp	r0, #0
 4497 009c 3DD1     		bne	.L288
 129:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4498              		.loc 1 129 9 is_stmt 1 discriminator 2 view .LVU1283
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4499              		.loc 1 132 9 discriminator 2 view .LVU1284
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4500              		.loc 1 132 9 discriminator 2 view .LVU1285
 4501 009e 4346     		mov	r3, r8
 4502 00a0 0022     		movs	r2, #0
 4503 00a2 0093     		str	r3, [sp]
 4504 00a4 2100     		movs	r1, r4
 4505 00a6 3B00     		movs	r3, r7
 4506 00a8 3000     		movs	r0, r6
 4507              	.LVL623:
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4508              		.loc 1 132 9 is_stmt 0 discriminator 2 view .LVU1286
 4509 00aa FFF7FEFF 		bl	mbedtls_mpi_gen_prime
 4510              	.LVL624:
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4511              		.loc 1 132 9 discriminator 2 view .LVU1287
 4512 00ae 0028     		cmp	r0, #0
 4513 00b0 33D1     		bne	.L288
 132:.././crypto/mbedtls//library/rsa.c ****                                 f_rng, p_rng ) );
 4514              		.loc 1 132 9 is_stmt 1 discriminator 2 view .LVU1288
 135:.././crypto/mbedtls//library/rsa.c ****             continue;
 4515              		.loc 1 135 9 discriminator 2 view .LVU1289
 135:.././crypto/mbedtls//library/rsa.c ****             continue;
 4516              		.loc 1 135 13 is_stmt 0 discriminator 2 view .LVU1290
 4517 00b2 3100     		movs	r1, r6
 4518 00b4 2800     		movs	r0, r5
 4519              	.LVL625:
 135:.././crypto/mbedtls//library/rsa.c ****             continue;
 4520              		.loc 1 135 13 discriminator 2 view .LVU1291
 4521 00b6 FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 4522              	.LVL626:
 135:.././crypto/mbedtls//library/rsa.c ****             continue;
 4523              		.loc 1 135 11 discriminator 2 view .LVU1292
 4524 00ba 0028     		cmp	r0, #0
 4525 00bc DFD0     		beq	.L275
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4526              		.loc 1 138 9 is_stmt 1 view .LVU1293
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4527              		.loc 1 138 9 view .LVU1294
 4528 00be 3200     		movs	r2, r6
 4529 00c0 2900     		movs	r1, r5
 4530 00c2 5846     		mov	r0, fp
 4531 00c4 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 4532              	.LVL627:
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4533              		.loc 1 138 9 is_stmt 0 view .LVU1295
 4534 00c8 0028     		cmp	r0, #0
 4535 00ca 26D1     		bne	.L288
 138:.././crypto/mbedtls//library/rsa.c ****         if( mbedtls_mpi_bitlen( &ctx->N ) != nbits )
 4536              		.loc 1 138 9 is_stmt 1 discriminator 2 view .LVU1296
 139:.././crypto/mbedtls//library/rsa.c ****             continue;
 4537              		.loc 1 139 9 discriminator 2 view .LVU1297
 139:.././crypto/mbedtls//library/rsa.c ****             continue;
 4538              		.loc 1 139 13 is_stmt 0 discriminator 2 view .LVU1298
 4539 00cc 5846     		mov	r0, fp
 4540              	.LVL628:
 139:.././crypto/mbedtls//library/rsa.c ****             continue;
 4541              		.loc 1 139 13 discriminator 2 view .LVU1299
 4542 00ce FFF7FEFF 		bl	mbedtls_mpi_bitlen
 4543              	.LVL629:
 139:.././crypto/mbedtls//library/rsa.c ****             continue;
 4544              		.loc 1 139 11 discriminator 2 view .LVU1300
 4545 00d2 5045     		cmp	r0, r10
 4546 00d4 D3D1     		bne	.L275
 142:.././crypto/mbedtls//library/rsa.c ****                                 mbedtls_mpi_swap( &ctx->P, &ctx->Q );
 4547              		.loc 1 142 9 is_stmt 1 view .LVU1301
 142:.././crypto/mbedtls//library/rsa.c ****                                 mbedtls_mpi_swap( &ctx->P, &ctx->Q );
 4548              		.loc 1 142 13 is_stmt 0 view .LVU1302
 4549 00d6 3100     		movs	r1, r6
 4550 00d8 2800     		movs	r0, r5
 4551 00da FFF7FEFF 		bl	mbedtls_mpi_cmp_mpi
 4552              	.LVL630:
 142:.././crypto/mbedtls//library/rsa.c ****                                 mbedtls_mpi_swap( &ctx->P, &ctx->Q );
 4553              		.loc 1 142 11 view .LVU1303
 4554 00de 0028     		cmp	r0, #0
 4555 00e0 36DB     		blt	.L290
 4556              	.L276:
 145:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 4557              		.loc 1 145 9 is_stmt 1 view .LVU1304
 145:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 4558              		.loc 1 145 9 view .LVU1305
 4559 00e2 0122     		movs	r2, #1
 4560 00e4 2900     		movs	r1, r5
 4561 00e6 04A8     		add	r0, sp, #16
 4562 00e8 FFF7FEFF 		bl	mbedtls_mpi_sub_int
 4563              	.LVL631:
 145:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 4564              		.loc 1 145 9 is_stmt 0 view .LVU1306
 4565 00ec 0028     		cmp	r0, #0
 4566 00ee 14D1     		bne	.L288
 145:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_sub_int( &Q1, &ctx->Q, 1 ) );
 4567              		.loc 1 145 9 is_stmt 1 discriminator 2 view .LVU1307
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 4568              		.loc 1 146 9 discriminator 2 view .LVU1308
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 4569              		.loc 1 146 9 discriminator 2 view .LVU1309
 4570 00f0 0122     		movs	r2, #1
 4571 00f2 3100     		movs	r1, r6
 4572 00f4 07A8     		add	r0, sp, #28
 4573              	.LVL632:
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 4574              		.loc 1 146 9 is_stmt 0 discriminator 2 view .LVU1310
 4575 00f6 FFF7FEFF 		bl	mbedtls_mpi_sub_int
 4576              	.LVL633:
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 4577              		.loc 1 146 9 discriminator 2 view .LVU1311
 4578 00fa 0028     		cmp	r0, #0
 4579 00fc 0DD1     		bne	.L288
 146:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_mul_mpi( &H, &P1, &Q1 ) );
 4580              		.loc 1 146 9 is_stmt 1 discriminator 2 view .LVU1312
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 4581              		.loc 1 147 9 discriminator 2 view .LVU1313
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 4582              		.loc 1 147 9 discriminator 2 view .LVU1314
 4583 00fe 07AA     		add	r2, sp, #28
 4584 0100 04A9     		add	r1, sp, #16
 4585 0102 0AA8     		add	r0, sp, #40
 4586              	.LVL634:
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 4587              		.loc 1 147 9 is_stmt 0 discriminator 2 view .LVU1315
 4588 0104 FFF7FEFF 		bl	mbedtls_mpi_mul_mpi
 4589              	.LVL635:
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 4590              		.loc 1 147 9 discriminator 2 view .LVU1316
 4591 0108 0028     		cmp	r0, #0
 4592 010a 06D1     		bne	.L288
 147:.././crypto/mbedtls//library/rsa.c ****         MBEDTLS_MPI_CHK( mbedtls_mpi_gcd( &G, &ctx->E, &H  ) );
 4593              		.loc 1 147 9 is_stmt 1 discriminator 2 view .LVU1317
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4594              		.loc 1 148 9 discriminator 2 view .LVU1318
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4595              		.loc 1 148 9 discriminator 2 view .LVU1319
 4596 010c 0299     		ldr	r1, [sp, #8]
 4597 010e 0AAA     		add	r2, sp, #40
 4598 0110 0DA8     		add	r0, sp, #52
 4599              	.LVL636:
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4600              		.loc 1 148 9 is_stmt 0 discriminator 2 view .LVU1320
 4601 0112 FFF7FEFF 		bl	mbedtls_mpi_gcd
 4602              	.LVL637:
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4603              		.loc 1 148 9 discriminator 2 view .LVU1321
 4604 0116 0028     		cmp	r0, #0
 4605 0118 B1D0     		beq	.L275
 4606              	.L288:
 148:.././crypto/mbedtls//library/rsa.c ****     }
 4607              		.loc 1 148 9 discriminator 2 view .LVU1322
 4608 011a 0400     		movs	r4, r0
 4609              	.LVL638:
 4610              	.L271:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4611              		.loc 1 167 5 is_stmt 1 view .LVU1323
 4612 011c 04A8     		add	r0, sp, #16
 4613              	.LVL639:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4614              		.loc 1 167 5 is_stmt 0 view .LVU1324
 4615 011e FFF7FEFF 		bl	mbedtls_mpi_free
 4616              	.LVL640:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4617              		.loc 1 167 30 is_stmt 1 view .LVU1325
 4618 0122 07A8     		add	r0, sp, #28
 4619 0124 FFF7FEFF 		bl	mbedtls_mpi_free
 4620              	.LVL641:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4621              		.loc 1 167 55 view .LVU1326
 4622 0128 0AA8     		add	r0, sp, #40
 4623 012a FFF7FEFF 		bl	mbedtls_mpi_free
 4624              	.LVL642:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4625              		.loc 1 167 79 view .LVU1327
 4626 012e 0DA8     		add	r0, sp, #52
 4627 0130 FFF7FEFF 		bl	mbedtls_mpi_free
 4628              	.LVL643:
 169:.././crypto/mbedtls//library/rsa.c ****     {
 4629              		.loc 1 169 5 view .LVU1328
 171:.././crypto/mbedtls//library/rsa.c ****         return( MBEDTLS_ERR_RSA_KEY_GEN_FAILED + ret );
 4630              		.loc 1 171 9 view .LVU1329
 4631 0134 0398     		ldr	r0, [sp, #12]
 4632 0136 FFF7FEFF 		bl	mbedtls_rsa_free
 4633              	.LVL644:
 172:.././crypto/mbedtls//library/rsa.c ****     }
 4634              		.loc 1 172 9 view .LVU1330
 172:.././crypto/mbedtls//library/rsa.c ****     }
 4635              		.loc 1 172 48 is_stmt 0 view .LVU1331
 4636 013a 244B     		ldr	r3, .L291
 4637 013c 9C46     		mov	ip, r3
 4638 013e 6444     		add	r4, r4, ip
 4639              	.LVL645:
 4640              	.L269:
 176:.././crypto/mbedtls//library/rsa.c **** 
 4641              		.loc 1 176 1 view .LVU1332
 4642 0140 2000     		movs	r0, r4
 4643 0142 11B0     		add	sp, sp, #68
 4644              		@ sp needed
 4645              	.LVL646:
 4646              	.LVL647:
 176:.././crypto/mbedtls//library/rsa.c **** 
 4647              		.loc 1 176 1 view .LVU1333
 4648 0144 3CBC     		pop	{r2, r3, r4, r5}
 4649 0146 9046     		mov	r8, r2
 4650 0148 9946     		mov	r9, r3
 4651 014a A246     		mov	r10, r4
 4652 014c AB46     		mov	fp, r5
 4653 014e F0BD     		pop	{r4, r5, r6, r7, pc}
 4654              	.LVL648:
 4655              	.L290:
 143:.././crypto/mbedtls//library/rsa.c **** 
 4656              		.loc 1 143 33 is_stmt 1 view .LVU1334
 4657 0150 3100     		movs	r1, r6
 4658 0152 2800     		movs	r0, r5
 4659 0154 FFF7FEFF 		bl	mbedtls_mpi_swap
 4660              	.LVL649:
 4661 0158 C3E7     		b	.L276
 4662              	.L289:
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 4663              		.loc 1 158 5 view .LVU1335
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 4664              		.loc 1 158 5 view .LVU1336
 4665 015a 039F     		ldr	r7, [sp, #12]
 4666              	.LVL650:
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 4667              		.loc 1 158 5 is_stmt 0 view .LVU1337
 4668 015c 0299     		ldr	r1, [sp, #8]
 4669 015e 2037     		adds	r7, r7, #32
 4670 0160 3800     		movs	r0, r7
 4671 0162 0AAA     		add	r2, sp, #40
 4672 0164 FFF7FEFF 		bl	mbedtls_mpi_inv_mod
 4673              	.LVL651:
 4674 0168 041E     		subs	r4, r0, #0
 4675              	.LVL652:
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 4676              		.loc 1 158 5 view .LVU1338
 4677 016a D7D1     		bne	.L271
 158:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DP, &ctx->D, &P1 ) );
 4678              		.loc 1 158 5 is_stmt 1 discriminator 2 view .LVU1339
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 4679              		.loc 1 159 5 discriminator 2 view .LVU1340
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 4680              		.loc 1 159 5 discriminator 2 view .LVU1341
 4681 016c 0398     		ldr	r0, [sp, #12]
 4682              	.LVL653:
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 4683              		.loc 1 159 5 is_stmt 0 discriminator 2 view .LVU1342
 4684 016e 3900     		movs	r1, r7
 4685 0170 04AA     		add	r2, sp, #16
 4686 0172 4430     		adds	r0, r0, #68
 4687 0174 FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 4688              	.LVL654:
 4689 0178 041E     		subs	r4, r0, #0
 4690              	.LVL655:
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 4691              		.loc 1 159 5 discriminator 2 view .LVU1343
 4692 017a CFD1     		bne	.L271
 159:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_mod_mpi( &ctx->DQ, &ctx->D, &Q1 ) );
 4693              		.loc 1 159 5 is_stmt 1 discriminator 2 view .LVU1344
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 4694              		.loc 1 160 5 discriminator 2 view .LVU1345
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 4695              		.loc 1 160 5 discriminator 2 view .LVU1346
 4696 017c 3900     		movs	r1, r7
 4697 017e 039F     		ldr	r7, [sp, #12]
 4698 0180 07AA     		add	r2, sp, #28
 4699 0182 3800     		movs	r0, r7
 4700              	.LVL656:
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 4701              		.loc 1 160 5 is_stmt 0 discriminator 2 view .LVU1347
 4702 0184 5030     		adds	r0, r0, #80
 4703 0186 FFF7FEFF 		bl	mbedtls_mpi_mod_mpi
 4704              	.LVL657:
 4705 018a 041E     		subs	r4, r0, #0
 4706              	.LVL658:
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 4707              		.loc 1 160 5 discriminator 2 view .LVU1348
 4708 018c C6D1     		bne	.L271
 160:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_inv_mod( &ctx->QP, &ctx->Q, &ctx->P ) );
 4709              		.loc 1 160 5 is_stmt 1 discriminator 2 view .LVU1349
 161:.././crypto/mbedtls//library/rsa.c **** 
 4710              		.loc 1 161 5 discriminator 2 view .LVU1350
 161:.././crypto/mbedtls//library/rsa.c **** 
 4711              		.loc 1 161 5 discriminator 2 view .LVU1351
 4712 018e 3800     		movs	r0, r7
 4713              	.LVL659:
 161:.././crypto/mbedtls//library/rsa.c **** 
 4714              		.loc 1 161 5 is_stmt 0 discriminator 2 view .LVU1352
 4715 0190 2A00     		movs	r2, r5
 4716 0192 3100     		movs	r1, r6
 4717 0194 5C30     		adds	r0, r0, #92
 4718 0196 FFF7FEFF 		bl	mbedtls_mpi_inv_mod
 4719              	.LVL660:
 4720 019a 041E     		subs	r4, r0, #0
 4721              	.LVL661:
 161:.././crypto/mbedtls//library/rsa.c **** 
 4722              		.loc 1 161 5 discriminator 2 view .LVU1353
 4723 019c BED1     		bne	.L271
 161:.././crypto/mbedtls//library/rsa.c **** 
 4724              		.loc 1 161 5 is_stmt 1 discriminator 2 view .LVU1354
 163:.././crypto/mbedtls//library/rsa.c **** 
 4725              		.loc 1 163 5 discriminator 2 view .LVU1355
 163:.././crypto/mbedtls//library/rsa.c **** 
 4726              		.loc 1 163 38 is_stmt 0 discriminator 2 view .LVU1356
 4727 019e 3800     		movs	r0, r7
 4728              	.LVL662:
 163:.././crypto/mbedtls//library/rsa.c **** 
 4729              		.loc 1 163 38 discriminator 2 view .LVU1357
 4730 01a0 0830     		adds	r0, r0, #8
 163:.././crypto/mbedtls//library/rsa.c **** 
 4731              		.loc 1 163 18 discriminator 2 view .LVU1358
 4732 01a2 FFF7FEFF 		bl	mbedtls_mpi_bitlen
 4733              	.LVL663:
 163:.././crypto/mbedtls//library/rsa.c **** 
 4734              		.loc 1 163 48 discriminator 2 view .LVU1359
 4735 01a6 C31D     		adds	r3, r0, #7
 163:.././crypto/mbedtls//library/rsa.c **** 
 4736              		.loc 1 163 54 discriminator 2 view .LVU1360
 4737 01a8 DB08     		lsrs	r3, r3, #3
 163:.././crypto/mbedtls//library/rsa.c **** 
 4738              		.loc 1 163 14 discriminator 2 view .LVU1361
 4739 01aa 7B60     		str	r3, [r7, #4]
 4740              	.LVL664:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4741              		.loc 1 167 5 is_stmt 1 discriminator 2 view .LVU1362
 4742 01ac 04A8     		add	r0, sp, #16
 4743 01ae FFF7FEFF 		bl	mbedtls_mpi_free
 4744              	.LVL665:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4745              		.loc 1 167 30 discriminator 2 view .LVU1363
 4746 01b2 07A8     		add	r0, sp, #28
 4747 01b4 FFF7FEFF 		bl	mbedtls_mpi_free
 4748              	.LVL666:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4749              		.loc 1 167 55 discriminator 2 view .LVU1364
 4750 01b8 0AA8     		add	r0, sp, #40
 4751 01ba FFF7FEFF 		bl	mbedtls_mpi_free
 4752              	.LVL667:
 167:.././crypto/mbedtls//library/rsa.c **** 
 4753              		.loc 1 167 79 discriminator 2 view .LVU1365
 4754 01be 0DA8     		add	r0, sp, #52
 4755 01c0 FFF7FEFF 		bl	mbedtls_mpi_free
 4756              	.LVL668:
 169:.././crypto/mbedtls//library/rsa.c ****     {
 4757              		.loc 1 169 5 discriminator 2 view .LVU1366
 4758 01c4 BCE7     		b	.L269
 4759              	.LVL669:
 4760              	.L280:
 113:.././crypto/mbedtls//library/rsa.c **** 
 4761              		.loc 1 113 15 is_stmt 0 view .LVU1367
 4762 01c6 024C     		ldr	r4, .L291+4
 4763 01c8 BAE7     		b	.L269
 4764              	.L292:
 4765 01ca C046     		.align	2
 4766              	.L291:
 4767 01cc 80BEFFFF 		.word	-16768
 4768 01d0 80BFFFFF 		.word	-16512
 4769              		.cfi_endproc
 4770              	.LFE15:
 4772              		.section	.text.mbedtls_rsa_copy,"ax",%progbits
 4773              		.align	1
 4774              		.p2align 2,,3
 4775              		.global	mbedtls_rsa_copy
 4776              		.syntax unified
 4777              		.code	16
 4778              		.thumb_func
 4779              		.fpu softvfp
 4781              	mbedtls_rsa_copy:
 4782              	.LVL670:
 4783              	.LFB30:
1621:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4784              		.loc 1 1621 1 is_stmt 1 view -0
 4785              		.cfi_startproc
 4786              		@ args = 0, pretend = 0, frame = 0
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
1622:.././crypto/mbedtls//library/rsa.c **** 
 4788              		.loc 1 1622 5 view .LVU1369
1624:.././crypto/mbedtls//library/rsa.c ****     dst->len = src->len;
 4789              		.loc 1 1624 5 view .LVU1370
1624:.././crypto/mbedtls//library/rsa.c ****     dst->len = src->len;
 4790              		.loc 1 1624 14 is_stmt 0 view .LVU1371
 4791 0000 0B68     		ldr	r3, [r1]
1621:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4792              		.loc 1 1621 1 view .LVU1372
 4793 0002 70B5     		push	{r4, r5, r6, lr}
 4794              	.LCFI35:
 4795              		.cfi_def_cfa_offset 16
 4796              		.cfi_offset 4, -16
 4797              		.cfi_offset 5, -12
 4798              		.cfi_offset 6, -8
 4799              		.cfi_offset 14, -4
1624:.././crypto/mbedtls//library/rsa.c ****     dst->len = src->len;
 4800              		.loc 1 1624 14 view .LVU1373
 4801 0004 0360     		str	r3, [r0]
1625:.././crypto/mbedtls//library/rsa.c **** 
 4802              		.loc 1 1625 5 is_stmt 1 view .LVU1374
1625:.././crypto/mbedtls//library/rsa.c **** 
 4803              		.loc 1 1625 14 is_stmt 0 view .LVU1375
 4804 0006 4B68     		ldr	r3, [r1, #4]
1621:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4805              		.loc 1 1621 1 view .LVU1376
 4806 0008 0500     		movs	r5, r0
1625:.././crypto/mbedtls//library/rsa.c **** 
 4807              		.loc 1 1625 14 view .LVU1377
 4808 000a 4360     		str	r3, [r0, #4]
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4809              		.loc 1 1627 5 is_stmt 1 view .LVU1378
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4810              		.loc 1 1627 5 view .LVU1379
1621:.././crypto/mbedtls//library/rsa.c ****     int ret;
 4811              		.loc 1 1621 1 is_stmt 0 view .LVU1380
 4812 000c 0E00     		movs	r6, r1
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4813              		.loc 1 1627 5 view .LVU1381
 4814 000e 0830     		adds	r0, r0, #8
 4815              	.LVL671:
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4816              		.loc 1 1627 5 view .LVU1382
 4817 0010 0831     		adds	r1, r1, #8
 4818              	.LVL672:
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4819              		.loc 1 1627 5 view .LVU1383
 4820 0012 FFF7FEFF 		bl	mbedtls_mpi_copy
 4821              	.LVL673:
 4822 0016 041E     		subs	r4, r0, #0
 4823              	.LVL674:
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4824              		.loc 1 1627 5 view .LVU1384
 4825 0018 04D0     		beq	.L296
 4826              	.L294:
1648:.././crypto/mbedtls//library/rsa.c ****         mbedtls_rsa_free( dst );
 4827              		.loc 1 1648 5 is_stmt 1 view .LVU1385
1649:.././crypto/mbedtls//library/rsa.c **** 
 4828              		.loc 1 1649 9 view .LVU1386
 4829 001a 2800     		movs	r0, r5
 4830              	.LVL675:
1649:.././crypto/mbedtls//library/rsa.c **** 
 4831              		.loc 1 1649 9 is_stmt 0 view .LVU1387
 4832 001c FFF7FEFF 		bl	mbedtls_rsa_free
 4833              	.LVL676:
 4834              	.L293:
1652:.././crypto/mbedtls//library/rsa.c **** 
 4835              		.loc 1 1652 1 view .LVU1388
 4836 0020 2000     		movs	r0, r4
 4837              		@ sp needed
 4838              	.LVL677:
 4839              	.LVL678:
1652:.././crypto/mbedtls//library/rsa.c **** 
 4840              		.loc 1 1652 1 view .LVU1389
 4841 0022 70BD     		pop	{r4, r5, r6, pc}
 4842              	.LVL679:
 4843              	.L296:
1627:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->E, &src->E ) );
 4844              		.loc 1 1627 5 is_stmt 1 discriminator 2 view .LVU1390
1628:.././crypto/mbedtls//library/rsa.c **** 
 4845              		.loc 1 1628 5 discriminator 2 view .LVU1391
1628:.././crypto/mbedtls//library/rsa.c **** 
 4846              		.loc 1 1628 5 discriminator 2 view .LVU1392
 4847 0024 3100     		movs	r1, r6
 4848 0026 2800     		movs	r0, r5
 4849              	.LVL680:
1628:.././crypto/mbedtls//library/rsa.c **** 
 4850              		.loc 1 1628 5 is_stmt 0 discriminator 2 view .LVU1393
 4851 0028 1431     		adds	r1, r1, #20
 4852 002a 1430     		adds	r0, r0, #20
 4853 002c FFF7FEFF 		bl	mbedtls_mpi_copy
 4854              	.LVL681:
 4855 0030 041E     		subs	r4, r0, #0
 4856              	.LVL682:
1628:.././crypto/mbedtls//library/rsa.c **** 
 4857              		.loc 1 1628 5 discriminator 2 view .LVU1394
 4858 0032 F2D1     		bne	.L294
1628:.././crypto/mbedtls//library/rsa.c **** 
 4859              		.loc 1 1628 5 is_stmt 1 discriminator 2 view .LVU1395
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
 4860              		.loc 1 1630 5 discriminator 2 view .LVU1396
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
 4861              		.loc 1 1630 5 discriminator 2 view .LVU1397
 4862 0034 3100     		movs	r1, r6
 4863 0036 2800     		movs	r0, r5
 4864              	.LVL683:
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
 4865              		.loc 1 1630 5 is_stmt 0 discriminator 2 view .LVU1398
 4866 0038 2031     		adds	r1, r1, #32
 4867 003a 2030     		adds	r0, r0, #32
 4868 003c FFF7FEFF 		bl	mbedtls_mpi_copy
 4869              	.LVL684:
 4870 0040 041E     		subs	r4, r0, #0
 4871              	.LVL685:
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
 4872              		.loc 1 1630 5 discriminator 2 view .LVU1399
 4873 0042 EAD1     		bne	.L294
1630:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->P, &src->P ) );
 4874              		.loc 1 1630 5 is_stmt 1 discriminator 2 view .LVU1400
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
 4875              		.loc 1 1631 5 discriminator 2 view .LVU1401
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
 4876              		.loc 1 1631 5 discriminator 2 view .LVU1402
 4877 0044 3100     		movs	r1, r6
 4878 0046 2800     		movs	r0, r5
 4879              	.LVL686:
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
 4880              		.loc 1 1631 5 is_stmt 0 discriminator 2 view .LVU1403
 4881 0048 2C31     		adds	r1, r1, #44
 4882 004a 2C30     		adds	r0, r0, #44
 4883 004c FFF7FEFF 		bl	mbedtls_mpi_copy
 4884              	.LVL687:
 4885 0050 041E     		subs	r4, r0, #0
 4886              	.LVL688:
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
 4887              		.loc 1 1631 5 discriminator 2 view .LVU1404
 4888 0052 E2D1     		bne	.L294
1631:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Q, &src->Q ) );
 4889              		.loc 1 1631 5 is_stmt 1 discriminator 2 view .LVU1405
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
 4890              		.loc 1 1632 5 discriminator 2 view .LVU1406
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
 4891              		.loc 1 1632 5 discriminator 2 view .LVU1407
 4892 0054 3100     		movs	r1, r6
 4893 0056 2800     		movs	r0, r5
 4894              	.LVL689:
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
 4895              		.loc 1 1632 5 is_stmt 0 discriminator 2 view .LVU1408
 4896 0058 3831     		adds	r1, r1, #56
 4897 005a 3830     		adds	r0, r0, #56
 4898 005c FFF7FEFF 		bl	mbedtls_mpi_copy
 4899              	.LVL690:
 4900 0060 041E     		subs	r4, r0, #0
 4901              	.LVL691:
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
 4902              		.loc 1 1632 5 discriminator 2 view .LVU1409
 4903 0062 DAD1     		bne	.L294
1632:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DP, &src->DP ) );
 4904              		.loc 1 1632 5 is_stmt 1 discriminator 2 view .LVU1410
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
 4905              		.loc 1 1633 5 discriminator 2 view .LVU1411
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
 4906              		.loc 1 1633 5 discriminator 2 view .LVU1412
 4907 0064 3100     		movs	r1, r6
 4908 0066 2800     		movs	r0, r5
 4909              	.LVL692:
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
 4910              		.loc 1 1633 5 is_stmt 0 discriminator 2 view .LVU1413
 4911 0068 4431     		adds	r1, r1, #68
 4912 006a 4430     		adds	r0, r0, #68
 4913 006c FFF7FEFF 		bl	mbedtls_mpi_copy
 4914              	.LVL693:
 4915 0070 041E     		subs	r4, r0, #0
 4916              	.LVL694:
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
 4917              		.loc 1 1633 5 discriminator 2 view .LVU1414
 4918 0072 D2D1     		bne	.L294
1633:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->DQ, &src->DQ ) );
 4919              		.loc 1 1633 5 is_stmt 1 discriminator 2 view .LVU1415
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
 4920              		.loc 1 1634 5 discriminator 2 view .LVU1416
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
 4921              		.loc 1 1634 5 discriminator 2 view .LVU1417
 4922 0074 3100     		movs	r1, r6
 4923 0076 2800     		movs	r0, r5
 4924              	.LVL695:
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
 4925              		.loc 1 1634 5 is_stmt 0 discriminator 2 view .LVU1418
 4926 0078 5031     		adds	r1, r1, #80
 4927 007a 5030     		adds	r0, r0, #80
 4928 007c FFF7FEFF 		bl	mbedtls_mpi_copy
 4929              	.LVL696:
 4930 0080 041E     		subs	r4, r0, #0
 4931              	.LVL697:
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
 4932              		.loc 1 1634 5 discriminator 2 view .LVU1419
 4933 0082 CAD1     		bne	.L294
1634:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->QP, &src->QP ) );
 4934              		.loc 1 1634 5 is_stmt 1 discriminator 2 view .LVU1420
1635:.././crypto/mbedtls//library/rsa.c **** 
 4935              		.loc 1 1635 5 discriminator 2 view .LVU1421
1635:.././crypto/mbedtls//library/rsa.c **** 
 4936              		.loc 1 1635 5 discriminator 2 view .LVU1422
 4937 0084 3100     		movs	r1, r6
 4938 0086 2800     		movs	r0, r5
 4939              	.LVL698:
1635:.././crypto/mbedtls//library/rsa.c **** 
 4940              		.loc 1 1635 5 is_stmt 0 discriminator 2 view .LVU1423
 4941 0088 5C31     		adds	r1, r1, #92
 4942 008a 5C30     		adds	r0, r0, #92
 4943 008c FFF7FEFF 		bl	mbedtls_mpi_copy
 4944              	.LVL699:
 4945 0090 041E     		subs	r4, r0, #0
 4946              	.LVL700:
1635:.././crypto/mbedtls//library/rsa.c **** 
 4947              		.loc 1 1635 5 discriminator 2 view .LVU1424
 4948 0092 C2D1     		bne	.L294
1635:.././crypto/mbedtls//library/rsa.c **** 
 4949              		.loc 1 1635 5 is_stmt 1 discriminator 2 view .LVU1425
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
 4950              		.loc 1 1637 5 discriminator 2 view .LVU1426
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
 4951              		.loc 1 1637 5 discriminator 2 view .LVU1427
 4952 0094 3100     		movs	r1, r6
 4953 0096 2800     		movs	r0, r5
 4954              	.LVL701:
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
 4955              		.loc 1 1637 5 is_stmt 0 discriminator 2 view .LVU1428
 4956 0098 6831     		adds	r1, r1, #104
 4957 009a 6830     		adds	r0, r0, #104
 4958 009c FFF7FEFF 		bl	mbedtls_mpi_copy
 4959              	.LVL702:
 4960 00a0 041E     		subs	r4, r0, #0
 4961              	.LVL703:
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
 4962              		.loc 1 1637 5 discriminator 2 view .LVU1429
 4963 00a2 BAD1     		bne	.L294
1637:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RP, &src->RP ) );
 4964              		.loc 1 1637 5 is_stmt 1 discriminator 2 view .LVU1430
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
 4965              		.loc 1 1638 5 discriminator 2 view .LVU1431
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
 4966              		.loc 1 1638 5 discriminator 2 view .LVU1432
 4967 00a4 3100     		movs	r1, r6
 4968 00a6 2800     		movs	r0, r5
 4969              	.LVL704:
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
 4970              		.loc 1 1638 5 is_stmt 0 discriminator 2 view .LVU1433
 4971 00a8 7431     		adds	r1, r1, #116
 4972 00aa 7430     		adds	r0, r0, #116
 4973 00ac FFF7FEFF 		bl	mbedtls_mpi_copy
 4974              	.LVL705:
 4975 00b0 041E     		subs	r4, r0, #0
 4976              	.LVL706:
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
 4977              		.loc 1 1638 5 discriminator 2 view .LVU1434
 4978 00b2 B2D1     		bne	.L294
1638:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->RQ, &src->RQ ) );
 4979              		.loc 1 1638 5 is_stmt 1 discriminator 2 view .LVU1435
1639:.././crypto/mbedtls//library/rsa.c **** 
 4980              		.loc 1 1639 5 discriminator 2 view .LVU1436
1639:.././crypto/mbedtls//library/rsa.c **** 
 4981              		.loc 1 1639 5 discriminator 2 view .LVU1437
 4982 00b4 3100     		movs	r1, r6
 4983 00b6 2800     		movs	r0, r5
 4984              	.LVL707:
1639:.././crypto/mbedtls//library/rsa.c **** 
 4985              		.loc 1 1639 5 is_stmt 0 discriminator 2 view .LVU1438
 4986 00b8 8031     		adds	r1, r1, #128
 4987 00ba 8030     		adds	r0, r0, #128
 4988 00bc FFF7FEFF 		bl	mbedtls_mpi_copy
 4989              	.LVL708:
 4990 00c0 041E     		subs	r4, r0, #0
 4991              	.LVL709:
1639:.././crypto/mbedtls//library/rsa.c **** 
 4992              		.loc 1 1639 5 discriminator 2 view .LVU1439
 4993 00c2 AAD1     		bne	.L294
1639:.././crypto/mbedtls//library/rsa.c **** 
 4994              		.loc 1 1639 5 is_stmt 1 discriminator 2 view .LVU1440
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
 4995              		.loc 1 1641 5 discriminator 2 view .LVU1441
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
 4996              		.loc 1 1641 5 discriminator 2 view .LVU1442
 4997 00c4 3100     		movs	r1, r6
 4998 00c6 2800     		movs	r0, r5
 4999              	.LVL710:
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
 5000              		.loc 1 1641 5 is_stmt 0 discriminator 2 view .LVU1443
 5001 00c8 8C31     		adds	r1, r1, #140
 5002 00ca 8C30     		adds	r0, r0, #140
 5003 00cc FFF7FEFF 		bl	mbedtls_mpi_copy
 5004              	.LVL711:
 5005 00d0 041E     		subs	r4, r0, #0
 5006              	.LVL712:
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
 5007              		.loc 1 1641 5 discriminator 2 view .LVU1444
 5008 00d2 A2D1     		bne	.L294
1641:.././crypto/mbedtls//library/rsa.c ****     MBEDTLS_MPI_CHK( mbedtls_mpi_copy( &dst->Vf, &src->Vf ) );
 5009              		.loc 1 1641 5 is_stmt 1 discriminator 2 view .LVU1445
1642:.././crypto/mbedtls//library/rsa.c **** 
 5010              		.loc 1 1642 5 discriminator 2 view .LVU1446
1642:.././crypto/mbedtls//library/rsa.c **** 
 5011              		.loc 1 1642 5 discriminator 2 view .LVU1447
 5012 00d4 3100     		movs	r1, r6
 5013 00d6 2800     		movs	r0, r5
 5014              	.LVL713:
1642:.././crypto/mbedtls//library/rsa.c **** 
 5015              		.loc 1 1642 5 is_stmt 0 discriminator 2 view .LVU1448
 5016 00d8 9831     		adds	r1, r1, #152
 5017 00da 9830     		adds	r0, r0, #152
 5018 00dc FFF7FEFF 		bl	mbedtls_mpi_copy
 5019              	.LVL714:
 5020 00e0 041E     		subs	r4, r0, #0
 5021              	.LVL715:
1642:.././crypto/mbedtls//library/rsa.c **** 
 5022              		.loc 1 1642 5 discriminator 2 view .LVU1449
 5023 00e2 00D0     		beq	.LCB4816
 5024 00e4 99E7     		b	.L294	@long jump
 5025              	.LCB4816:
1642:.././crypto/mbedtls//library/rsa.c **** 
 5026              		.loc 1 1642 5 is_stmt 1 discriminator 2 view .LVU1450
1644:.././crypto/mbedtls//library/rsa.c ****     dst->hash_id = src->hash_id;
 5027              		.loc 1 1644 5 discriminator 2 view .LVU1451
1644:.././crypto/mbedtls//library/rsa.c ****     dst->hash_id = src->hash_id;
 5028              		.loc 1 1644 23 is_stmt 0 discriminator 2 view .LVU1452
 5029 00e6 A423     		movs	r3, #164
1644:.././crypto/mbedtls//library/rsa.c ****     dst->hash_id = src->hash_id;
 5030              		.loc 1 1644 18 discriminator 2 view .LVU1453
 5031 00e8 F258     		ldr	r2, [r6, r3]
 5032 00ea EA50     		str	r2, [r5, r3]
1645:.././crypto/mbedtls//library/rsa.c **** 
 5033              		.loc 1 1645 5 is_stmt 1 discriminator 2 view .LVU1454
 5034              	.LVL716:
1648:.././crypto/mbedtls//library/rsa.c ****         mbedtls_rsa_free( dst );
 5035              		.loc 1 1648 5 discriminator 2 view .LVU1455
1651:.././crypto/mbedtls//library/rsa.c **** }
 5036              		.loc 1 1651 5 discriminator 2 view .LVU1456
1645:.././crypto/mbedtls//library/rsa.c **** 
 5037              		.loc 1 1645 23 is_stmt 0 discriminator 2 view .LVU1457
 5038 00ec 0433     		adds	r3, r3, #4
 5039 00ee F258     		ldr	r2, [r6, r3]
 5040 00f0 EA50     		str	r2, [r5, r3]
1651:.././crypto/mbedtls//library/rsa.c **** }
 5041              		.loc 1 1651 11 discriminator 2 view .LVU1458
 5042 00f2 95E7     		b	.L293
 5043              		.cfi_endproc
 5044              	.LFE30:
 5046              		.text
 5047              	.Letext0:
 5048              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 5049              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 5050              		.file 4 ".././crypto/mbedtls//include/mbedtls/bignum.h"
 5051              		.file 5 ".././crypto/mbedtls//include/mbedtls/md.h"
 5052              		.file 6 ".././crypto/mbedtls//include/mbedtls/rsa.h"
 5053              		.file 7 ".././crypto/mbedtls//include/mbedtls/asn1.h"
 5054              		.file 8 "/usr/include/newlib/sys/_types.h"
 5055              		.file 9 "/usr/include/newlib/sys/reent.h"
 5056              		.file 10 "/usr/include/newlib/sys/lock.h"
 5057              		.file 11 "/usr/include/newlib/stdlib.h"
 5058              		.file 12 "/usr/include/newlib/time.h"
 5059              		.file 13 ".././crypto/mbedtls//include/mbedtls/oid.h"
 5060              		.file 14 "/usr/include/newlib/string.h"
 5061              		.file 15 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rsa.c
     /tmp/cc8RQj2H.s:16     .text.mbedtls_rsa_init:0000000000000000 $t
     /tmp/cc8RQj2H.s:25     .text.mbedtls_rsa_init:0000000000000000 mbedtls_rsa_init
     /tmp/cc8RQj2H.s:84     .text.mbedtls_rsa_set_padding:0000000000000000 $t
     /tmp/cc8RQj2H.s:92     .text.mbedtls_rsa_set_padding:0000000000000000 mbedtls_rsa_set_padding
     /tmp/cc8RQj2H.s:117    .text.mbedtls_rsa_check_pubkey:0000000000000000 $t
     /tmp/cc8RQj2H.s:125    .text.mbedtls_rsa_check_pubkey:0000000000000000 mbedtls_rsa_check_pubkey
     /tmp/cc8RQj2H.s:220    .text.mbedtls_rsa_check_pubkey:000000000000005c $d
     /tmp/cc8RQj2H.s:225    .text.mbedtls_rsa_check_privkey:0000000000000000 $t
     /tmp/cc8RQj2H.s:233    .text.mbedtls_rsa_check_privkey:0000000000000000 mbedtls_rsa_check_privkey
     /tmp/cc8RQj2H.s:818    .text.mbedtls_rsa_check_privkey:00000000000002ac $d
     /tmp/cc8RQj2H.s:825    .text.mbedtls_rsa_check_pub_priv:0000000000000000 $t
     /tmp/cc8RQj2H.s:833    .text.mbedtls_rsa_check_pub_priv:0000000000000000 mbedtls_rsa_check_pub_priv
     /tmp/cc8RQj2H.s:901    .text.mbedtls_rsa_check_pub_priv:0000000000000040 $d
     /tmp/cc8RQj2H.s:906    .text.mbedtls_rsa_public:0000000000000000 $t
     /tmp/cc8RQj2H.s:914    .text.mbedtls_rsa_public:0000000000000000 mbedtls_rsa_public
     /tmp/cc8RQj2H.s:1060   .text.mbedtls_rsa_public:000000000000007c $d
     /tmp/cc8RQj2H.s:1066   .text.mbedtls_rsa_private:0000000000000000 $t
     /tmp/cc8RQj2H.s:1074   .text.mbedtls_rsa_private:0000000000000000 mbedtls_rsa_private
     /tmp/cc8RQj2H.s:2084   .text.mbedtls_rsa_private:0000000000000448 $d
     /tmp/cc8RQj2H.s:2090   .text.mbedtls_rsa_private:0000000000000454 $t
     /tmp/cc8RQj2H.s:2195   .text.mbedtls_rsa_rsaes_pkcs1_v15_encrypt:0000000000000000 $t
     /tmp/cc8RQj2H.s:2203   .text.mbedtls_rsa_rsaes_pkcs1_v15_encrypt:0000000000000000 mbedtls_rsa_rsaes_pkcs1_v15_encrypt
     /tmp/cc8RQj2H.s:2505   .text.mbedtls_rsa_rsaes_pkcs1_v15_encrypt:00000000000000fc $d
     /tmp/cc8RQj2H.s:2511   .text.mbedtls_rsa_pkcs1_encrypt:0000000000000000 $t
     /tmp/cc8RQj2H.s:2519   .text.mbedtls_rsa_pkcs1_encrypt:0000000000000000 mbedtls_rsa_pkcs1_encrypt
     /tmp/cc8RQj2H.s:2569   .text.mbedtls_rsa_pkcs1_encrypt:0000000000000024 $d
     /tmp/cc8RQj2H.s:2574   .text.mbedtls_rsa_rsaes_pkcs1_v15_decrypt:0000000000000000 $t
     /tmp/cc8RQj2H.s:2582   .text.mbedtls_rsa_rsaes_pkcs1_v15_decrypt:0000000000000000 mbedtls_rsa_rsaes_pkcs1_v15_decrypt
     /tmp/cc8RQj2H.s:3039   .text.mbedtls_rsa_rsaes_pkcs1_v15_decrypt:0000000000000190 $d
     /tmp/cc8RQj2H.s:3050   .text.mbedtls_rsa_pkcs1_decrypt:0000000000000000 $t
     /tmp/cc8RQj2H.s:3058   .text.mbedtls_rsa_pkcs1_decrypt:0000000000000000 mbedtls_rsa_pkcs1_decrypt
     /tmp/cc8RQj2H.s:3110   .text.mbedtls_rsa_pkcs1_decrypt:0000000000000028 $d
     /tmp/cc8RQj2H.s:3115   .text.mbedtls_rsa_rsassa_pkcs1_v15_sign:0000000000000000 $t
     /tmp/cc8RQj2H.s:3123   .text.mbedtls_rsa_rsassa_pkcs1_v15_sign:0000000000000000 mbedtls_rsa_rsassa_pkcs1_v15_sign
     /tmp/cc8RQj2H.s:3613   .text.mbedtls_rsa_rsassa_pkcs1_v15_sign:00000000000001b8 $d
     /tmp/cc8RQj2H.s:3619   .text.mbedtls_rsa_pkcs1_sign:0000000000000000 $t
     /tmp/cc8RQj2H.s:3627   .text.mbedtls_rsa_pkcs1_sign:0000000000000000 mbedtls_rsa_pkcs1_sign
     /tmp/cc8RQj2H.s:3683   .text.mbedtls_rsa_pkcs1_sign:000000000000002c $d
     /tmp/cc8RQj2H.s:3688   .text.mbedtls_rsa_rsassa_pkcs1_v15_verify:0000000000000000 $t
     /tmp/cc8RQj2H.s:3696   .text.mbedtls_rsa_rsassa_pkcs1_v15_verify:0000000000000000 mbedtls_rsa_rsassa_pkcs1_v15_verify
     /tmp/cc8RQj2H.s:4165   .text.mbedtls_rsa_rsassa_pkcs1_v15_verify:00000000000001e0 $d
     /tmp/cc8RQj2H.s:4173   .text.mbedtls_rsa_pkcs1_verify:0000000000000000 $t
     /tmp/cc8RQj2H.s:4181   .text.mbedtls_rsa_pkcs1_verify:0000000000000000 mbedtls_rsa_pkcs1_verify
     /tmp/cc8RQj2H.s:4237   .text.mbedtls_rsa_pkcs1_verify:000000000000002c $d
     /tmp/cc8RQj2H.s:4242   .text.mbedtls_rsa_free:0000000000000000 $t
     /tmp/cc8RQj2H.s:4250   .text.mbedtls_rsa_free:0000000000000000 mbedtls_rsa_free
     /tmp/cc8RQj2H.s:4341   .text.mbedtls_rsa_gen_key:0000000000000000 $t
     /tmp/cc8RQj2H.s:4349   .text.mbedtls_rsa_gen_key:0000000000000000 mbedtls_rsa_gen_key
     /tmp/cc8RQj2H.s:4767   .text.mbedtls_rsa_gen_key:00000000000001cc $d
     /tmp/cc8RQj2H.s:4773   .text.mbedtls_rsa_copy:0000000000000000 $t
     /tmp/cc8RQj2H.s:4781   .text.mbedtls_rsa_copy:0000000000000000 mbedtls_rsa_copy

UNDEFINED SYMBOLS
memset
mbedtls_mpi_bitlen
mbedtls_mpi_cmp_mpi
mbedtls_mpi_init
mbedtls_mpi_mul_mpi
mbedtls_mpi_free
mbedtls_mpi_sub_int
mbedtls_mpi_gcd
mbedtls_mpi_div_mpi
mbedtls_mpi_mod_mpi
mbedtls_mpi_inv_mod
mbedtls_mpi_cmp_int
mbedtls_mpi_read_binary
mbedtls_mpi_exp_mod
mbedtls_mpi_write_binary
mbedtls_mpi_fill_random
mbedtls_mpi_add_mpi
mbedtls_mpi_sub_mpi
memcpy
calloc
free
mbedtls_md_info_from_type
mbedtls_oid_get_oid_by_md
mbedtls_md_get_size
memcmp
mbedtls_asn1_get_tag
mbedtls_oid_get_md_alg
mbedtls_mpi_lset
mbedtls_mpi_gen_prime
mbedtls_mpi_swap
mbedtls_mpi_copy
