   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0_hal_lowlevel.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_GetTick,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	HAL_GetTick
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	HAL_GetTick:
  26              	.LFB37:
  27              		.file 1 ".././hal/stm32f0/stm32f0_hal_lowlevel.c"
   1:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    
   6:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */
   8:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
   9:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /*
  10:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  12:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  23:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  34:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */ 
  36:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  37:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  38:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal.h"
  39:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal_lowlevel.h"
  40:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_rcc.h"
  41:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_gpio.h"
  42:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_dma.h"
  43:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_uart.h"
  44:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_flash.h"
  45:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  46:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  47:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  49:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  28              		.loc 1 49 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	static uint32_t tick;
  33              		.loc 1 50 2 view .LVU1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  34              		.loc 1 51 2 view .LVU2
  35              		.loc 1 51 13 is_stmt 0 view .LVU3
  36 0000 024B     		ldr	r3, .L3
  52:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  37              		.loc 1 52 1 view .LVU4
  38              		@ sp needed
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  39              		.loc 1 51 13 view .LVU5
  40 0002 1868     		ldr	r0, [r3]
  41 0004 421C     		adds	r2, r0, #1
  42 0006 1A60     		str	r2, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  43              		.loc 1 51 16 is_stmt 1 view .LVU6
  44              		.loc 1 52 1 is_stmt 0 view .LVU7
  45 0008 7047     		bx	lr
  46              	.L4:
  47 000a C046     		.align	2
  48              	.L3:
  49 000c 00000000 		.word	.LANCHOR0
  50              		.cfi_endproc
  51              	.LFE37:
  53              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
  54              		.align	1
  55              		.p2align 2,,3
  56              		.global	HAL_RCC_GetSysClockFreq
  57              		.syntax unified
  58              		.code	16
  59              		.thumb_func
  60              		.fpu softvfp
  62              	HAL_RCC_GetSysClockFreq:
  63              	.LFB38:
  53:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  54:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
  55:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
  56:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 									 
  57:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000;
  58:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  59:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  60:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
  61:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  64              		.loc 1 61 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  69              		.loc 1 62 2 view .LVU9
  70              		.loc 1 62 9 is_stmt 0 view .LVU10
  71 0000 E120     		movs	r0, #225
  63:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  72              		.loc 1 63 1 view .LVU11
  73              		@ sp needed
  74 0002 C003     		lsls	r0, r0, #15
  75 0004 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE38:
  79 0006 C046     		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
  80              		.align	1
  81              		.p2align 2,,3
  82              		.global	HAL_RCC_GetPCLK1Freq
  83              		.syntax unified
  84              		.code	16
  85              		.thumb_func
  86              		.fpu softvfp
  88              	HAL_RCC_GetPCLK1Freq:
  89              	.LFB53:
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0000 E120     		movs	r0, #225
  95              		@ sp needed
  96 0002 C003     		lsls	r0, r0, #15
  97 0004 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE53:
 101 0006 C046     		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 102              		.align	1
 103              		.p2align 2,,3
 104              		.global	HAL_RCC_GetPCLK2Freq
 105              		.syntax unified
 106              		.code	16
 107              		.thumb_func
 108              		.fpu softvfp
 110              	HAL_RCC_GetPCLK2Freq:
 111              	.LFB55:
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 E120     		movs	r0, #225
 117              		@ sp needed
 118 0002 C003     		lsls	r0, r0, #15
 119 0004 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE55:
 123 0006 C046     		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 124              		.align	1
 125              		.p2align 2,,3
 126              		.global	HAL_RCC_OscConfig
 127              		.syntax unified
 128              		.code	16
 129              		.thumb_func
 130              		.fpu softvfp
 132              	HAL_RCC_OscConfig:
 133              	.LVL0:
 134              	.LFB41:
  64:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  65:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
  66:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  67:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  68:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  69:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  70:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  71:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
  72:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
  73:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
  74:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval PCLK2 frequency
  75:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  76:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
  77:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  78:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  79:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
  80:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return 7372800;
  81:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  82:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  83:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  84:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  85:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  86:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
  87:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  88:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  89:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  90:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
  91:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  92:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
  93:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
  94:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
  95:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
  96:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  97:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 135              		.loc 1 98 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 0, uses_anonymous_args = 0
  99:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 139              		.loc 1 99 4 view .LVU13
 100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 102:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 140              		.loc 1 102 3 view .LVU14
 103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 141              		.loc 1 103 3 view .LVU15
 104:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 142              		.loc 1 106 3 view .LVU16
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 143              		.loc 1 98 1 is_stmt 0 view .LVU17
 144 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 145              	.LCFI0:
 146              		.cfi_def_cfa_offset 20
 147              		.cfi_offset 4, -20
 148              		.cfi_offset 5, -16
 149              		.cfi_offset 6, -12
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 D646     		mov	lr, r10
 153 0004 4F46     		mov	r7, r9
 154 0006 4646     		mov	r6, r8
 155 0008 C0B5     		push	{r6, r7, lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 32
 158              		.cfi_offset 8, -32
 159              		.cfi_offset 9, -28
 160              		.cfi_offset 10, -24
 161              		.loc 1 106 25 view .LVU18
 162 000a 0168     		ldr	r1, [r0]
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 163              		.loc 1 98 1 view .LVU19
 164 000c 8246     		mov	r10, r0
 165 000e 82B0     		sub	sp, sp, #8
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 40
 168              		.loc 1 106 5 view .LVU20
 169 0010 CB07     		lsls	r3, r1, #31
 170 0012 36D5     		bpl	.L10
 107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 171              		.loc 1 109 5 is_stmt 1 view .LVU21
 110:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 172              		.loc 1 112 5 view .LVU22
 173              		.loc 1 112 9 is_stmt 0 view .LVU23
 174 0014 0C22     		movs	r2, #12
 175 0016 C54C     		ldr	r4, .L176
 176 0018 6368     		ldr	r3, [r4, #4]
 177 001a 1340     		ands	r3, r2
 178              		.loc 1 112 7 view .LVU24
 179 001c 042B     		cmp	r3, #4
 180 001e 00D1     		bne	.LCB109
 181 0020 2EE1     		b	.L11	@long jump
 182              	.LCB109:
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 183              		.loc 1 113 13 view .LVU25
 184 0022 6368     		ldr	r3, [r4, #4]
 185 0024 1A40     		ands	r2, r3
 186              		.loc 1 113 8 view .LVU26
 187 0026 082A     		cmp	r2, #8
 188 0028 00D1     		bne	.LCB113
 189 002a 25E1     		b	.L163	@long jump
 190              	.LCB113:
 191              	.L12:
 114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 118:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 192              		.loc 1 123 7 is_stmt 1 view .LVU27
 193              		.loc 1 123 7 view .LVU28
 194 002c 5346     		mov	r3, r10
 195 002e 5B68     		ldr	r3, [r3, #4]
 196 0030 012B     		cmp	r3, #1
 197 0032 00D1     		bne	.LCB120
 198 0034 70E1     		b	.L164	@long jump
 199              	.LCB120:
 200              		.loc 1 123 7 discriminator 2 view .LVU29
 201 0036 002B     		cmp	r3, #0
 202 0038 00D1     		bne	.LCB123
 203 003a 87E1     		b	.L165	@long jump
 204              	.LCB123:
 205              		.loc 1 123 7 discriminator 5 view .LVU30
 206 003c 052B     		cmp	r3, #5
 207 003e 00D1     		bne	.LCB126
 208 0040 62E2     		b	.L166	@long jump
 209              	.LCB126:
 210              		.loc 1 123 7 discriminator 8 view .LVU31
 211 0042 BA4B     		ldr	r3, .L176
 212 0044 BA4C     		ldr	r4, .L176+4
 213 0046 1A68     		ldr	r2, [r3]
 214 0048 2240     		ands	r2, r4
 215 004a 1A60     		str	r2, [r3]
 216              		.loc 1 123 7 discriminator 8 view .LVU32
 217 004c 1A68     		ldr	r2, [r3]
 218 004e B94C     		ldr	r4, .L176+8
 219 0050 2240     		ands	r2, r4
 220 0052 1A60     		str	r2, [r3]
 221              	.L16:
 124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 125:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Check the HSE State */
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 222              		.loc 1 130 9 view .LVU33
 223              	.LBB94:
 224              	.LBI94:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 225              		.loc 1 48 10 view .LVU34
 226              	.LBB95:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 227              		.loc 1 50 2 view .LVU35
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 228              		.loc 1 51 2 view .LVU36
 229              	.LBE95:
 230              	.LBE94:
 131:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is ready */
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 231              		.loc 1 133 15 is_stmt 0 view .LVU37
 232 0054 8027     		movs	r7, #128
 233              	.LBB100:
 234              	.LBB96:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 235              		.loc 1 51 13 view .LVU38
 236 0056 B84A     		ldr	r2, .L176+12
 237              	.LBE96:
 238              	.LBE100:
 239              		.loc 1 133 15 view .LVU39
 240 0058 B448     		ldr	r0, .L176
 241              	.LVL1:
 242              	.LBB101:
 243              	.LBB97:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 244              		.loc 1 51 13 view .LVU40
 245 005a 1568     		ldr	r5, [r2]
 246              	.LBE97:
 247              	.LBE101:
 248              		.loc 1 133 14 view .LVU41
 249 005c 0026     		movs	r6, #0
 250              	.LBB102:
 251              	.LBB98:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 252              		.loc 1 51 13 view .LVU42
 253 005e 6B1C     		adds	r3, r5, #1
 254              	.LBE98:
 255              	.LBE102:
 256              		.loc 1 133 15 view .LVU43
 257 0060 8446     		mov	ip, r0
 258              	.LBB103:
 259              	.LBB99:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 260              		.loc 1 51 13 view .LVU44
 261 0062 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 262              		.loc 1 51 16 is_stmt 1 view .LVU45
 263              	.LVL2:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 264              		.loc 1 51 16 is_stmt 0 view .LVU46
 265              	.LBE99:
 266              	.LBE103:
 267              		.loc 1 133 9 is_stmt 1 view .LVU47
 268 0064 6635     		adds	r5, r5, #102
 269              	.LVL3:
 270              		.loc 1 133 15 is_stmt 0 view .LVU48
 271 0066 BF02     		lsls	r7, r7, #10
 272              		.loc 1 133 14 view .LVU49
 273 0068 04E0     		b	.L21
 274              	.L22:
 134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 275              		.loc 1 135 11 is_stmt 1 view .LVU50
 276              	.LBB104:
 277              	.LBI104:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 278              		.loc 1 48 10 view .LVU51
 279              	.LBB105:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 280              		.loc 1 50 2 view .LVU52
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 281              		.loc 1 51 2 view .LVU53
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 282              		.loc 1 51 13 is_stmt 0 view .LVU54
 283 006a 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 284              		.loc 1 51 16 is_stmt 1 view .LVU55
 285 006c 0126     		movs	r6, #1
 286              	.LBE105:
 287              	.LBE104:
 288              		.loc 1 135 13 is_stmt 0 view .LVU56
 289 006e AB42     		cmp	r3, r5
 290 0070 00D1     		bne	.LCB195
 291 0072 58E1     		b	.L160	@long jump
 292              	.LCB195:
 293              	.L21:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 294              		.loc 1 133 14 is_stmt 1 view .LVU57
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 295              		.loc 1 133 15 is_stmt 0 view .LVU58
 296 0074 6046     		mov	r0, ip
 297 0076 0468     		ldr	r4, [r0]
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 298              		.loc 1 133 14 view .LVU59
 299 0078 3C42     		tst	r4, r7
 300 007a F6D0     		beq	.L22
 301 007c 002E     		cmp	r6, #0
 302 007e 00D0     		beq	.L10
 303 0080 1360     		str	r3, [r2]
 304              	.LVL4:
 305              	.L10:
 136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 138:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 140:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 141:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 142:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 306              		.loc 1 158 3 is_stmt 1 view .LVU60
 307              		.loc 1 158 5 is_stmt 0 view .LVU61
 308 0082 8B07     		lsls	r3, r1, #30
 309 0084 33D5     		bpl	.L25
 159:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 160:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 310              		.loc 1 161 5 is_stmt 1 view .LVU62
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 311              		.loc 1 162 5 view .LVU63
 163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 312              		.loc 1 165 5 view .LVU64
 313              		.loc 1 165 9 is_stmt 0 view .LVU65
 314 0086 0C23     		movs	r3, #12
 315 0088 A84A     		ldr	r2, .L176
 316 008a 5468     		ldr	r4, [r2, #4]
 317              		.loc 1 165 7 view .LVU66
 318 008c 2342     		tst	r3, r4
 319 008e 00D1     		bne	.LCB223
 320 0090 06E1     		b	.L26	@long jump
 321              	.LCB223:
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 322              		.loc 1 166 13 view .LVU67
 323 0092 5468     		ldr	r4, [r2, #4]
 324 0094 2340     		ands	r3, r4
 325              		.loc 1 166 8 view .LVU68
 326 0096 082B     		cmp	r3, #8
 327 0098 00D1     		bne	.LCB227
 328 009a FDE0     		b	.L167	@long jump
 329              	.LCB227:
 330              	.L27:
 167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 170:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 175:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI State */
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 331              		.loc 1 183 7 is_stmt 1 view .LVU69
 332              		.loc 1 183 9 is_stmt 0 view .LVU70
 333 009c 5346     		mov	r3, r10
 334 009e DB68     		ldr	r3, [r3, #12]
 184:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 335              		.loc 1 186 9 view .LVU71
 336 00a0 A24D     		ldr	r5, .L176
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 337              		.loc 1 183 9 view .LVU72
 338 00a2 002B     		cmp	r3, #0
 339 00a4 00D1     		bne	.LCB235
 340 00a6 8DE1     		b	.L30	@long jump
 341              	.LCB235:
 342              		.loc 1 186 9 is_stmt 1 view .LVU73
 343 00a8 0122     		movs	r2, #1
 187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is ready */
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 344              		.loc 1 192 14 is_stmt 0 view .LVU74
 345 00aa 0020     		movs	r0, #0
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 346              		.loc 1 186 9 view .LVU75
 347 00ac 2B68     		ldr	r3, [r5]
 348              		.loc 1 192 14 view .LVU76
 349 00ae 8446     		mov	ip, r0
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 350              		.loc 1 186 9 view .LVU77
 351 00b0 1343     		orrs	r3, r2
 352              	.LBB106:
 353              	.LBB107:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 354              		.loc 1 51 13 view .LVU78
 355 00b2 A14A     		ldr	r2, .L176+12
 356              	.LBE107:
 357              	.LBE106:
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 358              		.loc 1 186 9 view .LVU79
 359 00b4 2B60     		str	r3, [r5]
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 360              		.loc 1 189 9 is_stmt 1 view .LVU80
 361              	.LBB110:
 362              	.LBI106:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 363              		.loc 1 48 10 view .LVU81
 364              	.LBB108:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 365              		.loc 1 50 2 view .LVU82
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 366              		.loc 1 51 2 view .LVU83
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 367              		.loc 1 51 13 is_stmt 0 view .LVU84
 368 00b6 1668     		ldr	r6, [r2]
 369              	.LBE108:
 370              	.LBE110:
 371              		.loc 1 192 15 view .LVU85
 372 00b8 0227     		movs	r7, #2
 373              	.LBB111:
 374              	.LBB109:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 375              		.loc 1 51 13 view .LVU86
 376 00ba 731C     		adds	r3, r6, #1
 377 00bc 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 378              		.loc 1 51 16 is_stmt 1 view .LVU87
 379              	.LVL5:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 380              		.loc 1 51 16 is_stmt 0 view .LVU88
 381              	.LBE109:
 382              	.LBE111:
 383              		.loc 1 192 9 is_stmt 1 view .LVU89
 384 00be 0436     		adds	r6, r6, #4
 385              	.LVL6:
 386              		.loc 1 192 14 is_stmt 0 view .LVU90
 387 00c0 05E0     		b	.L31
 388              	.L32:
 193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 389              		.loc 1 194 11 is_stmt 1 view .LVU91
 390              	.LBB112:
 391              	.LBI112:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 392              		.loc 1 48 10 view .LVU92
 393              	.LBB113:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 394              		.loc 1 50 2 view .LVU93
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 395              		.loc 1 51 2 view .LVU94
 396 00c2 0120     		movs	r0, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 397              		.loc 1 51 13 is_stmt 0 view .LVU95
 398 00c4 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 399              		.loc 1 51 16 is_stmt 1 view .LVU96
 400 00c6 8446     		mov	ip, r0
 401              	.LBE113:
 402              	.LBE112:
 403              		.loc 1 194 13 is_stmt 0 view .LVU97
 404 00c8 B342     		cmp	r3, r6
 405 00ca 00D1     		bne	.LCB286
 406 00cc 95E1     		b	.L159	@long jump
 407              	.LCB286:
 408              	.L31:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 409              		.loc 1 192 14 is_stmt 1 view .LVU98
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 410              		.loc 1 192 15 is_stmt 0 view .LVU99
 411 00ce 2C68     		ldr	r4, [r5]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 412              		.loc 1 192 14 view .LVU100
 413 00d0 2742     		tst	r7, r4
 414 00d2 F6D0     		beq	.L32
 415 00d4 6046     		mov	r0, ip
 416 00d6 0028     		cmp	r0, #0
 417 00d8 00D0     		beq	.L33
 418 00da 1360     		str	r3, [r2]
 419              	.LVL7:
 420              	.L33:
 195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                 
 200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 421              		.loc 1 201 9 is_stmt 1 view .LVU101
 422 00dc 5346     		mov	r3, r10
 423 00de F825     		movs	r5, #248
 424 00e0 924C     		ldr	r4, .L176
 425 00e2 1B69     		ldr	r3, [r3, #16]
 426 00e4 2268     		ldr	r2, [r4]
 427 00e6 DB00     		lsls	r3, r3, #3
 428 00e8 AA43     		bics	r2, r5
 429 00ea 1343     		orrs	r3, r2
 430 00ec 2360     		str	r3, [r4]
 431              	.L25:
 202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 210:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 432              		.loc 1 223 3 view .LVU102
 433              		.loc 1 223 5 is_stmt 0 view .LVU103
 434 00ee 0B07     		lsls	r3, r1, #28
 435 00f0 1ED5     		bpl	.L38
 224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 436              		.loc 1 226 5 is_stmt 1 view .LVU104
 227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSI State */
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 437              		.loc 1 229 5 view .LVU105
 438              		.loc 1 229 7 is_stmt 0 view .LVU106
 439 00f2 5346     		mov	r3, r10
 440 00f4 DB69     		ldr	r3, [r3, #28]
 230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 441              		.loc 1 232 7 view .LVU107
 442 00f6 8D4D     		ldr	r5, .L176
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 443              		.loc 1 229 7 view .LVU108
 444 00f8 002B     		cmp	r3, #0
 445 00fa 00D1     		bne	.LCB327
 446 00fc DCE0     		b	.L39	@long jump
 447              	.LCB327:
 448              		.loc 1 232 7 is_stmt 1 view .LVU109
 449 00fe 0122     		movs	r2, #1
 233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 237:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 450              		.loc 1 238 13 is_stmt 0 view .LVU110
 451 0100 0220     		movs	r0, #2
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 452              		.loc 1 232 7 view .LVU111
 453 0102 6B6A     		ldr	r3, [r5, #36]
 454              		.loc 1 238 12 view .LVU112
 455 0104 0027     		movs	r7, #0
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 456              		.loc 1 232 7 view .LVU113
 457 0106 1343     		orrs	r3, r2
 458              	.LBB114:
 459              	.LBB115:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 460              		.loc 1 51 13 view .LVU114
 461 0108 8B4A     		ldr	r2, .L176+12
 462              	.LBE115:
 463              	.LBE114:
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 464              		.loc 1 232 7 view .LVU115
 465 010a 6B62     		str	r3, [r5, #36]
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 466              		.loc 1 235 7 is_stmt 1 view .LVU116
 467              	.LBB118:
 468              	.LBI114:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 469              		.loc 1 48 10 view .LVU117
 470              	.LBB116:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 471              		.loc 1 50 2 view .LVU118
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 472              		.loc 1 51 2 view .LVU119
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 473              		.loc 1 51 13 is_stmt 0 view .LVU120
 474 010c 1668     		ldr	r6, [r2]
 475              	.LBE116:
 476              	.LBE118:
 477              		.loc 1 238 13 view .LVU121
 478 010e 8446     		mov	ip, r0
 479              	.LBB119:
 480              	.LBB117:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 481              		.loc 1 51 13 view .LVU122
 482 0110 731C     		adds	r3, r6, #1
 483 0112 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 484              		.loc 1 51 16 is_stmt 1 view .LVU123
 485              	.LVL8:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 486              		.loc 1 51 16 is_stmt 0 view .LVU124
 487              	.LBE117:
 488              	.LBE119:
 489              		.loc 1 238 7 is_stmt 1 view .LVU125
 490 0114 0436     		adds	r6, r6, #4
 491              	.LVL9:
 492              		.loc 1 238 12 is_stmt 0 view .LVU126
 493 0116 04E0     		b	.L40
 494              	.L41:
 239:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 495              		.loc 1 240 9 is_stmt 1 view .LVU127
 496              	.LBB120:
 497              	.LBI120:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 498              		.loc 1 48 10 view .LVU128
 499              	.LBB121:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 500              		.loc 1 50 2 view .LVU129
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 501              		.loc 1 51 2 view .LVU130
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 502              		.loc 1 51 13 is_stmt 0 view .LVU131
 503 0118 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 504              		.loc 1 51 16 is_stmt 1 view .LVU132
 505 011a 0127     		movs	r7, #1
 506              	.LBE121:
 507              	.LBE120:
 508              		.loc 1 240 11 is_stmt 0 view .LVU133
 509 011c B342     		cmp	r3, r6
 510 011e 00D1     		bne	.LCB377
 511 0120 01E1     		b	.L160	@long jump
 512              	.LCB377:
 513              	.L40:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 514              		.loc 1 238 12 is_stmt 1 view .LVU134
 515 0122 6046     		mov	r0, ip
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 516              		.loc 1 238 13 is_stmt 0 view .LVU135
 517 0124 6C6A     		ldr	r4, [r5, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 518              		.loc 1 238 12 view .LVU136
 519 0126 2042     		tst	r0, r4
 520 0128 F6D0     		beq	.L41
 521              	.LVL10:
 522              	.L155:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 523              		.loc 1 238 12 view .LVU137
 524 012a 002F     		cmp	r7, #0
 525 012c 00D0     		beq	.L38
 526 012e 1360     		str	r3, [r2]
 527              	.L38:
 241:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 242:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 248:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 528              		.loc 1 265 3 is_stmt 1 view .LVU138
 529              		.loc 1 265 5 is_stmt 0 view .LVU139
 530 0130 4B07     		lsls	r3, r1, #29
 531 0132 4FD5     		bpl	.L46
 532              	.LBB122:
 266:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 533              		.loc 1 267 5 is_stmt 1 view .LVU140
 534              	.LVL11:
 268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 535              		.loc 1 270 5 view .LVU141
 271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 536              		.loc 1 274 5 view .LVU142
 537              		.loc 1 274 8 is_stmt 0 view .LVU143
 538 0134 8022     		movs	r2, #128
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 539              		.loc 1 267 22 view .LVU144
 540 0136 0020     		movs	r0, #0
 541              		.loc 1 274 8 view .LVU145
 542 0138 7C4B     		ldr	r3, .L176
 543 013a 5205     		lsls	r2, r2, #21
 544 013c DC69     		ldr	r4, [r3, #28]
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 545              		.loc 1 267 22 view .LVU146
 546 013e 8146     		mov	r9, r0
 547              		.loc 1 274 7 view .LVU147
 548 0140 1442     		tst	r4, r2
 549 0142 08D1     		bne	.L47
 275:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 550              		.loc 1 276 7 is_stmt 1 view .LVU148
 551              	.LBB123:
 552              		.loc 1 276 7 view .LVU149
 553              		.loc 1 276 7 view .LVU150
 554 0144 DC69     		ldr	r4, [r3, #28]
 555 0146 1443     		orrs	r4, r2
 556 0148 DC61     		str	r4, [r3, #28]
 557              		.loc 1 276 7 view .LVU151
 558 014a DB69     		ldr	r3, [r3, #28]
 559 014c 1A40     		ands	r2, r3
 560 014e 0192     		str	r2, [sp, #4]
 561              		.loc 1 276 7 view .LVU152
 562 0150 019B     		ldr	r3, [sp, #4]
 563              	.LBE123:
 564              		.loc 1 276 7 view .LVU153
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 565              		.loc 1 277 7 view .LVU154
 566              	.LVL12:
 567              		.loc 1 277 21 is_stmt 0 view .LVU155
 568 0152 0123     		movs	r3, #1
 569 0154 9946     		mov	r9, r3
 570              	.LVL13:
 571              	.L47:
 278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 572              		.loc 1 280 5 is_stmt 1 view .LVU156
 573              		.loc 1 280 8 is_stmt 0 view .LVU157
 574 0156 8026     		movs	r6, #128
 575 0158 784D     		ldr	r5, .L176+16
 576 015a 7600     		lsls	r6, r6, #1
 577 015c 2B68     		ldr	r3, [r5]
 578              		.loc 1 280 7 view .LVU158
 579 015e 3342     		tst	r3, r6
 580 0160 00D1     		bne	.LCB442
 581 0162 BFE0     		b	.L48	@long jump
 582              	.LCB442:
 583 0164 744A     		ldr	r2, .L176+12
 584 0166 1368     		ldr	r3, [r2]
 585              	.L49:
 281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 287:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 291:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 295:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 296:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 297:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 586              		.loc 1 298 5 is_stmt 1 view .LVU159
 587              		.loc 1 298 5 view .LVU160
 588 0168 5046     		mov	r0, r10
 589 016a 8468     		ldr	r4, [r0, #8]
 590 016c 012C     		cmp	r4, #1
 591 016e 0FD0     		beq	.L168
 592              	.LVL14:
 593              		.loc 1 298 5 discriminator 2 view .LVU161
 594 0170 002C     		cmp	r4, #0
 595 0172 00D1     		bne	.LCB456
 596 0174 0AE1     		b	.L169	@long jump
 597              	.LCB456:
 598              		.loc 1 298 5 discriminator 5 view .LVU162
 599 0176 052C     		cmp	r4, #5
 600 0178 00D1     		bne	.LCB459
 601 017a 68E1     		b	.L170	@long jump
 602              	.LCB459:
 603              		.loc 1 298 5 discriminator 8 view .LVU163
 604 017c 0126     		movs	r6, #1
 605 017e 6B4C     		ldr	r4, .L176
 606 0180 256A     		ldr	r5, [r4, #32]
 607 0182 B543     		bics	r5, r6
 608 0184 2562     		str	r5, [r4, #32]
 609              		.loc 1 298 5 discriminator 8 view .LVU164
 610 0186 256A     		ldr	r5, [r4, #32]
 611 0188 0336     		adds	r6, r6, #3
 612 018a B543     		bics	r5, r6
 613 018c 2562     		str	r5, [r4, #32]
 614 018e 03E0     		b	.L53
 615              	.L168:
 616              		.loc 1 298 5 discriminator 1 view .LVU165
 617 0190 664E     		ldr	r6, .L176
 618 0192 356A     		ldr	r5, [r6, #32]
 619 0194 2C43     		orrs	r4, r5
 620 0196 3462     		str	r4, [r6, #32]
 621              		.loc 1 298 5 discriminator 1 view .LVU166
 299:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 622              		.loc 1 300 5 discriminator 1 view .LVU167
 623              	.L53:
 301:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 624              		.loc 1 303 7 view .LVU168
 625              	.LBB124:
 626              	.LBI124:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 627              		.loc 1 48 10 view .LVU169
 628              	.LBB125:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 629              		.loc 1 50 2 view .LVU170
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 630              		.loc 1 51 2 view .LVU171
 631 0198 6948     		ldr	r0, .L176+20
 632              	.LVL15:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 633              		.loc 1 51 13 is_stmt 0 view .LVU172
 634 019a 5C1C     		adds	r4, r3, #1
 635 019c 8446     		mov	ip, r0
 636              	.LBE125:
 637              	.LBE124:
 304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 305:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 638              		.loc 1 306 13 view .LVU173
 639 019e 6348     		ldr	r0, .L176
 640 01a0 6344     		add	r3, r3, ip
 641              		.loc 1 306 12 view .LVU174
 642 01a2 0027     		movs	r7, #0
 643              		.loc 1 306 13 view .LVU175
 644 01a4 8446     		mov	ip, r0
 645 01a6 0226     		movs	r6, #2
 646              	.LBB127:
 647              	.LBB126:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 648              		.loc 1 51 13 view .LVU176
 649 01a8 1460     		str	r4, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 650              		.loc 1 51 16 is_stmt 1 view .LVU177
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 651              		.loc 1 51 16 is_stmt 0 view .LVU178
 652              	.LBE126:
 653              	.LBE127:
 654              		.loc 1 306 7 is_stmt 1 view .LVU179
 655              		.loc 1 306 12 is_stmt 0 view .LVU180
 656 01aa 04E0     		b	.L58
 657              	.L59:
 307:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 658              		.loc 1 308 9 is_stmt 1 view .LVU181
 659              	.LBB128:
 660              	.LBI128:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 661              		.loc 1 48 10 view .LVU182
 662              	.LBB129:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 663              		.loc 1 50 2 view .LVU183
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 664              		.loc 1 51 2 view .LVU184
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 665              		.loc 1 51 13 is_stmt 0 view .LVU185
 666 01ac 0134     		adds	r4, r4, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 667              		.loc 1 51 16 is_stmt 1 view .LVU186
 668 01ae 0127     		movs	r7, #1
 669              	.LBE129:
 670              	.LBE128:
 671              		.loc 1 308 11 is_stmt 0 view .LVU187
 672 01b0 9C42     		cmp	r4, r3
 673 01b2 00D1     		bne	.LCB525
 674 01b4 03E1     		b	.L161	@long jump
 675              	.LCB525:
 676              	.L58:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 677              		.loc 1 306 12 is_stmt 1 view .LVU188
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 678              		.loc 1 306 13 is_stmt 0 view .LVU189
 679 01b6 6046     		mov	r0, ip
 680 01b8 056A     		ldr	r5, [r0, #32]
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 681              		.loc 1 306 12 view .LVU190
 682 01ba 2E42     		tst	r6, r5
 683 01bc F6D0     		beq	.L59
 684              	.L157:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 685              		.loc 1 306 12 view .LVU191
 686 01be 002F     		cmp	r7, #0
 687 01c0 00D0     		beq	.L61
 688 01c2 1460     		str	r4, [r2]
 689              	.L61:
 309:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 311:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 312:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 313:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 316:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 319:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 321:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 328:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 690              		.loc 1 330 5 is_stmt 1 view .LVU192
 691              		.loc 1 330 7 is_stmt 0 view .LVU193
 692 01c4 4B46     		mov	r3, r9
 693 01c6 012B     		cmp	r3, #1
 694 01c8 04D1     		bne	.L46
 331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 695              		.loc 1 332 7 is_stmt 1 view .LVU194
 696 01ca 584A     		ldr	r2, .L176
 697 01cc 5D4C     		ldr	r4, .L176+24
 698 01ce D369     		ldr	r3, [r2, #28]
 699 01d0 2340     		ands	r3, r4
 700 01d2 D361     		str	r3, [r2, #28]
 701              	.LVL16:
 702              	.L46:
 703              		.loc 1 332 7 is_stmt 0 view .LVU195
 704              	.LBE122:
 333:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 335:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 705              		.loc 1 337 3 is_stmt 1 view .LVU196
 706              		.loc 1 337 5 is_stmt 0 view .LVU197
 707 01d4 CB06     		lsls	r3, r1, #27
 708 01d6 23D5     		bpl	.L66
 338:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 709              		.loc 1 340 5 is_stmt 1 view .LVU198
 341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 710              		.loc 1 341 5 view .LVU199
 342:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the HSI14 State */
 344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 711              		.loc 1 344 5 view .LVU200
 712              		.loc 1 344 25 is_stmt 0 view .LVU201
 713 01d8 5346     		mov	r3, r10
 714 01da 5B69     		ldr	r3, [r3, #20]
 715              		.loc 1 344 7 view .LVU202
 716 01dc 012B     		cmp	r3, #1
 717 01de 00D1     		bne	.LCB566
 718 01e0 0EE1     		b	.L171	@long jump
 719              	.LCB566:
 345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 346:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 348:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_ENABLE();
 351:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 357:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 360:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }      
 362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       } 
 363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 366:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 720              		.loc 1 367 10 is_stmt 1 view .LVU203
 721              		.loc 1 367 12 is_stmt 0 view .LVU204
 722 01e2 0533     		adds	r3, r3, #5
 723 01e4 00D1     		bne	.LCB569
 724 01e6 3CE1     		b	.L172	@long jump
 725              	.LCB569:
 368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 369:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 371:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 726              		.loc 1 378 7 is_stmt 1 view .LVU205
 727 01e8 0422     		movs	r2, #4
 728 01ea 504C     		ldr	r4, .L176
 379:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_DISABLE();
 382:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 729              		.loc 1 387 12 is_stmt 0 view .LVU206
 730 01ec 0027     		movs	r7, #0
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 731              		.loc 1 378 7 view .LVU207
 732 01ee 636B     		ldr	r3, [r4, #52]
 733              		.loc 1 387 13 view .LVU208
 734 01f0 0226     		movs	r6, #2
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 735              		.loc 1 378 7 view .LVU209
 736 01f2 1343     		orrs	r3, r2
 737 01f4 6363     		str	r3, [r4, #52]
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 738              		.loc 1 381 7 is_stmt 1 view .LVU210
 739 01f6 636B     		ldr	r3, [r4, #52]
 740 01f8 033A     		subs	r2, r2, #3
 741 01fa 9343     		bics	r3, r2
 742              	.LBB144:
 743              	.LBB145:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 744              		.loc 1 51 13 is_stmt 0 view .LVU211
 745 01fc 4E4A     		ldr	r2, .L176+12
 746              	.LBE145:
 747              	.LBE144:
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 748              		.loc 1 381 7 view .LVU212
 749 01fe 6363     		str	r3, [r4, #52]
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 750              		.loc 1 384 7 is_stmt 1 view .LVU213
 751              	.LBB147:
 752              	.LBI144:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 753              		.loc 1 48 10 view .LVU214
 754              	.LBB146:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 755              		.loc 1 50 2 view .LVU215
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 756              		.loc 1 51 2 view .LVU216
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 757              		.loc 1 51 13 is_stmt 0 view .LVU217
 758 0200 1568     		ldr	r5, [r2]
 759 0202 6B1C     		adds	r3, r5, #1
 760 0204 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 761              		.loc 1 51 16 is_stmt 1 view .LVU218
 762              	.LVL17:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 763              		.loc 1 51 16 is_stmt 0 view .LVU219
 764              	.LBE146:
 765              	.LBE147:
 766              		.loc 1 387 7 is_stmt 1 view .LVU220
 767 0206 0435     		adds	r5, r5, #4
 768              	.LVL18:
 769              		.loc 1 387 12 is_stmt 0 view .LVU221
 770 0208 04E0     		b	.L72
 771              	.L73:
 388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 772              		.loc 1 389 9 is_stmt 1 view .LVU222
 773              	.LBB148:
 774              	.LBI148:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 775              		.loc 1 48 10 view .LVU223
 776              	.LBB149:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 777              		.loc 1 50 2 view .LVU224
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 778              		.loc 1 51 2 view .LVU225
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 779              		.loc 1 51 13 is_stmt 0 view .LVU226
 780 020a 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 781              		.loc 1 51 16 is_stmt 1 view .LVU227
 782 020c 0127     		movs	r7, #1
 783              	.LBE149:
 784              	.LBE148:
 785              		.loc 1 389 11 is_stmt 0 view .LVU228
 786 020e 9D42     		cmp	r5, r3
 787 0210 00D1     		bne	.LCB620
 788 0212 76E1     		b	.L173	@long jump
 789              	.LCB620:
 790              	.L72:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 791              		.loc 1 387 12 is_stmt 1 view .LVU229
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 792              		.loc 1 387 13 is_stmt 0 view .LVU230
 793 0214 616B     		ldr	r1, [r4, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 794              		.loc 1 387 12 view .LVU231
 795 0216 0E42     		tst	r6, r1
 796 0218 F7D1     		bne	.L73
 797 021a 002F     		cmp	r7, #0
 798 021c 00D0     		beq	.L66
 799 021e 1360     		str	r3, [r2]
 800              	.LVL19:
 801              	.L66:
 390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 393:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 397:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_HSI48_SUPPORT)
 398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 399:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 403:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 406:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 407:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 408:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 State */
 416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_ENABLE();
 420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 424:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         } 
 432:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_DISABLE();
 437:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 443:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 446:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 449:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_HSI48_SUPPORT */
 453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        
 454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 802              		.loc 1 456 3 is_stmt 1 view .LVU232
 457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 803              		.loc 1 457 3 view .LVU233
 804              		.loc 1 457 30 is_stmt 0 view .LVU234
 805 0220 5346     		mov	r3, r10
 806 0222 1B6A     		ldr	r3, [r3, #32]
 807              		.loc 1 457 6 view .LVU235
 808 0224 002B     		cmp	r3, #0
 809 0226 20D0     		beq	.L75
 458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 810              		.loc 1 460 5 is_stmt 1 view .LVU236
 811              		.loc 1 460 8 is_stmt 0 view .LVU237
 812 0228 0C22     		movs	r2, #12
 813 022a 4049     		ldr	r1, .L176
 814 022c 4C68     		ldr	r4, [r1, #4]
 815 022e 2240     		ands	r2, r4
 816              		.loc 1 460 7 view .LVU238
 817 0230 082A     		cmp	r2, #8
 818 0232 2FD0     		beq	.L29
 461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 819              		.loc 1 462 7 is_stmt 1 view .LVU239
 820              		.loc 1 462 9 is_stmt 0 view .LVU240
 821 0234 022B     		cmp	r3, #2
 822 0236 00D1     		bne	.LCB649
 823 0238 21E1     		b	.L174	@long jump
 824              	.LCB649:
 463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the parameters */
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 477:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 480:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the main PLL. */
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 490:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 491:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 493:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 494:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is ready */
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 496:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 498:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 499:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 500:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 501:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 502:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 503:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 504:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 505:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 825              		.loc 1 506 9 is_stmt 1 view .LVU241
 507:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 508:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 510:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 826              		.loc 1 512 15 is_stmt 0 view .LVU242
 827 023a 8025     		movs	r5, #128
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 828              		.loc 1 506 9 view .LVU243
 829 023c 0B68     		ldr	r3, [r1]
 830 023e 424A     		ldr	r2, .L176+28
 831              		.loc 1 512 14 view .LVU244
 832 0240 0026     		movs	r6, #0
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 833              		.loc 1 506 9 view .LVU245
 834 0242 1340     		ands	r3, r2
 835              	.LBB150:
 836              	.LBB151:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 837              		.loc 1 51 13 view .LVU246
 838 0244 3C4A     		ldr	r2, .L176+12
 839              	.LBE151:
 840              	.LBE150:
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 841              		.loc 1 506 9 view .LVU247
 842 0246 0B60     		str	r3, [r1]
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 843              		.loc 1 509 9 is_stmt 1 view .LVU248
 844              	.LBB154:
 845              	.LBI150:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 846              		.loc 1 48 10 view .LVU249
 847              	.LBB152:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 848              		.loc 1 50 2 view .LVU250
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 849              		.loc 1 51 2 view .LVU251
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 850              		.loc 1 51 13 is_stmt 0 view .LVU252
 851 0248 1468     		ldr	r4, [r2]
 852              	.LBE152:
 853              	.LBE154:
 854              		.loc 1 512 15 view .LVU253
 855 024a 0800     		movs	r0, r1
 856              	.LBB155:
 857              	.LBB153:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 858              		.loc 1 51 13 view .LVU254
 859 024c 631C     		adds	r3, r4, #1
 860 024e 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 861              		.loc 1 51 16 is_stmt 1 view .LVU255
 862              	.LVL20:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 863              		.loc 1 51 16 is_stmt 0 view .LVU256
 864              	.LBE153:
 865              	.LBE155:
 866              		.loc 1 512 9 is_stmt 1 view .LVU257
 867 0250 0434     		adds	r4, r4, #4
 868              	.LVL21:
 869              		.loc 1 512 15 is_stmt 0 view .LVU258
 870 0252 AD04     		lsls	r5, r5, #18
 871              		.loc 1 512 14 view .LVU259
 872 0254 03E0     		b	.L83
 873              	.L84:
 513:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 874              		.loc 1 514 11 is_stmt 1 view .LVU260
 875              	.LBB156:
 876              	.LBI156:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 877              		.loc 1 48 10 view .LVU261
 878              	.LBB157:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 879              		.loc 1 50 2 view .LVU262
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 880              		.loc 1 51 2 view .LVU263
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 881              		.loc 1 51 13 is_stmt 0 view .LVU264
 882 0256 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 883              		.loc 1 51 16 is_stmt 1 view .LVU265
 884 0258 0126     		movs	r6, #1
 885              	.LBE157:
 886              	.LBE156:
 887              		.loc 1 514 13 is_stmt 0 view .LVU266
 888 025a A342     		cmp	r3, r4
 889 025c 63D0     		beq	.L160
 890              	.L83:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 891              		.loc 1 512 14 is_stmt 1 view .LVU267
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 892              		.loc 1 512 15 is_stmt 0 view .LVU268
 893 025e 0168     		ldr	r1, [r0]
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 894              		.loc 1 512 14 view .LVU269
 895 0260 2942     		tst	r1, r5
 896 0262 F8D1     		bne	.L84
 897 0264 002E     		cmp	r6, #0
 898 0266 00D0     		beq	.L75
 899 0268 1360     		str	r3, [r2]
 900              	.LVL22:
 901              	.L75:
 515:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 516:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 517:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 518:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 519:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 520:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 521:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 522:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 524:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 525:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 526:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 527:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 902              		.loc 1 527 10 view .LVU270
 903 026a 0020     		movs	r0, #0
 904              	.L14:
 528:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 905              		.loc 1 528 1 view .LVU271
 906 026c 02B0     		add	sp, sp, #8
 907              		@ sp needed
 908              	.LVL23:
 909              		.loc 1 528 1 view .LVU272
 910 026e 1CBC     		pop	{r2, r3, r4}
 911 0270 9046     		mov	r8, r2
 912 0272 9946     		mov	r9, r3
 913 0274 A246     		mov	r10, r4
 914 0276 F0BD     		pop	{r4, r5, r6, r7, pc}
 915              	.LVL24:
 916              	.L163:
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 917              		.loc 1 113 82 discriminator 1 view .LVU273
 918 0278 6368     		ldr	r3, [r4, #4]
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 919              		.loc 1 113 78 discriminator 1 view .LVU274
 920 027a DB03     		lsls	r3, r3, #15
 921 027c 00D4     		bmi	.LCB741
 922 027e D5E6     		b	.L12	@long jump
 923              	.LCB741:
 924              	.L11:
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 925              		.loc 1 115 7 is_stmt 1 view .LVU275
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 926              		.loc 1 115 11 is_stmt 0 view .LVU276
 927 0280 2A4B     		ldr	r3, .L176
 928 0282 1B68     		ldr	r3, [r3]
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 929              		.loc 1 115 9 view .LVU277
 930 0284 9B03     		lsls	r3, r3, #14
 931 0286 00D4     		bmi	.LCB749
 932 0288 FBE6     		b	.L10	@long jump
 933              	.LCB749:
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 934              		.loc 1 115 57 discriminator 1 view .LVU278
 935 028a 5346     		mov	r3, r10
 936 028c 5B68     		ldr	r3, [r3, #4]
 937 028e 002B     		cmp	r3, #0
 938 0290 00D0     		beq	.LCB754
 939 0292 F6E6     		b	.L10	@long jump
 940              	.LCB754:
 941              	.LVL25:
 942              	.L29:
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 943              		.loc 1 117 16 view .LVU279
 944 0294 0120     		movs	r0, #1
 945 0296 E9E7     		b	.L14
 946              	.L167:
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 947              		.loc 1 166 82 discriminator 1 view .LVU280
 948 0298 5368     		ldr	r3, [r2, #4]
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 949              		.loc 1 166 78 discriminator 1 view .LVU281
 950 029a DB03     		lsls	r3, r3, #15
 951 029c 00D5     		bpl	.LCB767
 952 029e FDE6     		b	.L27	@long jump
 953              	.LCB767:
 954              	.L26:
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 955              		.loc 1 169 7 is_stmt 1 view .LVU282
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 956              		.loc 1 169 11 is_stmt 0 view .LVU283
 957 02a0 224B     		ldr	r3, .L176
 958 02a2 1B68     		ldr	r3, [r3]
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 959              		.loc 1 169 9 view .LVU284
 960 02a4 9B07     		lsls	r3, r3, #30
 961 02a6 00D4     		bmi	.LCB775
 962 02a8 18E7     		b	.L33	@long jump
 963              	.LCB775:
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 964              		.loc 1 169 57 discriminator 1 view .LVU285
 965 02aa 5346     		mov	r3, r10
 966 02ac DB68     		ldr	r3, [r3, #12]
 967 02ae 012B     		cmp	r3, #1
 968 02b0 00D1     		bne	.LCB780
 969 02b2 13E7     		b	.L33	@long jump
 970              	.LCB780:
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 971              		.loc 1 117 16 view .LVU286
 972 02b4 0120     		movs	r0, #1
 973 02b6 D9E7     		b	.L14
 974              	.L39:
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 975              		.loc 1 249 7 is_stmt 1 view .LVU287
 976 02b8 0122     		movs	r2, #1
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 977              		.loc 1 255 13 is_stmt 0 view .LVU288
 978 02ba 0220     		movs	r0, #2
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 979              		.loc 1 249 7 view .LVU289
 980 02bc 6B6A     		ldr	r3, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 981              		.loc 1 255 12 view .LVU290
 982 02be 0027     		movs	r7, #0
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 983              		.loc 1 249 7 view .LVU291
 984 02c0 9343     		bics	r3, r2
 985              	.LBB158:
 986              	.LBB159:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 987              		.loc 1 51 13 view .LVU292
 988 02c2 1D4A     		ldr	r2, .L176+12
 989              	.LBE159:
 990              	.LBE158:
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 991              		.loc 1 249 7 view .LVU293
 992 02c4 6B62     		str	r3, [r5, #36]
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 993              		.loc 1 252 7 is_stmt 1 view .LVU294
 994              	.LBB162:
 995              	.LBI158:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 996              		.loc 1 48 10 view .LVU295
 997              	.LBB160:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 998              		.loc 1 50 2 view .LVU296
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 999              		.loc 1 51 2 view .LVU297
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1000              		.loc 1 51 13 is_stmt 0 view .LVU298
 1001 02c6 1668     		ldr	r6, [r2]
 1002              	.LBE160:
 1003              	.LBE162:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1004              		.loc 1 255 13 view .LVU299
 1005 02c8 8446     		mov	ip, r0
 1006              	.LBB163:
 1007              	.LBB161:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1008              		.loc 1 51 13 view .LVU300
 1009 02ca 731C     		adds	r3, r6, #1
 1010 02cc 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1011              		.loc 1 51 16 is_stmt 1 view .LVU301
 1012              	.LVL26:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1013              		.loc 1 51 16 is_stmt 0 view .LVU302
 1014              	.LBE161:
 1015              	.LBE163:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1016              		.loc 1 255 7 is_stmt 1 view .LVU303
 1017 02ce 0436     		adds	r6, r6, #4
 1018              	.LVL27:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1019              		.loc 1 255 12 is_stmt 0 view .LVU304
 1020 02d0 03E0     		b	.L43
 1021              	.L44:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1022              		.loc 1 257 9 is_stmt 1 view .LVU305
 1023              	.LBB164:
 1024              	.LBI164:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1025              		.loc 1 48 10 view .LVU306
 1026              	.LBB165:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1027              		.loc 1 50 2 view .LVU307
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1028              		.loc 1 51 2 view .LVU308
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1029              		.loc 1 51 13 is_stmt 0 view .LVU309
 1030 02d2 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1031              		.loc 1 51 16 is_stmt 1 view .LVU310
 1032 02d4 0127     		movs	r7, #1
 1033              	.LBE165:
 1034              	.LBE164:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1035              		.loc 1 257 11 is_stmt 0 view .LVU311
 1036 02d6 B342     		cmp	r3, r6
 1037 02d8 25D0     		beq	.L160
 1038              	.L43:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1039              		.loc 1 255 12 is_stmt 1 view .LVU312
 1040 02da 6046     		mov	r0, ip
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1041              		.loc 1 255 13 is_stmt 0 view .LVU313
 1042 02dc 6C6A     		ldr	r4, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1043              		.loc 1 255 12 view .LVU314
 1044 02de 2042     		tst	r0, r4
 1045 02e0 F7D1     		bne	.L44
 1046 02e2 22E7     		b	.L155
 1047              	.LVL28:
 1048              	.L48:
 1049              	.LBB166:
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1050              		.loc 1 283 7 is_stmt 1 view .LVU315
 1051 02e4 2B68     		ldr	r3, [r5]
 1052              	.LBB130:
 1053              	.LBB131:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1054              		.loc 1 51 13 is_stmt 0 view .LVU316
 1055 02e6 144A     		ldr	r2, .L176+12
 1056              	.LBE131:
 1057              	.LBE130:
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1058              		.loc 1 283 7 view .LVU317
 1059 02e8 3343     		orrs	r3, r6
 1060 02ea 2B60     		str	r3, [r5]
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1061              		.loc 1 286 7 is_stmt 1 view .LVU318
 1062              	.LBB134:
 1063              	.LBI130:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1064              		.loc 1 48 10 view .LVU319
 1065              	.LBB132:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1066              		.loc 1 50 2 view .LVU320
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1067              		.loc 1 51 2 view .LVU321
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1068              		.loc 1 51 13 is_stmt 0 view .LVU322
 1069 02ec 1368     		ldr	r3, [r2]
 1070              	.LBE132:
 1071              	.LBE134:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1072              		.loc 1 288 12 view .LVU323
 1073 02ee 0027     		movs	r7, #0
 1074              	.LBB135:
 1075              	.LBB133:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1076              		.loc 1 51 13 view .LVU324
 1077 02f0 581C     		adds	r0, r3, #1
 1078 02f2 8046     		mov	r8, r0
 1079 02f4 1060     		str	r0, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1080              		.loc 1 51 16 is_stmt 1 view .LVU325
 1081              	.LVL29:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1082              		.loc 1 51 16 is_stmt 0 view .LVU326
 1083              	.LBE133:
 1084              	.LBE135:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1085              		.loc 1 288 7 is_stmt 1 view .LVU327
 1086 02f6 6620     		movs	r0, #102
 1087 02f8 8446     		mov	ip, r0
 1088 02fa 9C44     		add	ip, ip, r3
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1089              		.loc 1 288 12 is_stmt 0 view .LVU328
 1090 02fc 4346     		mov	r3, r8
 1091              	.LVL30:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1092              		.loc 1 288 12 view .LVU329
 1093 02fe 03E0     		b	.L50
 1094              	.LVL31:
 1095              	.L51:
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1096              		.loc 1 290 9 is_stmt 1 view .LVU330
 1097              	.LBB136:
 1098              	.LBI136:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1099              		.loc 1 48 10 view .LVU331
 1100              	.LBB137:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1101              		.loc 1 50 2 view .LVU332
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1102              		.loc 1 51 2 view .LVU333
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1103              		.loc 1 51 13 is_stmt 0 view .LVU334
 1104 0300 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1105              		.loc 1 51 16 is_stmt 1 view .LVU335
 1106 0302 0127     		movs	r7, #1
 1107              	.LBE137:
 1108              	.LBE136:
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1109              		.loc 1 290 11 is_stmt 0 view .LVU336
 1110 0304 6345     		cmp	r3, ip
 1111 0306 0ED0     		beq	.L160
 1112              	.L50:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1113              		.loc 1 288 12 is_stmt 1 view .LVU337
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1114              		.loc 1 288 13 is_stmt 0 view .LVU338
 1115 0308 2C68     		ldr	r4, [r5]
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1116              		.loc 1 288 12 view .LVU339
 1117 030a 3442     		tst	r4, r6
 1118 030c F8D0     		beq	.L51
 1119 030e 002F     		cmp	r7, #0
 1120 0310 00D1     		bne	.LCB911
 1121 0312 9AE0     		b	.L87	@long jump
 1122              	.LCB911:
 1123 0314 1360     		str	r3, [r2]
 1124 0316 27E7     		b	.L49
 1125              	.LVL32:
 1126              	.L164:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1127              		.loc 1 288 12 view .LVU340
 1128              	.LBE166:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1129              		.loc 1 123 7 is_stmt 1 discriminator 1 view .LVU341
 1130 0318 8023     		movs	r3, #128
 1131 031a 044A     		ldr	r2, .L176
 1132 031c 5B02     		lsls	r3, r3, #9
 1133 031e 1468     		ldr	r4, [r2]
 1134 0320 2343     		orrs	r3, r4
 1135 0322 1360     		str	r3, [r2]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1136              		.loc 1 123 7 discriminator 1 view .LVU342
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1137              		.loc 1 127 7 discriminator 1 view .LVU343
 1138 0324 96E6     		b	.L16
 1139              	.LVL33:
 1140              	.L160:
 516:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 1141              		.loc 1 516 20 is_stmt 0 view .LVU344
 1142 0326 0320     		movs	r0, #3
 1143 0328 1360     		str	r3, [r2]
 1144 032a 9FE7     		b	.L14
 1145              	.L177:
 1146              		.align	2
 1147              	.L176:
 1148 032c 00100240 		.word	1073876992
 1149 0330 FFFFFEFF 		.word	-65537
 1150 0334 FFFFFBFF 		.word	-262145
 1151 0338 00000000 		.word	.LANCHOR0
 1152 033c 00700040 		.word	1073770496
 1153 0340 8A130000 		.word	5002
 1154 0344 FFFFFFEF 		.word	-268435457
 1155 0348 FFFFFFFE 		.word	-16777217
 1156              	.LVL34:
 1157              	.L165:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1158              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU345
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1159              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU346
 1160 034c 8020     		movs	r0, #128
 1161              	.LVL35:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1162              		.loc 1 123 7 discriminator 4 view .LVU347
 1163 034e 764D     		ldr	r5, .L178
 1164 0350 764A     		ldr	r2, .L178+4
 1165 0352 2B68     		ldr	r3, [r5]
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1166              		.loc 1 147 15 discriminator 4 view .LVU348
 1167 0354 8002     		lsls	r0, r0, #10
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1168              		.loc 1 123 7 discriminator 4 view .LVU349
 1169 0356 1340     		ands	r3, r2
 1170 0358 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1171              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU350
 1172 035a 2B68     		ldr	r3, [r5]
 1173 035c 744A     		ldr	r2, .L178+8
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1174              		.loc 1 147 14 is_stmt 0 discriminator 4 view .LVU351
 1175 035e 0027     		movs	r7, #0
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1176              		.loc 1 123 7 discriminator 4 view .LVU352
 1177 0360 1340     		ands	r3, r2
 1178              	.LBB167:
 1179              	.LBB168:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1180              		.loc 1 51 13 discriminator 4 view .LVU353
 1181 0362 744A     		ldr	r2, .L178+12
 1182              	.LBE168:
 1183              	.LBE167:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1184              		.loc 1 123 7 discriminator 4 view .LVU354
 1185 0364 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1186              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU355
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1187              		.loc 1 127 7 discriminator 4 view .LVU356
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1188              		.loc 1 144 9 discriminator 4 view .LVU357
 1189              	.LBB171:
 1190              	.LBI167:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1191              		.loc 1 48 10 discriminator 4 view .LVU358
 1192              	.LBB169:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1193              		.loc 1 50 2 discriminator 4 view .LVU359
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1194              		.loc 1 51 2 discriminator 4 view .LVU360
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1195              		.loc 1 51 13 is_stmt 0 discriminator 4 view .LVU361
 1196 0366 1668     		ldr	r6, [r2]
 1197              	.LBE169:
 1198              	.LBE171:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1199              		.loc 1 147 15 discriminator 4 view .LVU362
 1200 0368 8446     		mov	ip, r0
 1201              	.LBB172:
 1202              	.LBB170:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1203              		.loc 1 51 13 discriminator 4 view .LVU363
 1204 036a 731C     		adds	r3, r6, #1
 1205 036c 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1206              		.loc 1 51 16 is_stmt 1 discriminator 4 view .LVU364
 1207              	.LVL36:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1208              		.loc 1 51 16 is_stmt 0 discriminator 4 view .LVU365
 1209              	.LBE170:
 1210              	.LBE172:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1211              		.loc 1 147 9 is_stmt 1 discriminator 4 view .LVU366
 1212 036e 6636     		adds	r6, r6, #102
 1213              	.LVL37:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1214              		.loc 1 147 14 is_stmt 0 discriminator 4 view .LVU367
 1215 0370 03E0     		b	.L18
 1216              	.L23:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1217              		.loc 1 149 12 is_stmt 1 view .LVU368
 1218              	.LBB173:
 1219              	.LBI173:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1220              		.loc 1 48 10 view .LVU369
 1221              	.LBB174:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1222              		.loc 1 50 2 view .LVU370
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1223              		.loc 1 51 2 view .LVU371
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1224              		.loc 1 51 13 is_stmt 0 view .LVU372
 1225 0372 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1226              		.loc 1 51 16 is_stmt 1 view .LVU373
 1227 0374 0127     		movs	r7, #1
 1228              	.LBE174:
 1229              	.LBE173:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1230              		.loc 1 149 14 is_stmt 0 view .LVU374
 1231 0376 B342     		cmp	r3, r6
 1232 0378 D5D0     		beq	.L160
 1233              	.L18:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1234              		.loc 1 147 14 is_stmt 1 view .LVU375
 1235 037a 6046     		mov	r0, ip
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1236              		.loc 1 147 15 is_stmt 0 view .LVU376
 1237 037c 2C68     		ldr	r4, [r5]
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1238              		.loc 1 147 14 view .LVU377
 1239 037e 0442     		tst	r4, r0
 1240 0380 F7D1     		bne	.L23
 1241 0382 002F     		cmp	r7, #0
 1242 0384 00D1     		bne	.LCB1025
 1243 0386 7CE6     		b	.L10	@long jump
 1244              	.LCB1025:
 1245 0388 1360     		str	r3, [r2]
 1246 038a 7AE6     		b	.L10
 1247              	.LVL38:
 1248              	.L169:
 1249              	.LBB175:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1250              		.loc 1 298 5 is_stmt 1 discriminator 4 view .LVU378
 1251 038c 0125     		movs	r5, #1
 1252 038e 6A48     		ldr	r0, .L178+16
 1253              	.LVL39:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1254              		.loc 1 298 5 is_stmt 0 discriminator 4 view .LVU379
 1255 0390 654E     		ldr	r6, .L178
 1256 0392 8046     		mov	r8, r0
 1257 0394 346A     		ldr	r4, [r6, #32]
 1258 0396 9844     		add	r8, r8, r3
 1259 0398 AC43     		bics	r4, r5
 1260 039a 3462     		str	r4, [r6, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1261              		.loc 1 298 5 is_stmt 1 discriminator 4 view .LVU380
 1262 039c 346A     		ldr	r4, [r6, #32]
 1263 039e 0335     		adds	r5, r5, #3
 1264 03a0 AC43     		bics	r4, r5
 1265 03a2 3462     		str	r4, [r6, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1266              		.loc 1 298 5 discriminator 4 view .LVU381
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1267              		.loc 1 300 5 discriminator 4 view .LVU382
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1268              		.loc 1 317 7 discriminator 4 view .LVU383
 1269              	.LBB138:
 1270              	.LBI138:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1271              		.loc 1 48 10 discriminator 4 view .LVU384
 1272              	.LBB139:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1273              		.loc 1 50 2 discriminator 4 view .LVU385
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1274              		.loc 1 51 2 discriminator 4 view .LVU386
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1275              		.loc 1 51 13 is_stmt 0 discriminator 4 view .LVU387
 1276 03a4 5C1C     		adds	r4, r3, #1
 1277              	.LBE139:
 1278              	.LBE138:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1279              		.loc 1 320 12 discriminator 4 view .LVU388
 1280 03a6 0027     		movs	r7, #0
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1281              		.loc 1 320 13 discriminator 4 view .LVU389
 1282 03a8 0223     		movs	r3, #2
 1283              	.LBB141:
 1284              	.LBB140:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1285              		.loc 1 51 13 discriminator 4 view .LVU390
 1286 03aa 1460     		str	r4, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1287              		.loc 1 51 16 is_stmt 1 discriminator 4 view .LVU391
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1288              		.loc 1 51 16 is_stmt 0 discriminator 4 view .LVU392
 1289              	.LBE140:
 1290              	.LBE141:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1291              		.loc 1 320 7 is_stmt 1 discriminator 4 view .LVU393
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1292              		.loc 1 320 12 is_stmt 0 discriminator 4 view .LVU394
 1293 03ac 03E0     		b	.L55
 1294              	.L62:
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1295              		.loc 1 322 9 is_stmt 1 view .LVU395
 1296              	.LBB142:
 1297              	.LBI142:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1298              		.loc 1 48 10 view .LVU396
 1299              	.LBB143:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1300              		.loc 1 50 2 view .LVU397
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1301              		.loc 1 51 2 view .LVU398
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1302              		.loc 1 51 13 is_stmt 0 view .LVU399
 1303 03ae 0134     		adds	r4, r4, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1304              		.loc 1 51 16 is_stmt 1 view .LVU400
 1305 03b0 0127     		movs	r7, #1
 1306              	.LBE143:
 1307              	.LBE142:
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1308              		.loc 1 322 11 is_stmt 0 view .LVU401
 1309 03b2 4445     		cmp	r4, r8
 1310 03b4 03D0     		beq	.L161
 1311              	.L55:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1312              		.loc 1 320 12 is_stmt 1 view .LVU402
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1313              		.loc 1 320 13 is_stmt 0 view .LVU403
 1314 03b6 356A     		ldr	r5, [r6, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1315              		.loc 1 320 12 view .LVU404
 1316 03b8 2B42     		tst	r3, r5
 1317 03ba F8D1     		bne	.L62
 1318 03bc FFE6     		b	.L157
 1319              	.L161:
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1320              		.loc 1 324 18 view .LVU405
 1321 03be 0320     		movs	r0, #3
 1322 03c0 1460     		str	r4, [r2]
 1323 03c2 53E7     		b	.L14
 1324              	.LVL40:
 1325              	.L30:
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1326              		.loc 1 324 18 view .LVU406
 1327              	.LBE175:
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1328              		.loc 1 206 9 is_stmt 1 view .LVU407
 1329 03c4 0122     		movs	r2, #1
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1330              		.loc 1 212 14 is_stmt 0 view .LVU408
 1331 03c6 0020     		movs	r0, #0
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1332              		.loc 1 206 9 view .LVU409
 1333 03c8 2B68     		ldr	r3, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1334              		.loc 1 212 14 view .LVU410
 1335 03ca 8446     		mov	ip, r0
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1336              		.loc 1 206 9 view .LVU411
 1337 03cc 9343     		bics	r3, r2
 1338              	.LBB176:
 1339              	.LBB177:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1340              		.loc 1 51 13 view .LVU412
 1341 03ce 594A     		ldr	r2, .L178+12
 1342              	.LBE177:
 1343              	.LBE176:
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1344              		.loc 1 206 9 view .LVU413
 1345 03d0 2B60     		str	r3, [r5]
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1346              		.loc 1 209 9 is_stmt 1 view .LVU414
 1347              	.LBB180:
 1348              	.LBI176:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1349              		.loc 1 48 10 view .LVU415
 1350              	.LBB178:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1351              		.loc 1 50 2 view .LVU416
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1352              		.loc 1 51 2 view .LVU417
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1353              		.loc 1 51 13 is_stmt 0 view .LVU418
 1354 03d2 1668     		ldr	r6, [r2]
 1355              	.LBE178:
 1356              	.LBE180:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1357              		.loc 1 212 15 view .LVU419
 1358 03d4 0227     		movs	r7, #2
 1359              	.LBB181:
 1360              	.LBB179:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1361              		.loc 1 51 13 view .LVU420
 1362 03d6 731C     		adds	r3, r6, #1
 1363 03d8 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1364              		.loc 1 51 16 is_stmt 1 view .LVU421
 1365              	.LVL41:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1366              		.loc 1 51 16 is_stmt 0 view .LVU422
 1367              	.LBE179:
 1368              	.LBE181:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1369              		.loc 1 212 9 is_stmt 1 view .LVU423
 1370 03da 0436     		adds	r6, r6, #4
 1371              	.LVL42:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1372              		.loc 1 212 14 is_stmt 0 view .LVU424
 1373 03dc 04E0     		b	.L34
 1374              	.L35:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1375              		.loc 1 214 11 is_stmt 1 view .LVU425
 1376              	.LBB182:
 1377              	.LBI182:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1378              		.loc 1 48 10 view .LVU426
 1379              	.LBB183:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1380              		.loc 1 50 2 view .LVU427
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1381              		.loc 1 51 2 view .LVU428
 1382 03de 0120     		movs	r0, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1383              		.loc 1 51 13 is_stmt 0 view .LVU429
 1384 03e0 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1385              		.loc 1 51 16 is_stmt 1 view .LVU430
 1386 03e2 8446     		mov	ip, r0
 1387              	.LBE183:
 1388              	.LBE182:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1389              		.loc 1 214 13 is_stmt 0 view .LVU431
 1390 03e4 B342     		cmp	r3, r6
 1391 03e6 08D0     		beq	.L159
 1392              	.L34:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1393              		.loc 1 212 14 is_stmt 1 view .LVU432
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1394              		.loc 1 212 15 is_stmt 0 view .LVU433
 1395 03e8 2C68     		ldr	r4, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1396              		.loc 1 212 14 view .LVU434
 1397 03ea 2742     		tst	r7, r4
 1398 03ec F7D1     		bne	.L35
 1399 03ee 6046     		mov	r0, ip
 1400 03f0 0028     		cmp	r0, #0
 1401 03f2 00D1     		bne	.LCB1167
 1402 03f4 7BE6     		b	.L25	@long jump
 1403              	.LCB1167:
 1404 03f6 1360     		str	r3, [r2]
 1405 03f8 79E6     		b	.L25
 1406              	.LVL43:
 1407              	.L159:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1408              		.loc 1 212 14 view .LVU435
 1409 03fa 1360     		str	r3, [r2]
 216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 1410              		.loc 1 216 20 view .LVU436
 1411 03fc 0230     		adds	r0, r0, #2
 1412 03fe 35E7     		b	.L14
 1413              	.L171:
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1414              		.loc 1 347 7 is_stmt 1 view .LVU437
 1415 0400 0421     		movs	r1, #4
 1416 0402 494C     		ldr	r4, .L178
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1417              		.loc 1 356 12 is_stmt 0 view .LVU438
 1418 0404 0027     		movs	r7, #0
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1419              		.loc 1 347 7 view .LVU439
 1420 0406 626B     		ldr	r2, [r4, #52]
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1421              		.loc 1 356 13 view .LVU440
 1422 0408 0226     		movs	r6, #2
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1423              		.loc 1 347 7 view .LVU441
 1424 040a 0A43     		orrs	r2, r1
 1425 040c 6263     		str	r2, [r4, #52]
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1426              		.loc 1 350 7 is_stmt 1 view .LVU442
 1427 040e 626B     		ldr	r2, [r4, #52]
 1428 0410 1343     		orrs	r3, r2
 1429              	.LBB184:
 1430              	.LBB185:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1431              		.loc 1 51 13 is_stmt 0 view .LVU443
 1432 0412 484A     		ldr	r2, .L178+12
 1433              	.LBE185:
 1434              	.LBE184:
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1435              		.loc 1 350 7 view .LVU444
 1436 0414 6363     		str	r3, [r4, #52]
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1437              		.loc 1 353 7 is_stmt 1 view .LVU445
 1438              	.LBB187:
 1439              	.LBI184:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1440              		.loc 1 48 10 view .LVU446
 1441              	.LBB186:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1442              		.loc 1 50 2 view .LVU447
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1443              		.loc 1 51 2 view .LVU448
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1444              		.loc 1 51 13 is_stmt 0 view .LVU449
 1445 0416 1568     		ldr	r5, [r2]
 1446 0418 6B1C     		adds	r3, r5, #1
 1447 041a 1360     		str	r3, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1448              		.loc 1 51 16 is_stmt 1 view .LVU450
 1449              	.LVL44:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1450              		.loc 1 51 16 is_stmt 0 view .LVU451
 1451              	.LBE186:
 1452              	.LBE187:
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1453              		.loc 1 356 7 is_stmt 1 view .LVU452
 1454 041c 0435     		adds	r5, r5, #4
 1455              	.LVL45:
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1456              		.loc 1 356 12 is_stmt 0 view .LVU453
 1457 041e 04E0     		b	.L68
 1458              	.L69:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1459              		.loc 1 358 9 is_stmt 1 view .LVU454
 1460              	.LBB188:
 1461              	.LBI188:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1462              		.loc 1 48 10 view .LVU455
 1463              	.LBB189:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1464              		.loc 1 50 2 view .LVU456
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1465              		.loc 1 51 2 view .LVU457
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1466              		.loc 1 51 13 is_stmt 0 view .LVU458
 1467 0420 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1468              		.loc 1 51 16 is_stmt 1 view .LVU459
 1469 0422 0127     		movs	r7, #1
 1470              	.LBE189:
 1471              	.LBE188:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1472              		.loc 1 358 11 is_stmt 0 view .LVU460
 1473 0424 AB42     		cmp	r3, r5
 1474 0426 00D1     		bne	.LCB1230
 1475 0428 7DE7     		b	.L160	@long jump
 1476              	.LCB1230:
 1477              	.L68:
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1478              		.loc 1 356 12 is_stmt 1 view .LVU461
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1479              		.loc 1 356 13 is_stmt 0 view .LVU462
 1480 042a 616B     		ldr	r1, [r4, #52]
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1481              		.loc 1 356 12 view .LVU463
 1482 042c 0E42     		tst	r6, r1
 1483 042e F7D0     		beq	.L69
 1484 0430 002F     		cmp	r7, #0
 1485 0432 00D0     		beq	.L70
 1486 0434 1360     		str	r3, [r2]
 1487              	.L70:
 365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1488              		.loc 1 365 7 is_stmt 1 view .LVU464
 1489 0436 5346     		mov	r3, r10
 1490 0438 F824     		movs	r4, #248
 1491 043a 3B49     		ldr	r1, .L178
 1492 043c 9B69     		ldr	r3, [r3, #24]
 1493 043e 4A6B     		ldr	r2, [r1, #52]
 1494 0440 DB00     		lsls	r3, r3, #3
 1495 0442 A243     		bics	r2, r4
 1496 0444 1343     		orrs	r3, r2
 1497 0446 4B63     		str	r3, [r1, #52]
 1498 0448 EAE6     		b	.L66
 1499              	.LVL46:
 1500              	.L87:
 1501              	.LBB190:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1502              		.loc 1 288 12 is_stmt 0 view .LVU465
 1503 044a 4346     		mov	r3, r8
 1504 044c 8CE6     		b	.L49
 1505              	.LVL47:
 1506              	.L170:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1507              		.loc 1 298 5 is_stmt 1 discriminator 7 view .LVU466
 1508 044e 0426     		movs	r6, #4
 1509 0450 354C     		ldr	r4, .L178
 1510 0452 256A     		ldr	r5, [r4, #32]
 1511 0454 3543     		orrs	r5, r6
 1512 0456 2562     		str	r5, [r4, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1513              		.loc 1 298 5 discriminator 7 view .LVU467
 1514 0458 256A     		ldr	r5, [r4, #32]
 1515 045a 033E     		subs	r6, r6, #3
 1516 045c 3543     		orrs	r5, r6
 1517 045e 2562     		str	r5, [r4, #32]
 1518 0460 9AE6     		b	.L53
 1519              	.LVL48:
 1520              	.L172:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 1521              		.loc 1 298 5 is_stmt 0 discriminator 7 view .LVU468
 1522              	.LBE190:
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1523              		.loc 1 370 7 is_stmt 1 view .LVU469
 1524 0462 0421     		movs	r1, #4
 1525 0464 304A     		ldr	r2, .L178
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1526              		.loc 1 373 7 is_stmt 0 view .LVU470
 1527 0466 F824     		movs	r4, #248
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1528              		.loc 1 370 7 view .LVU471
 1529 0468 536B     		ldr	r3, [r2, #52]
 1530 046a 8B43     		bics	r3, r1
 1531 046c 5363     		str	r3, [r2, #52]
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1532              		.loc 1 373 7 is_stmt 1 view .LVU472
 1533 046e 5346     		mov	r3, r10
 1534 0470 516B     		ldr	r1, [r2, #52]
 1535 0472 9B69     		ldr	r3, [r3, #24]
 1536 0474 A143     		bics	r1, r4
 1537 0476 DB00     		lsls	r3, r3, #3
 1538 0478 0B43     		orrs	r3, r1
 1539 047a 5363     		str	r3, [r2, #52]
 1540 047c D0E6     		b	.L66
 1541              	.L174:
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1542              		.loc 1 465 9 view .LVU473
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 1543              		.loc 1 466 9 view .LVU474
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1544              		.loc 1 467 9 view .LVU475
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1545              		.loc 1 470 9 view .LVU476
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1546              		.loc 1 476 15 is_stmt 0 view .LVU477
 1547 047e 8026     		movs	r6, #128
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1548              		.loc 1 470 9 view .LVU478
 1549 0480 0B68     		ldr	r3, [r1]
 1550 0482 2E4A     		ldr	r2, .L178+20
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1551              		.loc 1 476 14 view .LVU479
 1552 0484 0027     		movs	r7, #0
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1553              		.loc 1 470 9 view .LVU480
 1554 0486 1340     		ands	r3, r2
 1555              	.LBB191:
 1556              	.LBB192:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1557              		.loc 1 51 13 view .LVU481
 1558 0488 2A4A     		ldr	r2, .L178+12
 1559              	.LBE192:
 1560              	.LBE191:
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1561              		.loc 1 470 9 view .LVU482
 1562 048a 0B60     		str	r3, [r1]
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1563              		.loc 1 473 9 is_stmt 1 view .LVU483
 1564              	.LBB195:
 1565              	.LBI191:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1566              		.loc 1 48 10 view .LVU484
 1567              	.LBB193:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1568              		.loc 1 50 2 view .LVU485
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1569              		.loc 1 51 2 view .LVU486
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1570              		.loc 1 51 13 is_stmt 0 view .LVU487
 1571 048c 1568     		ldr	r5, [r2]
 1572              	.LBE193:
 1573              	.LBE195:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1574              		.loc 1 476 15 view .LVU488
 1575 048e B604     		lsls	r6, r6, #18
 1576              	.LBB196:
 1577              	.LBB194:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1578              		.loc 1 51 13 view .LVU489
 1579 0490 6B1C     		adds	r3, r5, #1
 1580 0492 9C46     		mov	ip, r3
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1581              		.loc 1 51 16 is_stmt 1 view .LVU490
 1582              	.LVL49:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1583              		.loc 1 51 16 is_stmt 0 view .LVU491
 1584              	.LBE194:
 1585              	.LBE196:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1586              		.loc 1 476 9 is_stmt 1 view .LVU492
 1587 0494 0435     		adds	r5, r5, #4
 1588              	.LVL50:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1589              		.loc 1 476 14 is_stmt 0 view .LVU493
 1590 0496 04E0     		b	.L77
 1591              	.L78:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1592              		.loc 1 478 11 is_stmt 1 view .LVU494
 1593              	.LBB197:
 1594              	.LBI197:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1595              		.loc 1 48 10 view .LVU495
 1596              	.LBB198:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1597              		.loc 1 50 2 view .LVU496
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1598              		.loc 1 51 2 view .LVU497
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1599              		.loc 1 51 13 is_stmt 0 view .LVU498
 1600 0498 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1601              		.loc 1 51 16 is_stmt 1 view .LVU499
 1602 049a 0127     		movs	r7, #1
 1603              	.LBE198:
 1604              	.LBE197:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1605              		.loc 1 478 13 is_stmt 0 view .LVU500
 1606 049c AB42     		cmp	r3, r5
 1607 049e 00D1     		bne	.LCB1359
 1608 04a0 41E7     		b	.L160	@long jump
 1609              	.LCB1359:
 1610              	.L77:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1611              		.loc 1 476 14 is_stmt 1 view .LVU501
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1612              		.loc 1 476 15 is_stmt 0 view .LVU502
 1613 04a2 0C68     		ldr	r4, [r1]
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1614              		.loc 1 476 14 view .LVU503
 1615 04a4 3442     		tst	r4, r6
 1616 04a6 F7D1     		bne	.L78
 1617 04a8 002F     		cmp	r7, #0
 1618 04aa 00D1     		bne	.L79
 1619 04ac 6346     		mov	r3, ip
 1620              	.L79:
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1621              		.loc 1 485 9 is_stmt 1 view .LVU504
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1622              		.loc 1 485 9 view .LVU505
 1623 04ae 5046     		mov	r0, r10
 1624 04b0 0F25     		movs	r5, #15
 1625 04b2 1D4C     		ldr	r4, .L178
 1626 04b4 C06A     		ldr	r0, [r0, #44]
 1627 04b6 E16A     		ldr	r1, [r4, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1628              		.loc 1 495 15 is_stmt 0 view .LVU506
 1629 04b8 8026     		movs	r6, #128
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1630              		.loc 1 485 9 view .LVU507
 1631 04ba A943     		bics	r1, r5
 1632 04bc 0143     		orrs	r1, r0
 1633 04be E162     		str	r1, [r4, #44]
 1634              	.LVL51:
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1635              		.loc 1 485 9 is_stmt 1 view .LVU508
 1636 04c0 5046     		mov	r0, r10
 1637 04c2 5146     		mov	r1, r10
 1638 04c4 406A     		ldr	r0, [r0, #36]
 1639 04c6 896A     		ldr	r1, [r1, #40]
 1640 04c8 6568     		ldr	r5, [r4, #4]
 1641 04ca 0143     		orrs	r1, r0
 1642 04cc 1C48     		ldr	r0, .L178+24
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1643              		.loc 1 495 15 is_stmt 0 view .LVU509
 1644 04ce B604     		lsls	r6, r6, #18
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1645              		.loc 1 485 9 view .LVU510
 1646 04d0 2840     		ands	r0, r5
 1647 04d2 0143     		orrs	r1, r0
 1648 04d4 6160     		str	r1, [r4, #4]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 1649              		.loc 1 485 9 is_stmt 1 view .LVU511
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1650              		.loc 1 489 9 view .LVU512
 1651 04d6 8021     		movs	r1, #128
 1652 04d8 2068     		ldr	r0, [r4]
 1653 04da 4904     		lsls	r1, r1, #17
 1654 04dc 0143     		orrs	r1, r0
 1655 04de 2160     		str	r1, [r4]
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1656              		.loc 1 492 9 view .LVU513
 1657              	.LBB199:
 1658              	.LBI199:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1659              		.loc 1 48 10 view .LVU514
 1660              	.LBB200:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1661              		.loc 1 50 2 view .LVU515
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1662              		.loc 1 51 2 view .LVU516
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1663              		.loc 1 51 13 is_stmt 0 view .LVU517
 1664 04e0 591C     		adds	r1, r3, #1
 1665              	.LBE200:
 1666              	.LBE199:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1667              		.loc 1 495 14 view .LVU518
 1668 04e2 0025     		movs	r5, #0
 1669              	.LBB202:
 1670              	.LBB201:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1671              		.loc 1 51 13 view .LVU519
 1672 04e4 1160     		str	r1, [r2]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1673              		.loc 1 51 16 is_stmt 1 view .LVU520
 1674              	.LVL52:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1675              		.loc 1 51 16 is_stmt 0 view .LVU521
 1676              	.LBE201:
 1677              	.LBE202:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1678              		.loc 1 495 9 is_stmt 1 view .LVU522
 1679 04e6 0433     		adds	r3, r3, #4
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1680              		.loc 1 495 14 is_stmt 0 view .LVU523
 1681 04e8 03E0     		b	.L80
 1682              	.L81:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1683              		.loc 1 497 11 is_stmt 1 view .LVU524
 1684              	.LBB203:
 1685              	.LBI203:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1686              		.loc 1 48 10 view .LVU525
 1687              	.LBB204:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1688              		.loc 1 50 2 view .LVU526
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1689              		.loc 1 51 2 view .LVU527
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1690              		.loc 1 51 13 is_stmt 0 view .LVU528
 1691 04ea 0131     		adds	r1, r1, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1692              		.loc 1 51 16 is_stmt 1 view .LVU529
 1693 04ec 0125     		movs	r5, #1
 1694              	.LBE204:
 1695              	.LBE203:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1696              		.loc 1 497 13 is_stmt 0 view .LVU530
 1697 04ee 9942     		cmp	r1, r3
 1698 04f0 16D0     		beq	.L175
 1699              	.L80:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1700              		.loc 1 495 14 is_stmt 1 view .LVU531
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1701              		.loc 1 495 15 is_stmt 0 view .LVU532
 1702 04f2 2068     		ldr	r0, [r4]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1703              		.loc 1 495 14 view .LVU533
 1704 04f4 3042     		tst	r0, r6
 1705 04f6 F8D0     		beq	.L81
 1706 04f8 002D     		cmp	r5, #0
 1707 04fa 00D1     		bne	.LCB1446
 1708 04fc B5E6     		b	.L75	@long jump
 1709              	.LCB1446:
 1710 04fe 1160     		str	r1, [r2]
 1711 0500 B3E6     		b	.L75
 1712              	.LVL53:
 1713              	.L173:
 391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1714              		.loc 1 391 18 view .LVU534
 1715 0502 0320     		movs	r0, #3
 1716 0504 1560     		str	r5, [r2]
 1717 0506 B1E6     		b	.L14
 1718              	.LVL54:
 1719              	.L166:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1720              		.loc 1 123 7 is_stmt 1 discriminator 7 view .LVU535
 1721 0508 8022     		movs	r2, #128
 1722 050a 074B     		ldr	r3, .L178
 1723 050c D202     		lsls	r2, r2, #11
 1724 050e 1C68     		ldr	r4, [r3]
 1725 0510 2243     		orrs	r2, r4
 1726 0512 1A60     		str	r2, [r3]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1727              		.loc 1 123 7 discriminator 7 view .LVU536
 1728 0514 8022     		movs	r2, #128
 1729 0516 1C68     		ldr	r4, [r3]
 1730 0518 5202     		lsls	r2, r2, #9
 1731 051a 2243     		orrs	r2, r4
 1732 051c 1A60     		str	r2, [r3]
 1733 051e 99E5     		b	.L16
 1734              	.LVL55:
 1735              	.L175:
 499:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 1736              		.loc 1 499 20 is_stmt 0 view .LVU537
 1737 0520 0320     		movs	r0, #3
 1738 0522 1160     		str	r1, [r2]
 1739 0524 A2E6     		b	.L14
 1740              	.L179:
 1741 0526 C046     		.align	2
 1742              	.L178:
 1743 0528 00100240 		.word	1073876992
 1744 052c FFFFFEFF 		.word	-65537
 1745 0530 FFFFFBFF 		.word	-262145
 1746 0534 00000000 		.word	.LANCHOR0
 1747 0538 8A130000 		.word	5002
 1748 053c FFFFFFFE 		.word	-16777217
 1749 0540 FFFFC2FF 		.word	-3997697
 1750              		.cfi_endproc
 1751              	.LFE41:
 1753              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1754              		.align	1
 1755              		.p2align 2,,3
 1756              		.global	HAL_RCC_ClockConfig
 1757              		.syntax unified
 1758              		.code	16
 1759              		.thumb_func
 1760              		.fpu softvfp
 1762              	HAL_RCC_ClockConfig:
 1763              	.LVL56:
 1764              	.LFB42:
 529:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 530:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 531:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 532:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 533:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 534:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 535:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 536:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 537:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 538:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 539:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
 540:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 541:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 542:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 543:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 544:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *           
 545:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 546:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 547:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 548:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 549:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 550:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         currently used as system clock source.
 551:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
 552:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 553:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1765              		.loc 1 554 1 is_stmt 1 view -0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 0
 1768              		@ frame_needed = 0, uses_anonymous_args = 0
 555:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1769              		.loc 1 555 3 view .LVU539
 556:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 557:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 558:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1770              		.loc 1 558 3 view .LVU540
 559:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1771              		.loc 1 559 3 view .LVU541
 560:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1772              		.loc 1 560 3 view .LVU542
 561:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 562:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 563:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 564:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     (HCLK) of the device. */
 565:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 566:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 567:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1773              		.loc 1 567 3 view .LVU543
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1774              		.loc 1 554 1 is_stmt 0 view .LVU544
 1775 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1776              	.LCFI3:
 1777              		.cfi_def_cfa_offset 20
 1778              		.cfi_offset 4, -20
 1779              		.cfi_offset 5, -16
 1780              		.cfi_offset 6, -12
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783              		.loc 1 567 29 view .LVU545
 1784 0002 0123     		movs	r3, #1
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1785              		.loc 1 554 1 view .LVU546
 1786 0004 CE46     		mov	lr, r9
 1787 0006 4746     		mov	r7, r8
 1788              		.loc 1 567 23 view .LVU547
 1789 0008 594C     		ldr	r4, .L236
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1790              		.loc 1 554 1 view .LVU548
 1791 000a 80B5     		push	{r7, lr}
 1792              	.LCFI4:
 1793              		.cfi_def_cfa_offset 28
 1794              		.cfi_offset 8, -28
 1795              		.cfi_offset 9, -24
 1796              		.loc 1 567 23 view .LVU549
 1797 000c 2268     		ldr	r2, [r4]
 1798              		.loc 1 567 29 view .LVU550
 1799 000e 1A40     		ands	r2, r3
 1800              		.loc 1 567 5 view .LVU551
 1801 0010 8A42     		cmp	r2, r1
 1802 0012 09D2     		bcs	.L184
 568:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 569:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1803              		.loc 1 570 5 is_stmt 1 view .LVU552
 1804 0014 2268     		ldr	r2, [r4]
 1805 0016 9A43     		bics	r2, r3
 1806 0018 0A43     		orrs	r2, r1
 1807 001a 2260     		str	r2, [r4]
 571:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 572:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 573:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1808              		.loc 1 574 5 view .LVU553
 1809              		.loc 1 574 14 is_stmt 0 view .LVU554
 1810 001c 2268     		ldr	r2, [r4]
 1811              		.loc 1 574 20 view .LVU555
 1812 001e 1340     		ands	r3, r2
 1813              		.loc 1 574 7 view .LVU556
 1814 0020 8B42     		cmp	r3, r1
 1815 0022 01D0     		beq	.L184
 1816              	.L189:
 575:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 1817              		.loc 1 576 14 view .LVU557
 1818 0024 0120     		movs	r0, #1
 1819              	.LVL57:
 1820              		.loc 1 576 14 view .LVU558
 1821 0026 4AE0     		b	.L226
 1822              	.LVL58:
 1823              	.L184:
 577:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 578:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 579:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 580:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 581:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1824              		.loc 1 581 3 is_stmt 1 view .LVU559
 1825              		.loc 1 581 25 is_stmt 0 view .LVU560
 1826 0028 0268     		ldr	r2, [r0]
 1827              		.loc 1 581 5 view .LVU561
 1828 002a 9307     		lsls	r3, r2, #30
 1829 002c 06D5     		bpl	.L183
 582:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 1830              		.loc 1 583 5 is_stmt 1 view .LVU562
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1831              		.loc 1 584 5 view .LVU563
 1832 002e F025     		movs	r5, #240
 1833 0030 504C     		ldr	r4, .L236+4
 1834 0032 6368     		ldr	r3, [r4, #4]
 1835 0034 AB43     		bics	r3, r5
 1836 0036 8568     		ldr	r5, [r0, #8]
 1837 0038 2B43     		orrs	r3, r5
 1838 003a 6360     		str	r3, [r4, #4]
 1839              	.L183:
 585:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 586:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 587:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 588:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1840              		.loc 1 588 3 view .LVU564
 1841              		.loc 1 588 5 is_stmt 0 view .LVU565
 1842 003c D307     		lsls	r3, r2, #31
 1843 003e 2AD5     		bpl	.L187
 589:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 1844              		.loc 1 590 5 is_stmt 1 view .LVU566
 591:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 592:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1845              		.loc 1 593 5 view .LVU567
 594:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 595:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1846              		.loc 1 596 10 is_stmt 0 view .LVU568
 1847 0040 4C4D     		ldr	r5, .L236+4
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1848              		.loc 1 593 25 view .LVU569
 1849 0042 4368     		ldr	r3, [r0, #4]
 1850              		.loc 1 596 10 view .LVU570
 1851 0044 2C68     		ldr	r4, [r5]
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1852              		.loc 1 593 7 view .LVU571
 1853 0046 012B     		cmp	r3, #1
 1854 0048 69D0     		beq	.L233
 597:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 598:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 599:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 600:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 601:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1855              		.loc 1 602 10 is_stmt 1 view .LVU572
 1856              		.loc 1 602 12 is_stmt 0 view .LVU573
 1857 004a 022B     		cmp	r3, #2
 1858 004c 43D0     		beq	.L234
 603:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 604:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 606:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 607:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 608:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 609:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 610:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 611:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI48 is selected as System Clock Source */
 612:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 613:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 614:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 ready flag */
 615:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 616:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 617:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 618:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 619:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 620:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 621:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 622:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 623:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1859              		.loc 1 625 7 is_stmt 1 view .LVU574
 1860              		.loc 1 625 9 is_stmt 0 view .LVU575
 1861 004e A407     		lsls	r4, r4, #30
 1862 0050 E8D5     		bpl	.L189
 626:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 627:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 628:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 629:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1863              		.loc 1 630 5 is_stmt 1 view .LVU576
 1864 0052 0326     		movs	r6, #3
 1865 0054 6C68     		ldr	r4, [r5, #4]
 1866 0056 B443     		bics	r4, r6
 1867 0058 2343     		orrs	r3, r4
 1868 005a 6B60     		str	r3, [r5, #4]
 631:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 632:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get Start Tick */
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 1869              		.loc 1 633 5 view .LVU577
 1870              	.LBB205:
 1871              	.LBI205:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1872              		.loc 1 48 10 view .LVU578
 1873              	.LBB206:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1874              		.loc 1 50 2 view .LVU579
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1875              		.loc 1 51 2 view .LVU580
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1876              		.loc 1 51 13 is_stmt 0 view .LVU581
 1877 005c 464B     		ldr	r3, .L236+8
 1878 005e 9946     		mov	r9, r3
 1879 0060 4C46     		mov	r4, r9
 1880 0062 1F68     		ldr	r7, [r3]
 1881 0064 7B1C     		adds	r3, r7, #1
 1882 0066 2360     		str	r3, [r4]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1883              		.loc 1 51 16 is_stmt 1 view .LVU582
 1884              	.LVL59:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1885              		.loc 1 51 16 is_stmt 0 view .LVU583
 1886              	.LBE206:
 1887              	.LBE205:
 634:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1888              		.loc 1 635 5 is_stmt 1 view .LVU584
 636:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 638:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 640:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 642:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 643:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 644:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1889              		.loc 1 645 10 view .LVU585
 1890 0068 444C     		ldr	r4, .L236+12
 1891 006a A446     		mov	ip, r4
 1892              	.LBB212:
 1893              	.LBB207:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1894              		.loc 1 51 13 is_stmt 0 view .LVU586
 1895 006c 0024     		movs	r4, #0
 1896 006e A046     		mov	r8, r4
 1897              	.LBE207:
 1898              	.LBE212:
 646:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 648:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 650:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 652:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 653:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 654:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 655:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 656:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 657:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 658:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 659:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 660:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 661:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 662:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 663:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 664:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 665:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 666:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 667:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 668:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1899              		.loc 1 669 14 view .LVU587
 1900 0070 0C34     		adds	r4, r4, #12
 1901 0072 6744     		add	r7, r7, ip
 1902              	.LVL60:
 1903              		.loc 1 669 14 view .LVU588
 1904 0074 A446     		mov	ip, r4
 1905 0076 05E0     		b	.L199
 1906              	.L200:
 670:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1907              		.loc 1 671 9 is_stmt 1 view .LVU589
 1908              	.LBB213:
 1909              	.LBI213:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1910              		.loc 1 48 10 view .LVU590
 1911              	.LBB214:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 1912              		.loc 1 50 2 view .LVU591
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1913              		.loc 1 51 2 view .LVU592
 1914 0078 0124     		movs	r4, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1915              		.loc 1 51 13 is_stmt 0 view .LVU593
 1916 007a 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1917              		.loc 1 51 16 is_stmt 1 view .LVU594
 1918 007c A046     		mov	r8, r4
 1919              	.LBE214:
 1920              	.LBE213:
 1921              		.loc 1 671 11 is_stmt 0 view .LVU595
 1922 007e BB42     		cmp	r3, r7
 1923 0080 00D1     		bne	.LCB1641
 1924 0082 70E0     		b	.L235	@long jump
 1925              	.LCB1641:
 1926              	.L199:
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1927              		.loc 1 669 13 is_stmt 1 view .LVU596
 1928 0084 6646     		mov	r6, ip
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1929              		.loc 1 669 14 is_stmt 0 view .LVU597
 1930 0086 6C68     		ldr	r4, [r5, #4]
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1931              		.loc 1 669 13 view .LVU598
 1932 0088 2642     		tst	r6, r4
 1933 008a F5D1     		bne	.L200
 1934 008c 4446     		mov	r4, r8
 1935 008e 002C     		cmp	r4, #0
 1936 0090 01D0     		beq	.L187
 1937 0092 4C46     		mov	r4, r9
 1938 0094 2360     		str	r3, [r4]
 1939              	.LVL61:
 1940              	.L187:
 672:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 674:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 675:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 676:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }      
 677:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 678:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 679:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1941              		.loc 1 679 3 is_stmt 1 view .LVU599
 1942              		.loc 1 679 29 is_stmt 0 view .LVU600
 1943 0096 0125     		movs	r5, #1
 1944              		.loc 1 679 23 view .LVU601
 1945 0098 354C     		ldr	r4, .L236
 1946 009a 2368     		ldr	r3, [r4]
 1947              		.loc 1 679 29 view .LVU602
 1948 009c 2B40     		ands	r3, r5
 1949              		.loc 1 679 5 view .LVU603
 1950 009e 8B42     		cmp	r3, r1
 1951 00a0 11D8     		bhi	.L201
 1952              	.L204:
 680:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 681:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 683:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 684:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 685:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 687:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 688:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 689:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 690:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 691:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 692:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 693:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1953              		.loc 1 693 3 is_stmt 1 view .LVU604
 1954              		.loc 1 693 5 is_stmt 0 view .LVU605
 1955 00a2 5307     		lsls	r3, r2, #29
 1956 00a4 06D5     		bpl	.L203
 694:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 1957              		.loc 1 695 5 is_stmt 1 view .LVU606
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1958              		.loc 1 696 5 view .LVU607
 1959 00a6 334A     		ldr	r2, .L236+4
 1960 00a8 3549     		ldr	r1, .L236+16
 1961              	.LVL62:
 1962              		.loc 1 696 5 is_stmt 0 view .LVU608
 1963 00aa 5368     		ldr	r3, [r2, #4]
 1964 00ac 0B40     		ands	r3, r1
 1965 00ae C168     		ldr	r1, [r0, #12]
 1966 00b0 0B43     		orrs	r3, r1
 1967 00b2 5360     		str	r3, [r2, #4]
 1968              	.L203:
 697:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 698:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 699:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 700:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   SystemCoreClock = 7372800;
 1969              		.loc 1 701 3 is_stmt 1 view .LVU609
 1970              		.loc 1 701 19 is_stmt 0 view .LVU610
 1971 00b4 E122     		movs	r2, #225
 702:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 703:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 704:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 705:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 706:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1972              		.loc 1 706 10 view .LVU611
 1973 00b6 0020     		movs	r0, #0
 1974              	.LVL63:
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1975              		.loc 1 701 19 view .LVU612
 1976 00b8 324B     		ldr	r3, .L236+20
 1977 00ba D203     		lsls	r2, r2, #15
 1978 00bc 1A60     		str	r2, [r3]
 1979              		.loc 1 706 3 is_stmt 1 view .LVU613
 1980              	.L226:
 707:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1981              		.loc 1 707 1 is_stmt 0 view .LVU614
 1982              		@ sp needed
 1983 00be 0CBC     		pop	{r2, r3}
 1984 00c0 9046     		mov	r8, r2
 1985 00c2 9946     		mov	r9, r3
 1986 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1987              	.LVL64:
 1988              	.L201:
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1989              		.loc 1 682 5 is_stmt 1 view .LVU615
 1990 00c6 2368     		ldr	r3, [r4]
 1991 00c8 AB43     		bics	r3, r5
 1992 00ca 2360     		str	r3, [r4]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1993              		.loc 1 686 5 view .LVU616
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1994              		.loc 1 686 14 is_stmt 0 view .LVU617
 1995 00cc 2368     		ldr	r3, [r4]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1996              		.loc 1 686 7 view .LVU618
 1997 00ce 1D42     		tst	r5, r3
 1998 00d0 E7D0     		beq	.L204
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1999              		.loc 1 576 14 view .LVU619
 2000 00d2 0120     		movs	r0, #1
 2001              	.LVL65:
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 2002              		.loc 1 576 14 view .LVU620
 2003 00d4 F3E7     		b	.L226
 2004              	.LVL66:
 2005              	.L234:
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2006              		.loc 1 605 7 is_stmt 1 view .LVU621
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2007              		.loc 1 605 9 is_stmt 0 view .LVU622
 2008 00d6 A401     		lsls	r4, r4, #6
 2009 00d8 A4D5     		bpl	.L189
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2010              		.loc 1 630 5 is_stmt 1 view .LVU623
 2011 00da 0326     		movs	r6, #3
 2012 00dc 6C68     		ldr	r4, [r5, #4]
 2013 00de B443     		bics	r4, r6
 2014 00e0 2343     		orrs	r3, r4
 2015 00e2 6B60     		str	r3, [r5, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2016              		.loc 1 633 5 view .LVU624
 2017              	.LBB215:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2018              		.loc 1 48 10 view .LVU625
 2019              	.LBB208:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2020              		.loc 1 50 2 view .LVU626
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2021              		.loc 1 51 2 view .LVU627
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2022              		.loc 1 51 13 is_stmt 0 view .LVU628
 2023 00e4 244B     		ldr	r3, .L236+8
 2024 00e6 1F68     		ldr	r7, [r3]
 2025 00e8 9946     		mov	r9, r3
 2026 00ea 7C1C     		adds	r4, r7, #1
 2027 00ec 1C60     		str	r4, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2028              		.loc 1 51 16 is_stmt 1 view .LVU629
 2029              	.LVL67:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2030              		.loc 1 51 16 is_stmt 0 view .LVU630
 2031              	.LBE208:
 2032              	.LBE215:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2033              		.loc 1 635 5 is_stmt 1 view .LVU631
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2034              		.loc 1 645 10 view .LVU632
 2035 00ee 234B     		ldr	r3, .L236+12
 2036 00f0 9C46     		mov	ip, r3
 2037              	.LBB216:
 2038              	.LBB209:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2039              		.loc 1 51 13 is_stmt 0 view .LVU633
 2040 00f2 0023     		movs	r3, #0
 2041 00f4 9846     		mov	r8, r3
 2042              	.LBE209:
 2043              	.LBE216:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2044              		.loc 1 647 14 view .LVU634
 2045 00f6 0C33     		adds	r3, r3, #12
 2046 00f8 6744     		add	r7, r7, ip
 2047              	.LVL68:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2048              		.loc 1 647 14 view .LVU635
 2049 00fa 9C46     		mov	ip, r3
 2050 00fc 04E0     		b	.L197
 2051              	.L198:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2052              		.loc 1 649 9 is_stmt 1 view .LVU636
 2053              	.LBB217:
 2054              	.LBI217:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2055              		.loc 1 48 10 view .LVU637
 2056              	.LBB218:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2057              		.loc 1 50 2 view .LVU638
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2058              		.loc 1 51 2 view .LVU639
 2059 00fe 0123     		movs	r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2060              		.loc 1 51 13 is_stmt 0 view .LVU640
 2061 0100 0134     		adds	r4, r4, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2062              		.loc 1 51 16 is_stmt 1 view .LVU641
 2063 0102 9846     		mov	r8, r3
 2064              	.LBE218:
 2065              	.LBE217:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2066              		.loc 1 649 11 is_stmt 0 view .LVU642
 2067 0104 BC42     		cmp	r4, r7
 2068 0106 2AD0     		beq	.L232
 2069              	.L197:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2070              		.loc 1 647 13 is_stmt 1 view .LVU643
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2071              		.loc 1 647 14 is_stmt 0 view .LVU644
 2072 0108 6646     		mov	r6, ip
 2073 010a 6B68     		ldr	r3, [r5, #4]
 2074 010c 3340     		ands	r3, r6
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2075              		.loc 1 647 13 view .LVU645
 2076 010e 082B     		cmp	r3, #8
 2077 0110 F5D1     		bne	.L198
 2078              	.LVL69:
 2079              	.L231:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2080              		.loc 1 647 13 view .LVU646
 2081 0112 4346     		mov	r3, r8
 2082 0114 002B     		cmp	r3, #0
 2083 0116 BED0     		beq	.L187
 2084 0118 4B46     		mov	r3, r9
 2085 011a 1C60     		str	r4, [r3]
 2086 011c BBE7     		b	.L187
 2087              	.LVL70:
 2088              	.L233:
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2089              		.loc 1 596 7 is_stmt 1 view .LVU647
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2090              		.loc 1 596 9 is_stmt 0 view .LVU648
 2091 011e A403     		lsls	r4, r4, #14
 2092 0120 00D4     		bmi	.LCB1810
 2093 0122 7FE7     		b	.L189	@long jump
 2094              	.LCB1810:
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2095              		.loc 1 630 5 is_stmt 1 view .LVU649
 2096 0124 0326     		movs	r6, #3
 2097 0126 6C68     		ldr	r4, [r5, #4]
 2098 0128 B443     		bics	r4, r6
 2099 012a 2343     		orrs	r3, r4
 2100 012c 6B60     		str	r3, [r5, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2101              		.loc 1 633 5 view .LVU650
 2102              	.LBB219:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2103              		.loc 1 48 10 view .LVU651
 2104              	.LBB210:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2105              		.loc 1 50 2 view .LVU652
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2106              		.loc 1 51 2 view .LVU653
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2107              		.loc 1 51 13 is_stmt 0 view .LVU654
 2108 012e 124B     		ldr	r3, .L236+8
 2109 0130 1F68     		ldr	r7, [r3]
 2110 0132 9946     		mov	r9, r3
 2111 0134 7C1C     		adds	r4, r7, #1
 2112 0136 1C60     		str	r4, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2113              		.loc 1 51 16 is_stmt 1 view .LVU655
 2114              	.LVL71:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2115              		.loc 1 51 16 is_stmt 0 view .LVU656
 2116              	.LBE210:
 2117              	.LBE219:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2118              		.loc 1 635 5 is_stmt 1 view .LVU657
 2119 0138 104B     		ldr	r3, .L236+12
 2120 013a 9C46     		mov	ip, r3
 2121              	.LBB220:
 2122              	.LBB211:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2123              		.loc 1 51 13 is_stmt 0 view .LVU658
 2124 013c 0023     		movs	r3, #0
 2125 013e 9846     		mov	r8, r3
 2126              	.LBE211:
 2127              	.LBE220:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2128              		.loc 1 637 14 view .LVU659
 2129 0140 0C33     		adds	r3, r3, #12
 2130 0142 6744     		add	r7, r7, ip
 2131              	.LVL72:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2132              		.loc 1 637 14 view .LVU660
 2133 0144 9C46     		mov	ip, r3
 2134 0146 04E0     		b	.L194
 2135              	.L195:
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2136              		.loc 1 639 9 is_stmt 1 view .LVU661
 2137              	.LBB221:
 2138              	.LBI221:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2139              		.loc 1 48 10 view .LVU662
 2140              	.LBB222:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2141              		.loc 1 50 2 view .LVU663
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2142              		.loc 1 51 2 view .LVU664
 2143 0148 0123     		movs	r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2144              		.loc 1 51 13 is_stmt 0 view .LVU665
 2145 014a 0134     		adds	r4, r4, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2146              		.loc 1 51 16 is_stmt 1 view .LVU666
 2147 014c 9846     		mov	r8, r3
 2148              	.LBE222:
 2149              	.LBE221:
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2150              		.loc 1 639 11 is_stmt 0 view .LVU667
 2151 014e BC42     		cmp	r4, r7
 2152 0150 05D0     		beq	.L232
 2153              	.L194:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2154              		.loc 1 637 13 is_stmt 1 view .LVU668
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2155              		.loc 1 637 14 is_stmt 0 view .LVU669
 2156 0152 6646     		mov	r6, ip
 2157 0154 6B68     		ldr	r3, [r5, #4]
 2158 0156 3340     		ands	r3, r6
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2159              		.loc 1 637 13 view .LVU670
 2160 0158 042B     		cmp	r3, #4
 2161 015a F5D1     		bne	.L195
 2162 015c D9E7     		b	.L231
 2163              	.LVL73:
 2164              	.L232:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2165              		.loc 1 637 13 view .LVU671
 2166 015e 4B46     		mov	r3, r9
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2167              		.loc 1 651 18 view .LVU672
 2168 0160 0320     		movs	r0, #3
 2169              	.LVL74:
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2170              		.loc 1 651 18 view .LVU673
 2171 0162 1C60     		str	r4, [r3]
 2172 0164 ABE7     		b	.L226
 2173              	.LVL75:
 2174              	.L235:
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2175              		.loc 1 651 18 view .LVU674
 2176 0166 4A46     		mov	r2, r9
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2177              		.loc 1 673 18 view .LVU675
 2178 0168 0320     		movs	r0, #3
 2179              	.LVL76:
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2180              		.loc 1 673 18 view .LVU676
 2181 016a 1360     		str	r3, [r2]
 2182 016c A7E7     		b	.L226
 2183              	.L237:
 2184 016e C046     		.align	2
 2185              	.L236:
 2186 0170 00200240 		.word	1073881088
 2187 0174 00100240 		.word	1073876992
 2188 0178 00000000 		.word	.LANCHOR0
 2189 017c 8A130000 		.word	5002
 2190 0180 FFF8FFFF 		.word	-1793
 2191 0184 00000000 		.word	.LANCHOR1
 2192              		.cfi_endproc
 2193              	.LFE42:
 2195              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
 2196              		.align	1
 2197              		.p2align 2,,3
 2198              		.global	HAL_RCCEx_PeriphCLKConfig
 2199              		.syntax unified
 2200              		.code	16
 2201              		.thumb_func
 2202              		.fpu softvfp
 2204              	HAL_RCCEx_PeriphCLKConfig:
 2205              	.LVL77:
 2206              	.LFB43:
 708:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 709:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2207              		.loc 1 710 1 is_stmt 1 view -0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 8
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 711:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 2211              		.loc 1 711 3 view .LVU678
 712:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp_reg = 0U;
 2212              		.loc 1 712 3 view .LVU679
 713:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 714:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 715:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 2213              		.loc 1 715 3 view .LVU680
 716:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 717:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*---------------------------- RTC configuration -------------------------------*/
 718:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 2214              		.loc 1 718 3 view .LVU681
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 2215              		.loc 1 710 1 is_stmt 0 view .LVU682
 2216 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2217              	.LCFI5:
 2218              		.cfi_def_cfa_offset 20
 2219              		.cfi_offset 4, -20
 2220              		.cfi_offset 5, -16
 2221              		.cfi_offset 6, -12
 2222              		.cfi_offset 7, -8
 2223              		.cfi_offset 14, -4
 2224 0002 D646     		mov	lr, r10
 2225 0004 4F46     		mov	r7, r9
 2226 0006 4646     		mov	r6, r8
 2227 0008 C0B5     		push	{r6, r7, lr}
 2228              	.LCFI6:
 2229              		.cfi_def_cfa_offset 32
 2230              		.cfi_offset 8, -32
 2231              		.cfi_offset 9, -28
 2232              		.cfi_offset 10, -24
 2233              		.loc 1 718 21 view .LVU683
 2234 000a 0568     		ldr	r5, [r0]
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 2235              		.loc 1 710 1 view .LVU684
 2236 000c 0200     		movs	r2, r0
 2237 000e 82B0     		sub	sp, sp, #8
 2238              	.LCFI7:
 2239              		.cfi_def_cfa_offset 40
 2240              		.loc 1 718 5 view .LVU685
 2241 0010 EB03     		lsls	r3, r5, #15
 2242 0012 72D5     		bpl	.L240
 2243              	.LBB223:
 719:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 720:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* check for RTC Parameters used to output RTCCLK */
 721:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 2244              		.loc 1 721 5 is_stmt 1 view .LVU686
 722:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 2245              		.loc 1 723 5 view .LVU687
 2246              	.LVL78:
 724:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 725:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* As soon as function is called to change RTC clock source, activation of the 
 726:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        power domain is done. */
 727:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 728:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 2247              		.loc 1 728 5 view .LVU688
 2248              		.loc 1 728 8 is_stmt 0 view .LVU689
 2249 0014 8021     		movs	r1, #128
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2250              		.loc 1 723 22 view .LVU690
 2251 0016 0024     		movs	r4, #0
 2252              		.loc 1 728 8 view .LVU691
 2253 0018 484B     		ldr	r3, .L274
 2254 001a 4905     		lsls	r1, r1, #21
 2255 001c D869     		ldr	r0, [r3, #28]
 2256              	.LVL79:
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2257              		.loc 1 723 22 view .LVU692
 2258 001e A046     		mov	r8, r4
 2259              		.loc 1 728 7 view .LVU693
 2260 0020 0842     		tst	r0, r1
 2261 0022 08D1     		bne	.L241
 729:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 730:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 2262              		.loc 1 730 5 is_stmt 1 view .LVU694
 2263              	.LBB224:
 2264              		.loc 1 730 5 view .LVU695
 2265              		.loc 1 730 5 view .LVU696
 2266 0024 D869     		ldr	r0, [r3, #28]
 2267 0026 0843     		orrs	r0, r1
 2268 0028 D861     		str	r0, [r3, #28]
 2269              		.loc 1 730 5 view .LVU697
 2270 002a DB69     		ldr	r3, [r3, #28]
 2271 002c 1940     		ands	r1, r3
 2272 002e 0191     		str	r1, [sp, #4]
 2273              		.loc 1 730 5 view .LVU698
 2274 0030 019B     		ldr	r3, [sp, #4]
 2275              	.LBE224:
 2276              		.loc 1 730 5 view .LVU699
 731:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 2277              		.loc 1 731 7 view .LVU700
 2278              	.LVL80:
 2279              		.loc 1 731 21 is_stmt 0 view .LVU701
 2280 0032 0123     		movs	r3, #1
 2281 0034 9846     		mov	r8, r3
 2282              	.LVL81:
 2283              	.L241:
 732:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 733:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 734:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2284              		.loc 1 734 5 is_stmt 1 view .LVU702
 2285              		.loc 1 734 8 is_stmt 0 view .LVU703
 2286 0036 8024     		movs	r4, #128
 2287 0038 4148     		ldr	r0, .L274+4
 2288 003a 6400     		lsls	r4, r4, #1
 2289 003c 0368     		ldr	r3, [r0]
 2290              		.loc 1 734 7 view .LVU704
 2291 003e 2342     		tst	r3, r4
 2292 0040 16D1     		bne	.L243
 735:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 736:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 2293              		.loc 1 737 7 is_stmt 1 view .LVU705
 2294 0042 0368     		ldr	r3, [r0]
 738:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 739:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 741:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2295              		.loc 1 742 12 is_stmt 0 view .LVU706
 2296 0044 0027     		movs	r7, #0
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 2297              		.loc 1 737 7 view .LVU707
 2298 0046 2343     		orrs	r3, r4
 2299 0048 0360     		str	r3, [r0]
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 2300              		.loc 1 740 7 is_stmt 1 view .LVU708
 2301              	.LBB225:
 2302              	.LBI225:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2303              		.loc 1 48 10 view .LVU709
 2304              	.LBB226:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2305              		.loc 1 50 2 view .LVU710
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2306              		.loc 1 51 2 view .LVU711
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2307              		.loc 1 51 13 is_stmt 0 view .LVU712
 2308 004a 3E4B     		ldr	r3, .L274+8
 2309 004c 9C46     		mov	ip, r3
 2310 004e 6146     		mov	r1, ip
 2311 0050 1E68     		ldr	r6, [r3]
 2312 0052 731C     		adds	r3, r6, #1
 2313 0054 0B60     		str	r3, [r1]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2314              		.loc 1 51 16 is_stmt 1 view .LVU713
 2315              	.LVL82:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2316              		.loc 1 51 16 is_stmt 0 view .LVU714
 2317              	.LBE226:
 2318              	.LBE225:
 2319              		.loc 1 742 7 is_stmt 1 view .LVU715
 2320 0056 6636     		adds	r6, r6, #102
 2321              	.LVL83:
 2322              		.loc 1 742 12 is_stmt 0 view .LVU716
 2323 0058 03E0     		b	.L244
 2324              	.L246:
 743:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2325              		.loc 1 744 9 is_stmt 1 view .LVU717
 2326              	.LBB227:
 2327              	.LBI227:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2328              		.loc 1 48 10 view .LVU718
 2329              	.LBB228:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2330              		.loc 1 50 2 view .LVU719
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2331              		.loc 1 51 2 view .LVU720
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2332              		.loc 1 51 13 is_stmt 0 view .LVU721
 2333 005a 0133     		adds	r3, r3, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2334              		.loc 1 51 16 is_stmt 1 view .LVU722
 2335 005c 0127     		movs	r7, #1
 2336              	.LBE228:
 2337              	.LBE227:
 2338              		.loc 1 744 11 is_stmt 0 view .LVU723
 2339 005e B342     		cmp	r3, r6
 2340 0060 64D0     		beq	.L271
 2341              	.L244:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2342              		.loc 1 742 12 is_stmt 1 view .LVU724
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2343              		.loc 1 742 13 is_stmt 0 view .LVU725
 2344 0062 0168     		ldr	r1, [r0]
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2345              		.loc 1 742 12 view .LVU726
 2346 0064 2142     		tst	r1, r4
 2347 0066 F8D0     		beq	.L246
 2348 0068 002F     		cmp	r7, #0
 2349 006a 01D0     		beq	.L243
 2350 006c 6146     		mov	r1, ip
 2351 006e 0B60     		str	r3, [r1]
 2352              	.LVL84:
 2353              	.L243:
 745:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 747:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 748:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 749:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 750:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 751:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 2354              		.loc 1 752 5 is_stmt 1 view .LVU727
 2355              		.loc 1 752 20 is_stmt 0 view .LVU728
 2356 0070 324B     		ldr	r3, .L274
 2357              		.loc 1 752 14 view .LVU729
 2358 0072 C021     		movs	r1, #192
 2359              		.loc 1 752 20 view .LVU730
 2360 0074 186A     		ldr	r0, [r3, #32]
 2361              		.loc 1 752 14 view .LVU731
 2362 0076 8900     		lsls	r1, r1, #2
 2363 0078 0400     		movs	r4, r0
 2364 007a 0C40     		ands	r4, r1
 2365              	.LVL85:
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 2366              		.loc 1 753 5 is_stmt 1 view .LVU732
 2367              		.loc 1 753 7 is_stmt 0 view .LVU733
 2368 007c 0842     		tst	r0, r1
 2369 007e 2ED0     		beq	.L272
 2370              		.loc 1 753 64 discriminator 1 view .LVU734
 2371 0080 5068     		ldr	r0, [r2, #4]
 2372              		.loc 1 753 84 discriminator 1 view .LVU735
 2373 0082 0140     		ands	r1, r0
 2374              		.loc 1 753 34 discriminator 1 view .LVU736
 2375 0084 A142     		cmp	r1, r4
 2376 0086 2BD0     		beq	.L249
 754:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 755:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 2377              		.loc 1 756 7 is_stmt 1 view .LVU737
 757:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 2378              		.loc 1 758 7 is_stmt 0 view .LVU738
 2379 0088 8024     		movs	r4, #128
 2380              	.LVL86:
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 2381              		.loc 1 756 22 view .LVU739
 2382 008a 1E6A     		ldr	r6, [r3, #32]
 2383              		.loc 1 758 7 view .LVU740
 2384 008c 1F6A     		ldr	r7, [r3, #32]
 2385 008e 6402     		lsls	r4, r4, #9
 2386 0090 3C43     		orrs	r4, r7
 2387 0092 1C62     		str	r4, [r3, #32]
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 2388              		.loc 1 759 7 view .LVU741
 2389 0094 1C6A     		ldr	r4, [r3, #32]
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 2390              		.loc 1 756 16 view .LVU742
 2391 0096 2C49     		ldr	r1, .L274+12
 2392              		.loc 1 759 7 view .LVU743
 2393 0098 2C4F     		ldr	r7, .L274+16
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 2394              		.loc 1 756 16 view .LVU744
 2395 009a 3140     		ands	r1, r6
 2396              	.LVL87:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 2397              		.loc 1 758 7 is_stmt 1 view .LVU745
 2398              		.loc 1 759 7 view .LVU746
 2399 009c 3C40     		ands	r4, r7
 2400 009e 1C62     		str	r4, [r3, #32]
 760:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       RCC->BDCR = temp_reg;
 2401              		.loc 1 761 7 view .LVU747
 2402              		.loc 1 761 17 is_stmt 0 view .LVU748
 2403 00a0 1962     		str	r1, [r3, #32]
 762:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for LSERDY if LSE was enabled */
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 2404              		.loc 1 764 7 is_stmt 1 view .LVU749
 2405              		.loc 1 764 10 is_stmt 0 view .LVU750
 2406 00a2 F107     		lsls	r1, r6, #31
 2407 00a4 1CD5     		bpl	.L249
 2408              	.LVL88:
 765:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 766:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 2409              		.loc 1 767 9 is_stmt 1 view .LVU751
 2410              	.LBB229:
 2411              	.LBI229:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2412              		.loc 1 48 10 view .LVU752
 2413              	.LBB230:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2414              		.loc 1 50 2 view .LVU753
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2415              		.loc 1 51 2 view .LVU754
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2416              		.loc 1 51 13 is_stmt 0 view .LVU755
 2417 00a6 2749     		ldr	r1, .L274+8
 2418              	.LBE230:
 2419              	.LBE229:
 768:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 769:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till LSE is ready */  
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2420              		.loc 1 770 15 view .LVU756
 2421 00a8 9A46     		mov	r10, r3
 2422              	.LBB233:
 2423              	.LBB231:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2424              		.loc 1 51 13 view .LVU757
 2425 00aa 8C46     		mov	ip, r1
 2426 00ac 6446     		mov	r4, ip
 2427 00ae 0E68     		ldr	r6, [r1]
 2428              	.LBE231:
 2429              	.LBE233:
 2430              		.loc 1 770 15 view .LVU758
 2431 00b0 0223     		movs	r3, #2
 2432              	.LVL89:
 2433              	.LBB234:
 2434              	.LBB232:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2435              		.loc 1 51 13 view .LVU759
 2436 00b2 711C     		adds	r1, r6, #1
 2437 00b4 2160     		str	r1, [r4]
 2438              	.LVL90:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2439              		.loc 1 51 16 is_stmt 1 view .LVU760
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2440              		.loc 1 51 16 is_stmt 0 view .LVU761
 2441              	.LBE232:
 2442              	.LBE234:
 2443              		.loc 1 770 9 is_stmt 1 view .LVU762
 2444 00b6 264C     		ldr	r4, .L274+20
 2445              		.loc 1 770 14 is_stmt 0 view .LVU763
 2446 00b8 0027     		movs	r7, #0
 2447 00ba A146     		mov	r9, r4
 2448 00bc 4E44     		add	r6, r6, r9
 2449              	.LVL91:
 2450              		.loc 1 770 15 view .LVU764
 2451 00be 9946     		mov	r9, r3
 2452              		.loc 1 770 14 view .LVU765
 2453 00c0 03E0     		b	.L250
 2454              	.L251:
 771:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 2455              		.loc 1 772 11 is_stmt 1 view .LVU766
 2456              	.LBB235:
 2457              	.LBI235:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2458              		.loc 1 48 10 view .LVU767
 2459              	.LBB236:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 2460              		.loc 1 50 2 view .LVU768
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2461              		.loc 1 51 2 view .LVU769
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2462              		.loc 1 51 13 is_stmt 0 view .LVU770
 2463 00c2 0131     		adds	r1, r1, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2464              		.loc 1 51 16 is_stmt 1 view .LVU771
 2465 00c4 0127     		movs	r7, #1
 2466              	.LBE236:
 2467              	.LBE235:
 2468              		.loc 1 772 13 is_stmt 0 view .LVU772
 2469 00c6 B142     		cmp	r1, r6
 2470 00c8 34D0     		beq	.L273
 2471              	.L250:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2472              		.loc 1 770 14 is_stmt 1 view .LVU773
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2473              		.loc 1 770 15 is_stmt 0 view .LVU774
 2474 00ca 5346     		mov	r3, r10
 2475 00cc 1C6A     		ldr	r4, [r3, #32]
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2476              		.loc 1 770 14 view .LVU775
 2477 00ce 4B46     		mov	r3, r9
 2478 00d0 2342     		tst	r3, r4
 2479 00d2 F6D0     		beq	.L251
 2480 00d4 002F     		cmp	r7, #0
 2481 00d6 03D0     		beq	.L249
 2482 00d8 6346     		mov	r3, ip
 2483 00da 1960     		str	r1, [r3]
 2484 00dc 00E0     		b	.L249
 2485              	.LVL92:
 2486              	.L272:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2487              		.loc 1 770 14 view .LVU776
 2488 00de 5068     		ldr	r0, [r2, #4]
 2489              	.LVL93:
 2490              	.L249:
 773:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 774:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 775:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 776:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 777:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 778:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 779:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 2491              		.loc 1 779 5 is_stmt 1 view .LVU777
 2492 00e0 1649     		ldr	r1, .L274
 2493 00e2 194C     		ldr	r4, .L274+12
 2494 00e4 0B6A     		ldr	r3, [r1, #32]
 2495 00e6 2340     		ands	r3, r4
 2496 00e8 0343     		orrs	r3, r0
 2497 00ea 0B62     		str	r3, [r1, #32]
 780:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 781:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 782:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 2498              		.loc 1 782 5 view .LVU778
 2499              		.loc 1 782 7 is_stmt 0 view .LVU779
 2500 00ec 4346     		mov	r3, r8
 2501 00ee 012B     		cmp	r3, #1
 2502 00f0 03D1     		bne	.L240
 783:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 784:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 2503              		.loc 1 784 7 is_stmt 1 view .LVU780
 2504 00f2 CB69     		ldr	r3, [r1, #28]
 2505 00f4 1748     		ldr	r0, .L274+24
 2506 00f6 0340     		ands	r3, r0
 2507 00f8 CB61     		str	r3, [r1, #28]
 2508              	.LVL94:
 2509              	.L240:
 2510              		.loc 1 784 7 is_stmt 0 view .LVU781
 2511              	.LBE223:
 785:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 786:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 787:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 788:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- USART1 Configuration ------------------------*/ 
 789:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 2512              		.loc 1 789 3 is_stmt 1 view .LVU782
 2513              		.loc 1 789 5 is_stmt 0 view .LVU783
 2514 00fa EB07     		lsls	r3, r5, #31
 2515 00fc 06D5     		bpl	.L253
 790:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 791:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 792:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 2516              		.loc 1 792 5 is_stmt 1 view .LVU784
 793:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 794:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART1 clock source */
 795:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 2517              		.loc 1 795 5 view .LVU785
 2518 00fe 0320     		movs	r0, #3
 2519 0100 0E49     		ldr	r1, .L274
 2520 0102 0B6B     		ldr	r3, [r1, #48]
 2521 0104 8343     		bics	r3, r0
 2522 0106 9068     		ldr	r0, [r2, #8]
 2523 0108 0343     		orrs	r3, r0
 2524 010a 0B63     		str	r3, [r1, #48]
 2525              	.L253:
 796:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 797:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 798:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 799:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 800:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART2 Configuration --------------------------*/ 
 801:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 802:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 803:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 804:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 805:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 806:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART2 clock source */
 807:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 808:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 809:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 810:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 811:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 812:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 813:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART3 Configuration --------------------------*/ 
 814:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 815:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 816:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 817:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 818:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 819:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART3 clock source */
 820:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 821:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 822:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F091xC || STM32F098xx */  
 823:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 824:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ I2C1 Configuration ------------------------*/ 
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 2526              		.loc 1 825 3 view .LVU786
 826:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 827:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 829:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 830:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the I2C1 clock source */
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 832:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 833:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 834:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 835:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ USB Configuration ------------------------*/ 
 836:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 837:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 838:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 839:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 840:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 841:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USB clock source */
 842:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 843:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 844:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 845:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 846:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 847:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 848:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 849:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 850:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ CEC clock Configuration -------------------*/ 
 851:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 852:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 853:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 854:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 855:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 856:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the CEC clock source */
 857:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 858:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 859:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 860:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F051x8 || STM32F058xx ||                */
 861:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 862:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 863:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 864:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 2527              		.loc 1 864 10 is_stmt 0 view .LVU787
 2528 010c 0020     		movs	r0, #0
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2529              		.loc 1 825 5 view .LVU788
 2530 010e AB06     		lsls	r3, r5, #26
 2531 0110 06D5     		bpl	.L245
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2532              		.loc 1 828 5 is_stmt 1 view .LVU789
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2533              		.loc 1 831 5 view .LVU790
 2534 0112 1024     		movs	r4, #16
 2535 0114 0949     		ldr	r1, .L274
 2536 0116 D268     		ldr	r2, [r2, #12]
 2537              	.LVL95:
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2538              		.loc 1 831 5 is_stmt 0 view .LVU791
 2539 0118 0B6B     		ldr	r3, [r1, #48]
 2540 011a A343     		bics	r3, r4
 2541 011c 1343     		orrs	r3, r2
 2542 011e 0B63     		str	r3, [r1, #48]
 2543              	.L245:
 865:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2544              		.loc 1 865 1 view .LVU792
 2545 0120 02B0     		add	sp, sp, #8
 2546              		@ sp needed
 2547 0122 1CBC     		pop	{r2, r3, r4}
 2548 0124 9046     		mov	r8, r2
 2549 0126 9946     		mov	r9, r3
 2550 0128 A246     		mov	r10, r4
 2551 012a F0BD     		pop	{r4, r5, r6, r7, pc}
 2552              	.LVL96:
 2553              	.L271:
 2554              		.loc 1 865 1 view .LVU793
 2555 012c 6246     		mov	r2, ip
 2556              	.LVL97:
 2557              	.LBB237:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2558              		.loc 1 746 18 view .LVU794
 2559 012e 0320     		movs	r0, #3
 2560 0130 1360     		str	r3, [r2]
 2561 0132 F5E7     		b	.L245
 2562              	.LVL98:
 2563              	.L273:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2564              		.loc 1 746 18 view .LVU795
 2565 0134 6346     		mov	r3, ip
 774:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 2566              		.loc 1 774 20 view .LVU796
 2567 0136 0320     		movs	r0, #3
 2568 0138 1960     		str	r1, [r3]
 2569 013a F1E7     		b	.L245
 2570              	.L275:
 2571              		.align	2
 2572              	.L274:
 2573 013c 00100240 		.word	1073876992
 2574 0140 00700040 		.word	1073770496
 2575 0144 00000000 		.word	.LANCHOR0
 2576 0148 FFFCFFFF 		.word	-769
 2577 014c FFFFFEFF 		.word	-65537
 2578 0150 8A130000 		.word	5002
 2579 0154 FFFFFFEF 		.word	-268435457
 2580              	.LBE237:
 2581              		.cfi_endproc
 2582              	.LFE43:
 2584              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 2585              		.align	1
 2586              		.p2align 2,,3
 2587              		.global	HAL_GPIO_Init
 2588              		.syntax unified
 2589              		.code	16
 2590              		.thumb_func
 2591              		.fpu softvfp
 2593              	HAL_GPIO_Init:
 2594              	.LVL99:
 2595              	.LFB44:
 866:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 867:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 868:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 869:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 870:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 871:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 872:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 873:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 874:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 875:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 876:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 877:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 878:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 879:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 880:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 881:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 882:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 883:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 884:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 885:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 886:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_USART1_CLK_ENABLE()   do { \
 887:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 888:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 889:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 890:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 891:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 892:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 893:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 894:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 895:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 896:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 897:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 898:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 899:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
 900:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 901:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** { 
 2596              		.loc 1 902 1 is_stmt 1 view -0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 16
 2599              		@ frame_needed = 0, uses_anonymous_args = 0
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2600              		.loc 1 903 3 view .LVU798
 904:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2601              		.loc 1 904 3 view .LVU799
 905:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 2602              		.loc 1 905 3 view .LVU800
 906:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 907:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 908:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 2603              		.loc 1 908 3 view .LVU801
 909:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 2604              		.loc 1 909 3 view .LVU802
 910:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 2605              		.loc 1 910 3 view .LVU803
 911:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 2606              		.loc 1 911 3 view .LVU804
 912:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 913:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the port pins */
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 2607              		.loc 1 914 3 view .LVU805
 2608              		.loc 1 914 9 view .LVU806
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2609              		.loc 1 902 1 is_stmt 0 view .LVU807
 2610 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2611              	.LCFI8:
 2612              		.cfi_def_cfa_offset 20
 2613              		.cfi_offset 4, -20
 2614              		.cfi_offset 5, -16
 2615              		.cfi_offset 6, -12
 2616              		.cfi_offset 7, -8
 2617              		.cfi_offset 14, -4
 2618 0002 4546     		mov	r5, r8
 2619 0004 DE46     		mov	lr, fp
 2620 0006 5746     		mov	r7, r10
 2621 0008 4E46     		mov	r6, r9
 2622 000a E0B5     		push	{r5, r6, r7, lr}
 2623              	.LCFI9:
 2624              		.cfi_def_cfa_offset 36
 2625              		.cfi_offset 8, -36
 2626              		.cfi_offset 9, -32
 2627              		.cfi_offset 10, -28
 2628              		.cfi_offset 11, -24
 2629              		.loc 1 914 21 view .LVU808
 2630 000c 0D68     		ldr	r5, [r1]
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2631              		.loc 1 903 12 view .LVU809
 2632 000e 0023     		movs	r3, #0
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2633              		.loc 1 902 1 view .LVU810
 2634 0010 85B0     		sub	sp, sp, #20
 2635              	.LCFI10:
 2636              		.cfi_def_cfa_offset 56
 2637              		.loc 1 914 9 view .LVU811
 2638 0012 002D     		cmp	r5, #0
 2639 0014 00D1     		bne	.LCB2309
 2640 0016 81E0     		b	.L276	@long jump
 2641              	.LCB2309:
 915:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 916:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get current io position */
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 2642              		.loc 1 917 40 view .LVU812
 2643 0018 0122     		movs	r2, #1
 2644 001a 9246     		mov	r10, r2
 2645              	.LBB238:
 918:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(iocurrent)
 920:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 921:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 922:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 924:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 925:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 928:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */ 
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 934:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 935:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 936:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->MODER;
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 941:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 942:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 944:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 945:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 946:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Speed parameter */
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 948:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR; 
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 953:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 954:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Output Type */
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 959:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 960:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 961:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 966:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 967:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 968:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 970:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 971:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 2646              		.loc 1 972 9 view .LVU813
 2647 001c 6D4A     		ldr	r2, .L310
 2648              	.LBE238:
 973:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 978:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 979:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->IMR;
 2649              		.loc 1 980 14 view .LVU814
 2650 001e AB46     		mov	fp, r5
 2651              	.LBB239:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2652              		.loc 1 972 9 view .LVU815
 2653 0020 9146     		mov	r9, r2
 2654              	.LBE239:
 2655              		.loc 1 980 14 view .LVU816
 2656 0022 8846     		mov	r8, r1
 2657              	.LVL100:
 2658              	.L277:
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2659              		.loc 1 917 5 is_stmt 1 view .LVU817
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2660              		.loc 1 917 40 is_stmt 0 view .LVU818
 2661 0024 5446     		mov	r4, r10
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2662              		.loc 1 917 15 view .LVU819
 2663 0026 5A46     		mov	r2, fp
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2664              		.loc 1 917 40 view .LVU820
 2665 0028 9C40     		lsls	r4, r4, r3
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 2666              		.loc 1 917 15 view .LVU821
 2667 002a 2240     		ands	r2, r4
 2668 002c 0092     		str	r2, [sp]
 2669              	.LVL101:
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2670              		.loc 1 919 5 is_stmt 1 view .LVU822
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2671              		.loc 1 919 7 is_stmt 0 view .LVU823
 2672 002e 5A46     		mov	r2, fp
 2673              	.LVL102:
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2674              		.loc 1 919 7 view .LVU824
 2675 0030 2242     		tst	r2, r4
 2676 0032 6FD0     		beq	.L279
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2677              		.loc 1 923 7 is_stmt 1 view .LVU825
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2678              		.loc 1 923 20 is_stmt 0 view .LVU826
 2679 0034 4246     		mov	r2, r8
 2680 0036 5268     		ldr	r2, [r2, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2681              		.loc 1 923 9 view .LVU827
 2682 0038 1025     		movs	r5, #16
 2683 003a 1100     		movs	r1, r2
 2684 003c A943     		bics	r1, r5
 2685 003e 0191     		str	r1, [sp, #4]
 2686 0040 0229     		cmp	r1, #2
 2687 0042 00D1     		bne	.LCB2353
 2688 0044 71E0     		b	.L303	@long jump
 2689              	.LCB2353:
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 2690              		.loc 1 937 7 is_stmt 1 view .LVU828
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2691              		.loc 1 938 7 is_stmt 0 view .LVU829
 2692 0046 0326     		movs	r6, #3
 2693 0048 5D00     		lsls	r5, r3, #1
 2694 004a AE40     		lsls	r6, r6, r5
 2695 004c B446     		mov	ip, r6
 2696 004e 6146     		mov	r1, ip
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 2697              		.loc 1 937 12 view .LVU830
 2698 0050 0768     		ldr	r7, [r0]
 2699              	.LVL103:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2700              		.loc 1 938 7 is_stmt 1 view .LVU831
 2701 0052 F643     		mvns	r6, r6
 2702 0054 8F43     		bics	r7, r1
 2703              	.LVL104:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2704              		.loc 1 938 7 is_stmt 0 view .LVU832
 2705 0056 3900     		movs	r1, r7
 2706              	.LVL105:
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2707              		.loc 1 939 7 is_stmt 1 view .LVU833
 2708 0058 0327     		movs	r7, #3
 2709 005a 1740     		ands	r7, r2
 2710 005c AF40     		lsls	r7, r7, r5
 2711 005e BC46     		mov	ip, r7
 2712 0060 0F00     		movs	r7, r1
 2713 0062 6146     		mov	r1, ip
 2714              	.LVL106:
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2715              		.loc 1 939 7 is_stmt 0 view .LVU834
 2716 0064 0F43     		orrs	r7, r1
 2717              	.LVL107:
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2718              		.loc 1 940 7 is_stmt 1 view .LVU835
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2719              		.loc 1 943 10 is_stmt 0 view .LVU836
 2720 0066 0199     		ldr	r1, [sp, #4]
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2721              		.loc 1 940 20 view .LVU837
 2722 0068 0760     		str	r7, [r0]
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2723              		.loc 1 943 7 is_stmt 1 view .LVU838
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2724              		.loc 1 943 10 is_stmt 0 view .LVU839
 2725 006a 0139     		subs	r1, r1, #1
 2726 006c 0129     		cmp	r1, #1
 2727 006e 00D8     		bhi	.LCB2387
 2728 0070 77E0     		b	.L281	@long jump
 2729              	.LCB2387:
 2730              	.LVL108:
 2731              	.L282:
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 2732              		.loc 1 962 7 is_stmt 1 view .LVU840
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 2733              		.loc 1 962 12 is_stmt 0 view .LVU841
 2734 0072 C168     		ldr	r1, [r0, #12]
 2735              	.LVL109:
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 2736              		.loc 1 963 7 is_stmt 1 view .LVU842
 2737 0074 0E40     		ands	r6, r1
 2738              	.LVL110:
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2739              		.loc 1 964 7 view .LVU843
 2740 0076 4146     		mov	r1, r8
 2741 0078 8968     		ldr	r1, [r1, #8]
 2742 007a A940     		lsls	r1, r1, r5
 2743 007c 0E43     		orrs	r6, r1
 2744              	.LVL111:
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2745              		.loc 1 965 7 view .LVU844
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2746              		.loc 1 969 9 is_stmt 0 view .LVU845
 2747 007e 8021     		movs	r1, #128
 2748 0080 4905     		lsls	r1, r1, #21
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2749              		.loc 1 965 20 view .LVU846
 2750 0082 C660     		str	r6, [r0, #12]
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2751              		.loc 1 969 7 is_stmt 1 view .LVU847
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2752              		.loc 1 969 9 is_stmt 0 view .LVU848
 2753 0084 0A42     		tst	r2, r1
 2754 0086 45D0     		beq	.L279
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2755              		.loc 1 972 9 is_stmt 1 view .LVU849
 2756              	.LBB240:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2757              		.loc 1 972 9 view .LVU850
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2758              		.loc 1 972 9 view .LVU851
 2759 0088 4946     		mov	r1, r9
 2760 008a 5446     		mov	r4, r10
 2761 008c 8969     		ldr	r1, [r1, #24]
 2762              	.LBE240:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2763              		.loc 1 975 9 is_stmt 0 view .LVU852
 2764 008e 0325     		movs	r5, #3
 2765              	.LBB241:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2766              		.loc 1 972 9 view .LVU853
 2767 0090 2143     		orrs	r1, r4
 2768 0092 4C46     		mov	r4, r9
 2769 0094 A161     		str	r1, [r4, #24]
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2770              		.loc 1 972 9 is_stmt 1 view .LVU854
 2771 0096 A169     		ldr	r1, [r4, #24]
 2772 0098 5446     		mov	r4, r10
 2773              	.LBE241:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2774              		.loc 1 975 9 is_stmt 0 view .LVU855
 2775 009a 0F26     		movs	r6, #15
 2776              	.LVL112:
 2777              	.LBB242:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2778              		.loc 1 972 9 view .LVU856
 2779 009c 2140     		ands	r1, r4
 2780 009e 4E4C     		ldr	r4, .L310+4
 2781              	.LBE242:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2782              		.loc 1 975 9 view .LVU857
 2783 00a0 1D40     		ands	r5, r3
 2784 00a2 A446     		mov	ip, r4
 2785 00a4 AD00     		lsls	r5, r5, #2
 2786 00a6 AE40     		lsls	r6, r6, r5
 2787              	.LBB243:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2788              		.loc 1 972 9 view .LVU858
 2789 00a8 0391     		str	r1, [sp, #12]
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2790              		.loc 1 972 9 is_stmt 1 view .LVU859
 2791 00aa 0399     		ldr	r1, [sp, #12]
 2792              	.LBE243:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2793              		.loc 1 972 9 view .LVU860
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 2794              		.loc 1 974 9 view .LVU861
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 2795              		.loc 1 974 40 is_stmt 0 view .LVU862
 2796 00ac 9908     		lsrs	r1, r3, #2
 2797 00ae 8900     		lsls	r1, r1, #2
 2798 00b0 6144     		add	r1, r1, ip
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 2799              		.loc 1 974 14 view .LVU863
 2800 00b2 8C68     		ldr	r4, [r1, #8]
 2801              	.LVL113:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 2802              		.loc 1 975 9 is_stmt 1 view .LVU864
 2803 00b4 B443     		bics	r4, r6
 2804              	.LVL114:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2805              		.loc 1 976 9 view .LVU865
 2806 00b6 9026     		movs	r6, #144
 2807 00b8 F605     		lsls	r6, r6, #23
 2808 00ba B042     		cmp	r0, r6
 2809 00bc 0ED0     		beq	.L284
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2810              		.loc 1 976 9 is_stmt 0 discriminator 1 view .LVU866
 2811 00be 474E     		ldr	r6, .L310+8
 2812 00c0 B042     		cmp	r0, r6
 2813 00c2 00D1     		bne	.LCB2465
 2814 00c4 7DE0     		b	.L304	@long jump
 2815              	.LCB2465:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2816              		.loc 1 976 9 discriminator 3 view .LVU867
 2817 00c6 464E     		ldr	r6, .L310+12
 2818 00c8 B042     		cmp	r0, r6
 2819 00ca 00D1     		bne	.LCB2468
 2820 00cc 7DE0     		b	.L305	@long jump
 2821              	.LCB2468:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2822              		.loc 1 976 9 discriminator 5 view .LVU868
 2823 00ce 454E     		ldr	r6, .L310+16
 2824 00d0 B042     		cmp	r0, r6
 2825 00d2 00D1     		bne	.LCB2471
 2826 00d4 71E0     		b	.L306	@long jump
 2827              	.LCB2471:
 2828 00d6 0526     		movs	r6, #5
 2829 00d8 AE40     		lsls	r6, r6, r5
 2830 00da 3443     		orrs	r4, r6
 2831              	.LVL115:
 2832              	.L284:
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 2833              		.loc 1 977 9 is_stmt 1 discriminator 16 view .LVU869
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 2834              		.loc 1 977 39 is_stmt 0 discriminator 16 view .LVU870
 2835 00dc 8C60     		str	r4, [r1, #8]
 2836              		.loc 1 980 9 is_stmt 1 discriminator 16 view .LVU871
 2837              		.loc 1 980 14 is_stmt 0 discriminator 16 view .LVU872
 2838 00de 4249     		ldr	r1, .L310+20
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 2839              		.loc 1 981 9 discriminator 16 view .LVU873
 2840 00e0 009C     		ldr	r4, [sp]
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 2841              		.loc 1 980 14 discriminator 16 view .LVU874
 2842 00e2 0968     		ldr	r1, [r1]
 2843              	.LVL116:
 2844              		.loc 1 981 9 is_stmt 1 discriminator 16 view .LVU875
 2845 00e4 E443     		mvns	r4, r4
 2846              	.LVL117:
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2847              		.loc 1 982 9 discriminator 16 view .LVU876
 2848              		.loc 1 982 11 is_stmt 0 discriminator 16 view .LVU877
 2849 00e6 D503     		lsls	r5, r2, #15
 2850 00e8 4ED4     		bmi	.L288
 983:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 985:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->IMR = temp;
 2851              		.loc 1 986 19 view .LVU878
 2852 00ea 3F4D     		ldr	r5, .L310+20
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2853              		.loc 1 981 9 view .LVU879
 2854 00ec 2140     		ands	r1, r4
 2855              	.LVL118:
 2856              		.loc 1 986 9 is_stmt 1 view .LVU880
 2857              		.loc 1 986 19 is_stmt 0 view .LVU881
 2858 00ee 2960     		str	r1, [r5]
 987:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->EMR;
 2859              		.loc 1 988 9 is_stmt 1 view .LVU882
 2860              		.loc 1 988 14 is_stmt 0 view .LVU883
 2861 00f0 6968     		ldr	r1, [r5, #4]
 2862              	.LVL119:
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 2863              		.loc 1 989 9 is_stmt 1 view .LVU884
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2864              		.loc 1 990 9 view .LVU885
 2865              		.loc 1 990 11 is_stmt 0 view .LVU886
 2866 00f2 9503     		lsls	r5, r2, #14
 2867 00f4 4FD4     		bmi	.L290
 2868              	.LVL120:
 2869              	.L307:
 991:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 993:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->EMR = temp;
 2870              		.loc 1 994 19 view .LVU887
 2871 00f6 3C4D     		ldr	r5, .L310+20
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2872              		.loc 1 989 9 view .LVU888
 2873 00f8 2140     		ands	r1, r4
 2874              	.LVL121:
 2875              		.loc 1 994 9 is_stmt 1 view .LVU889
 2876              		.loc 1 994 19 is_stmt 0 view .LVU890
 2877 00fa 6960     		str	r1, [r5, #4]
 995:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 996:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->RTSR;
 2878              		.loc 1 997 9 is_stmt 1 view .LVU891
 2879              		.loc 1 997 14 is_stmt 0 view .LVU892
 2880 00fc A968     		ldr	r1, [r5, #8]
 2881              	.LVL122:
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2882              		.loc 1 998 9 is_stmt 1 view .LVU893
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2883              		.loc 1 999 9 view .LVU894
 2884              		.loc 1 999 11 is_stmt 0 view .LVU895
 2885 00fe D502     		lsls	r5, r2, #11
 2886 0100 50D4     		bmi	.L292
 2887              	.LVL123:
 2888              	.L308:
1000:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1002:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->RTSR = temp;
 2889              		.loc 1 1003 20 view .LVU896
 2890 0102 394D     		ldr	r5, .L310+20
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2891              		.loc 1 998 9 view .LVU897
 2892 0104 2140     		ands	r1, r4
 2893              	.LVL124:
 2894              		.loc 1 1003 9 is_stmt 1 view .LVU898
 2895              		.loc 1 1003 20 is_stmt 0 view .LVU899
 2896 0106 A960     		str	r1, [r5, #8]
1004:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->FTSR;
 2897              		.loc 1 1005 9 is_stmt 1 view .LVU900
 2898              		.loc 1 1005 14 is_stmt 0 view .LVU901
 2899 0108 E968     		ldr	r1, [r5, #12]
 2900              	.LVL125:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2901              		.loc 1 1006 9 is_stmt 1 view .LVU902
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2902              		.loc 1 1007 9 view .LVU903
 2903              		.loc 1 1007 11 is_stmt 0 view .LVU904
 2904 010a 9202     		lsls	r2, r2, #10
 2905 010c 51D4     		bmi	.L294
 2906              	.LVL126:
 2907              	.L309:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2908              		.loc 1 1006 9 view .LVU905
 2909 010e 2140     		ands	r1, r4
 2910              	.L295:
 2911              	.LVL127:
1008:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1010:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->FTSR = temp;
 2912              		.loc 1 1011 9 is_stmt 1 view .LVU906
 2913              		.loc 1 1011 20 is_stmt 0 view .LVU907
 2914 0110 354A     		ldr	r2, .L310+20
 2915 0112 D160     		str	r1, [r2, #12]
 2916              	.LVL128:
 2917              	.L279:
1012:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1013:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1014:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     position++;
 2918              		.loc 1 1015 5 is_stmt 1 view .LVU908
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2919              		.loc 1 914 28 is_stmt 0 view .LVU909
 2920 0114 5A46     		mov	r2, fp
 2921              		.loc 1 1015 13 view .LVU910
 2922 0116 0133     		adds	r3, r3, #1
 2923              	.LVL129:
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2924              		.loc 1 914 9 is_stmt 1 view .LVU911
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2925              		.loc 1 914 28 is_stmt 0 view .LVU912
 2926 0118 DA40     		lsrs	r2, r2, r3
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2927              		.loc 1 914 9 view .LVU913
 2928 011a 83D1     		bne	.L277
 2929              	.LVL130:
 2930              	.L276:
1016:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
1017:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2931              		.loc 1 1017 1 view .LVU914
 2932 011c 05B0     		add	sp, sp, #20
 2933              		@ sp needed
 2934 011e 3CBC     		pop	{r2, r3, r4, r5}
 2935 0120 9046     		mov	r8, r2
 2936 0122 9946     		mov	r9, r3
 2937 0124 A246     		mov	r10, r4
 2938 0126 AB46     		mov	fp, r5
 2939 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 2940              	.LVL131:
 2941              	.L303:
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 2942              		.loc 1 926 9 is_stmt 1 view .LVU915
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 2943              		.loc 1 927 9 view .LVU916
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 2944              		.loc 1 930 9 view .LVU917
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 2945              		.loc 1 931 9 is_stmt 0 view .LVU918
 2946 012a 0F27     		movs	r7, #15
 2947 012c 093D     		subs	r5, r5, #9
 2948 012e 1D40     		ands	r5, r3
 2949 0130 AD00     		lsls	r5, r5, #2
 2950 0132 AF40     		lsls	r7, r7, r5
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 2951              		.loc 1 930 36 view .LVU919
 2952 0134 D908     		lsrs	r1, r3, #3
 2953 0136 8900     		lsls	r1, r1, #2
 2954 0138 4118     		adds	r1, r0, r1
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 2955              		.loc 1 930 14 view .LVU920
 2956 013a 0E6A     		ldr	r6, [r1, #32]
 2957              	.LVL132:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 2958              		.loc 1 931 9 is_stmt 1 view .LVU921
 2959 013c BE43     		bics	r6, r7
 2960              	.LVL133:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 2961              		.loc 1 932 9 view .LVU922
 2962 013e 4746     		mov	r7, r8
 2963 0140 3F69     		ldr	r7, [r7, #16]
 2964 0142 AF40     		lsls	r7, r7, r5
 2965 0144 3E43     		orrs	r6, r7
 2966              	.LVL134:
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2967              		.loc 1 933 9 view .LVU923
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2968              		.loc 1 933 36 is_stmt 0 view .LVU924
 2969 0146 0E62     		str	r6, [r1, #32]
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 2970              		.loc 1 937 7 is_stmt 1 view .LVU925
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 2971              		.loc 1 937 12 is_stmt 0 view .LVU926
 2972 0148 0168     		ldr	r1, [r0]
 2973              	.LVL135:
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 2974              		.loc 1 937 12 view .LVU927
 2975 014a 5D00     		lsls	r5, r3, #1
 2976 014c 8C46     		mov	ip, r1
 2977              	.LVL136:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2978              		.loc 1 938 7 is_stmt 1 view .LVU928
 2979 014e 0321     		movs	r1, #3
 2980              	.LVL137:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2981              		.loc 1 938 7 is_stmt 0 view .LVU929
 2982 0150 6746     		mov	r7, ip
 2983 0152 A940     		lsls	r1, r1, r5
 2984 0154 8F43     		bics	r7, r1
 2985 0156 CE43     		mvns	r6, r1
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2986              		.loc 1 939 7 is_stmt 1 view .LVU930
 2987 0158 0321     		movs	r1, #3
 2988 015a 1140     		ands	r1, r2
 2989 015c A940     		lsls	r1, r1, r5
 2990 015e 3943     		orrs	r1, r7
 2991              	.LVL138:
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2992              		.loc 1 940 7 view .LVU931
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2993              		.loc 1 940 20 is_stmt 0 view .LVU932
 2994 0160 0160     		str	r1, [r0]
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2995              		.loc 1 943 7 is_stmt 1 view .LVU933
 2996              	.LVL139:
 2997              	.L281:
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 2998              		.loc 1 947 9 view .LVU934
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 2999              		.loc 1 949 9 view .LVU935
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 3000              		.loc 1 949 14 is_stmt 0 view .LVU936
 3001 0162 8168     		ldr	r1, [r0, #8]
 3002              	.LVL140:
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 3003              		.loc 1 950 9 is_stmt 1 view .LVU937
 3004 0164 3140     		ands	r1, r6
 3005              	.LVL141:
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 3006              		.loc 1 950 9 is_stmt 0 view .LVU938
 3007 0166 8C46     		mov	ip, r1
 3008              	.LVL142:
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 3009              		.loc 1 951 9 is_stmt 1 view .LVU939
 3010 0168 4146     		mov	r1, r8
 3011              	.LVL143:
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 3012              		.loc 1 951 9 is_stmt 0 view .LVU940
 3013 016a C968     		ldr	r1, [r1, #12]
 3014 016c 6746     		mov	r7, ip
 3015 016e A940     		lsls	r1, r1, r5
 3016 0170 3943     		orrs	r1, r7
 3017              	.LVL144:
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3018              		.loc 1 952 9 is_stmt 1 view .LVU941
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 3019              		.loc 1 957 9 is_stmt 0 view .LVU942
 3020 0172 5746     		mov	r7, r10
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3021              		.loc 1 952 24 view .LVU943
 3022 0174 8160     		str	r1, [r0, #8]
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 3023              		.loc 1 955 9 is_stmt 1 view .LVU944
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 3024              		.loc 1 955 14 is_stmt 0 view .LVU945
 3025 0176 4168     		ldr	r1, [r0, #4]
 3026              	.LVL145:
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 3027              		.loc 1 956 9 is_stmt 1 view .LVU946
 3028 0178 A143     		bics	r1, r4
 3029              	.LVL146:
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 3030              		.loc 1 956 9 is_stmt 0 view .LVU947
 3031 017a 0C00     		movs	r4, r1
 3032              	.LVL147:
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 3033              		.loc 1 957 9 is_stmt 1 view .LVU948
 3034 017c 1109     		lsrs	r1, r2, #4
 3035              	.LVL148:
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 3036              		.loc 1 957 9 is_stmt 0 view .LVU949
 3037 017e 3940     		ands	r1, r7
 3038 0180 9940     		lsls	r1, r1, r3
 3039 0182 2143     		orrs	r1, r4
 3040              	.LVL149:
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3041              		.loc 1 958 9 is_stmt 1 view .LVU950
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3042              		.loc 1 958 23 is_stmt 0 view .LVU951
 3043 0184 4160     		str	r1, [r0, #4]
 3044 0186 74E7     		b	.L282
 3045              	.LVL150:
 3046              	.L288:
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3047              		.loc 1 984 11 is_stmt 1 view .LVU952
 3048 0188 009D     		ldr	r5, [sp]
 3049 018a 2943     		orrs	r1, r5
 3050              	.LVL151:
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3051              		.loc 1 986 9 view .LVU953
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3052              		.loc 1 986 19 is_stmt 0 view .LVU954
 3053 018c 164D     		ldr	r5, .L310+20
 3054 018e 2960     		str	r1, [r5]
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 3055              		.loc 1 988 9 is_stmt 1 view .LVU955
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 3056              		.loc 1 988 14 is_stmt 0 view .LVU956
 3057 0190 6968     		ldr	r1, [r5, #4]
 3058              	.LVL152:
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 3059              		.loc 1 989 9 is_stmt 1 view .LVU957
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 3060              		.loc 1 990 9 view .LVU958
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 3061              		.loc 1 990 11 is_stmt 0 view .LVU959
 3062 0192 9503     		lsls	r5, r2, #14
 3063 0194 AFD5     		bpl	.L307
 3064              	.LVL153:
 3065              	.L290:
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3066              		.loc 1 992 11 is_stmt 1 view .LVU960
 3067 0196 009D     		ldr	r5, [sp]
 3068 0198 2943     		orrs	r1, r5
 3069              	.LVL154:
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 3070              		.loc 1 994 9 view .LVU961
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 3071              		.loc 1 994 19 is_stmt 0 view .LVU962
 3072 019a 134D     		ldr	r5, .L310+20
 3073 019c 6960     		str	r1, [r5, #4]
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 3074              		.loc 1 997 9 is_stmt 1 view .LVU963
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 3075              		.loc 1 997 14 is_stmt 0 view .LVU964
 3076 019e A968     		ldr	r1, [r5, #8]
 3077              	.LVL155:
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 3078              		.loc 1 998 9 is_stmt 1 view .LVU965
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 3079              		.loc 1 999 9 view .LVU966
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 3080              		.loc 1 999 11 is_stmt 0 view .LVU967
 3081 01a0 D502     		lsls	r5, r2, #11
 3082 01a2 AED5     		bpl	.L308
 3083              	.LVL156:
 3084              	.L292:
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3085              		.loc 1 1001 11 is_stmt 1 view .LVU968
 3086 01a4 009D     		ldr	r5, [sp]
 3087 01a6 2943     		orrs	r1, r5
 3088              	.LVL157:
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3089              		.loc 1 1003 9 view .LVU969
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3090              		.loc 1 1003 20 is_stmt 0 view .LVU970
 3091 01a8 0F4D     		ldr	r5, .L310+20
 3092 01aa A960     		str	r1, [r5, #8]
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 3093              		.loc 1 1005 9 is_stmt 1 view .LVU971
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 3094              		.loc 1 1005 14 is_stmt 0 view .LVU972
 3095 01ac E968     		ldr	r1, [r5, #12]
 3096              	.LVL158:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 3097              		.loc 1 1006 9 is_stmt 1 view .LVU973
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 3098              		.loc 1 1007 9 view .LVU974
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 3099              		.loc 1 1007 11 is_stmt 0 view .LVU975
 3100 01ae 9202     		lsls	r2, r2, #10
 3101 01b0 ADD5     		bpl	.L309
 3102              	.LVL159:
 3103              	.L294:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3104              		.loc 1 1009 11 is_stmt 1 view .LVU976
 3105 01b2 009A     		ldr	r2, [sp]
 3106 01b4 0A43     		orrs	r2, r1
 3107 01b6 1100     		movs	r1, r2
 3108              	.LVL160:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3109              		.loc 1 1009 11 is_stmt 0 view .LVU977
 3110 01b8 AAE7     		b	.L295
 3111              	.LVL161:
 3112              	.L306:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3113              		.loc 1 1009 11 view .LVU978
 3114 01ba 0326     		movs	r6, #3
 3115 01bc AE40     		lsls	r6, r6, r5
 3116 01be 3443     		orrs	r4, r6
 3117              	.LVL162:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3118              		.loc 1 1009 11 view .LVU979
 3119 01c0 8CE7     		b	.L284
 3120              	.LVL163:
 3121              	.L304:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3122              		.loc 1 1009 11 view .LVU980
 3123 01c2 5646     		mov	r6, r10
 3124 01c4 AE40     		lsls	r6, r6, r5
 3125 01c6 3443     		orrs	r4, r6
 3126              	.LVL164:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3127              		.loc 1 1009 11 view .LVU981
 3128 01c8 88E7     		b	.L284
 3129              	.LVL165:
 3130              	.L305:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3131              		.loc 1 1009 11 view .LVU982
 3132 01ca 0226     		movs	r6, #2
 3133 01cc AE40     		lsls	r6, r6, r5
 3134 01ce 3443     		orrs	r4, r6
 3135              	.LVL166:
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 3136              		.loc 1 1009 11 view .LVU983
 3137 01d0 84E7     		b	.L284
 3138              	.L311:
 3139 01d2 C046     		.align	2
 3140              	.L310:
 3141 01d4 00100240 		.word	1073876992
 3142 01d8 00000140 		.word	1073807360
 3143 01dc 00040048 		.word	1207960576
 3144 01e0 00080048 		.word	1207961600
 3145 01e4 000C0048 		.word	1207962624
 3146 01e8 00040140 		.word	1073808384
 3147              		.cfi_endproc
 3148              	.LFE44:
 3150              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 3151              		.align	1
 3152              		.p2align 2,,3
 3153              		.global	HAL_GPIO_WritePin
 3154              		.syntax unified
 3155              		.code	16
 3156              		.thumb_func
 3157              		.fpu softvfp
 3159              	HAL_GPIO_WritePin:
 3160              	.LVL167:
 3161              	.LFB45:
1018:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1019:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1020:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
1021:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
1022:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
1023:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the read and the modify access.
1024:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
1025:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..H) to select the GPIO peripheral for STM32F0 family
1026:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
1027:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
1028:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
1029:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
1030:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
1031:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
1032:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
1033:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1034:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
1035:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3162              		.loc 1 1035 1 is_stmt 1 view -0
 3163              		.cfi_startproc
 3164              		@ args = 0, pretend = 0, frame = 0
 3165              		@ frame_needed = 0, uses_anonymous_args = 0
 3166              		@ link register save eliminated.
1036:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1037:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 3167              		.loc 1 1037 3 view .LVU985
1038:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 3168              		.loc 1 1038 3 view .LVU986
1039:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1040:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (PinState != GPIO_PIN_RESET)
 3169              		.loc 1 1040 3 view .LVU987
 3170              		.loc 1 1040 6 is_stmt 0 view .LVU988
 3171 0000 002A     		cmp	r2, #0
 3172 0002 01D0     		beq	.L313
1041:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1042:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 3173              		.loc 1 1042 5 is_stmt 1 view .LVU989
 3174              		.loc 1 1042 17 is_stmt 0 view .LVU990
 3175 0004 8161     		str	r1, [r0, #24]
 3176              	.L312:
1043:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1044:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1045:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
1047:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1048:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }										  
 3177              		.loc 1 1048 1 view .LVU991
 3178              		@ sp needed
 3179 0006 7047     		bx	lr
 3180              	.L313:
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3181              		.loc 1 1046 5 is_stmt 1 view .LVU992
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3182              		.loc 1 1046 16 is_stmt 0 view .LVU993
 3183 0008 8162     		str	r1, [r0, #40]
 3184              		.loc 1 1048 1 view .LVU994
 3185 000a FCE7     		b	.L312
 3186              		.cfi_endproc
 3187              	.LFE45:
 3189              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3190              		.align	1
 3191              		.p2align 2,,3
 3192              		.global	UART_WaitOnFlagUntilTimeout
 3193              		.syntax unified
 3194              		.code	16
 3195              		.thumb_func
 3196              		.fpu softvfp
 3198              	UART_WaitOnFlagUntilTimeout:
 3199              	.LVL168:
 3200              	.LFB46:
1049:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1050:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1051:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1052:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  huart UART handle.
1053:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1054:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1055:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1056:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1057:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1058:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1059:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3201              		.loc 1 1060 1 is_stmt 1 view -0
 3202              		.cfi_startproc
 3203              		@ args = 4, pretend = 0, frame = 0
 3204              		@ frame_needed = 0, uses_anonymous_args = 0
1061:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 3205              		.loc 1 1062 3 view .LVU996
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
 3206              		.loc 1 1060 1 is_stmt 0 view .LVU997
 3207 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3208              	.LCFI11:
 3209              		.cfi_def_cfa_offset 20
 3210              		.cfi_offset 4, -20
 3211              		.cfi_offset 5, -16
 3212              		.cfi_offset 6, -12
 3213              		.cfi_offset 7, -8
 3214              		.cfi_offset 14, -4
 3215 0002 4746     		mov	r7, r8
 3216 0004 CE46     		mov	lr, r9
 3217 0006 204C     		ldr	r4, .L335
 3218 0008 80B5     		push	{r7, lr}
 3219              	.LCFI12:
 3220              		.cfi_def_cfa_offset 28
 3221              		.cfi_offset 8, -28
 3222              		.cfi_offset 9, -24
 3223 000a A046     		mov	r8, r4
1063:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1064:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check for the Timeout */
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1066:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
 3224              		.loc 1 1067 26 view .LVU998
 3225 000c DB43     		mvns	r3, r3
 3226              	.LVL169:
 3227              		.loc 1 1067 26 view .LVU999
 3228 000e 2768     		ldr	r7, [r4]
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3229              		.loc 1 1062 8 view .LVU1000
 3230 0010 0024     		movs	r4, #0
 3231              		.loc 1 1067 26 view .LVU1001
 3232 0012 9946     		mov	r9, r3
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3233              		.loc 1 1062 8 view .LVU1002
 3234 0014 A446     		mov	ip, r4
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
 3235              		.loc 1 1060 1 view .LVU1003
 3236 0016 079D     		ldr	r5, [sp, #28]
 3237 0018 0668     		ldr	r6, [r0]
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3238              		.loc 1 1062 8 view .LVU1004
 3239 001a 01E0     		b	.L317
 3240              	.LVL170:
 3241              	.L321:
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3242              		.loc 1 1065 5 is_stmt 1 view .LVU1005
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3243              		.loc 1 1065 7 is_stmt 0 view .LVU1006
 3244 001c 6B1C     		adds	r3, r5, #1
 3245 001e 10D1     		bne	.L333
 3246              	.L317:
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3247              		.loc 1 1062 8 is_stmt 1 view .LVU1007
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3248              		.loc 1 1062 10 is_stmt 0 view .LVU1008
 3249 0020 F469     		ldr	r4, [r6, #28]
 3250 0022 0C40     		ands	r4, r1
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3251              		.loc 1 1062 49 view .LVU1009
 3252 0024 641A     		subs	r4, r4, r1
 3253 0026 6342     		rsbs	r3, r4, #0
 3254 0028 5C41     		adcs	r4, r4, r3
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3255              		.loc 1 1062 8 view .LVU1010
 3256 002a 9442     		cmp	r4, r2
 3257 002c F6D0     		beq	.L321
 3258 002e 6346     		mov	r3, ip
 3259 0030 002B     		cmp	r3, #0
 3260 0032 01D0     		beq	.L322
 3261 0034 4346     		mov	r3, r8
 3262 0036 1F60     		str	r7, [r3]
 3263              	.L322:
1068:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1069:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1072:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1075:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1076:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Process Unlocked */
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1079:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1080:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1081:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1082:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 3264              		.loc 1 1082 10 view .LVU1011
 3265 0038 0020     		movs	r0, #0
 3266              	.LVL171:
 3267              	.L320:
1083:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3268              		.loc 1 1083 1 view .LVU1012
 3269              		@ sp needed
 3270              	.LVL172:
 3271              		.loc 1 1083 1 view .LVU1013
 3272 003a 0CBC     		pop	{r2, r3}
 3273 003c 9046     		mov	r8, r2
 3274 003e 9946     		mov	r9, r3
 3275 0040 F0BD     		pop	{r4, r5, r6, r7, pc}
 3276              	.LVL173:
 3277              	.L333:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3278              		.loc 1 1067 7 is_stmt 1 view .LVU1014
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3279              		.loc 1 1067 9 is_stmt 0 view .LVU1015
 3280 0042 002D     		cmp	r5, #0
 3281 0044 1BD0     		beq	.L334
 3282              	.LBB244:
 3283              	.LBI244:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3284              		.loc 1 48 10 is_stmt 1 view .LVU1016
 3285              	.LBB245:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 3286              		.loc 1 50 2 view .LVU1017
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3287              		.loc 1 51 2 view .LVU1018
 3288 0046 0123     		movs	r3, #1
 3289 0048 9C46     		mov	ip, r3
 3290              	.LBE245:
 3291              	.LBE244:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3292              		.loc 1 1067 26 is_stmt 0 view .LVU1019
 3293 004a 4B46     		mov	r3, r9
 3294              	.LBB247:
 3295              	.LBB246:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3296              		.loc 1 51 13 view .LVU1020
 3297 004c 0137     		adds	r7, r7, #1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3298              		.loc 1 51 16 is_stmt 1 view .LVU1021
 3299              	.LBE246:
 3300              	.LBE247:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3301              		.loc 1 1067 26 is_stmt 0 view .LVU1022
 3302 004e DC19     		adds	r4, r3, r7
 3303 0050 A542     		cmp	r5, r4
 3304 0052 E5D2     		bcs	.L317
 3305              	.L332:
 3306 0054 4346     		mov	r3, r8
 3307 0056 1F60     		str	r7, [r3]
 3308              	.L319:
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3309              		.loc 1 1070 9 is_stmt 1 view .LVU1023
 3310 0058 3368     		ldr	r3, [r6]
 3311 005a 0C4A     		ldr	r2, .L335+4
 3312              	.LVL174:
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3313              		.loc 1 1070 9 is_stmt 0 view .LVU1024
 3314 005c 1340     		ands	r3, r2
 3315 005e 3360     		str	r3, [r6]
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3316              		.loc 1 1071 9 is_stmt 1 view .LVU1025
 3317 0060 B368     		ldr	r3, [r6, #8]
 3318 0062 A332     		adds	r2, r2, #163
 3319 0064 FF32     		adds	r2, r2, #255
 3320 0066 9343     		bics	r3, r2
 3321 0068 B360     		str	r3, [r6, #8]
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3322              		.loc 1 1073 9 view .LVU1026
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3323              		.loc 1 1073 24 is_stmt 0 view .LVU1027
 3324 006a 2023     		movs	r3, #32
 3325 006c 6832     		adds	r2, r2, #104
 3326 006e 8354     		strb	r3, [r0, r2]
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3327              		.loc 1 1074 9 is_stmt 1 view .LVU1028
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3328              		.loc 1 1074 24 is_stmt 0 view .LVU1029
 3329 0070 0132     		adds	r2, r2, #1
 3330 0072 8354     		strb	r3, [r0, r2]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3331              		.loc 1 1077 9 is_stmt 1 view .LVU1030
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3332              		.loc 1 1077 9 view .LVU1031
 3333 0074 0022     		movs	r2, #0
 3334 0076 4833     		adds	r3, r3, #72
 3335 0078 C254     		strb	r2, [r0, r3]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3336              		.loc 1 1077 9 view .LVU1032
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3337              		.loc 1 1078 9 view .LVU1033
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3338              		.loc 1 1078 16 is_stmt 0 view .LVU1034
 3339 007a 0320     		movs	r0, #3
 3340              	.LVL175:
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3341              		.loc 1 1078 16 view .LVU1035
 3342 007c DDE7     		b	.L320
 3343              	.LVL176:
 3344              	.L334:
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3345              		.loc 1 1078 16 view .LVU1036
 3346 007e 6346     		mov	r3, ip
 3347 0080 002B     		cmp	r3, #0
 3348 0082 E7D1     		bne	.L332
 3349 0084 E8E7     		b	.L319
 3350              	.L336:
 3351 0086 C046     		.align	2
 3352              	.L335:
 3353 0088 00000000 		.word	.LANCHOR0
 3354 008c 5FFEFFFF 		.word	-417
 3355              		.cfi_endproc
 3356              	.LFE46:
 3358              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3359              		.align	1
 3360              		.p2align 2,,3
 3361              		.global	UART_CheckIdleState
 3362              		.syntax unified
 3363              		.code	16
 3364              		.thumb_func
 3365              		.fpu softvfp
 3367              	UART_CheckIdleState:
 3368              	.LVL177:
 3369              	.LFB47:
1084:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1085:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1086:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Check the UART Idle State.
1087:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart UART handle.
1088:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1089:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3370              		.loc 1 1091 1 is_stmt 1 view -0
 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 0
 3373              		@ frame_needed = 0, uses_anonymous_args = 0
 3374              		@ link register save eliminated.
1092:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1093:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
1094:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1095:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1096:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3375              		.loc 1 1097 3 view .LVU1038
 3376              		.loc 1 1097 20 is_stmt 0 view .LVU1039
 3377 0000 0023     		movs	r3, #0
1098:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1099:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
1101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tickstart = HAL_GetTick();
1102:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1104:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
1107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Transmitter is enabled */
1109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1110:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until TEACK flag is set */
1112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1118:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Receiver is enabled */
1120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until REACK flag is set */
1123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1125:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1130:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1131:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART State */
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
 3378              		.loc 1 1133 18 view .LVU1040
 3379 0002 2022     		movs	r2, #32
 3380 0004 6921     		movs	r1, #105
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3381              		.loc 1 1097 20 view .LVU1041
 3382 0006 C366     		str	r3, [r0, #108]
 3383              		.loc 1 1133 3 is_stmt 1 view .LVU1042
 3384              		.loc 1 1133 18 is_stmt 0 view .LVU1043
 3385 0008 4254     		strb	r2, [r0, r1]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3386              		.loc 1 1134 3 is_stmt 1 view .LVU1044
 3387              		.loc 1 1134 18 is_stmt 0 view .LVU1045
 3388 000a 0131     		adds	r1, r1, #1
 3389 000c 4254     		strb	r2, [r0, r1]
1135:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Process Unlocked */
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
 3390              		.loc 1 1137 3 is_stmt 1 view .LVU1046
 3391              		.loc 1 1137 3 view .LVU1047
 3392 000e 4832     		adds	r2, r2, #72
 3393 0010 8354     		strb	r3, [r0, r2]
 3394              		.loc 1 1137 3 view .LVU1048
1138:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 3395              		.loc 1 1139 3 view .LVU1049
1140:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3396              		.loc 1 1140 1 is_stmt 0 view .LVU1050
 3397              		@ sp needed
 3398 0012 0020     		movs	r0, #0
 3399              	.LVL178:
 3400              		.loc 1 1140 1 view .LVU1051
 3401 0014 7047     		bx	lr
 3402              		.cfi_endproc
 3403              	.LFE47:
 3405              		.global	__aeabi_uidiv
 3406 0016 C046     		.section	.text.UART_SetConfig,"ax",%progbits
 3407              		.align	1
 3408              		.p2align 2,,3
 3409              		.global	UART_SetConfig
 3410              		.syntax unified
 3411              		.code	16
 3412              		.thumb_func
 3413              		.fpu softvfp
 3415              	UART_SetConfig:
 3416              	.LVL179:
 3417              	.LFB48:
1141:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1142:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3418              		.loc 1 1143 1 is_stmt 1 view -0
 3419              		.cfi_startproc
 3420              		@ args = 0, pretend = 0, frame = 0
 3421              		@ frame_needed = 0, uses_anonymous_args = 0
1144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 3422              		.loc 1 1144 3 view .LVU1053
1145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 3423              		.loc 1 1145 3 view .LVU1054
1146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 3424              		.loc 1 1146 3 view .LVU1055
1147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 3425              		.loc 1 1147 3 view .LVU1056
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3426              		.loc 1 1148 3 view .LVU1057
1149:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 3427              		.loc 1 1151 3 view .LVU1058
1152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 3428              		.loc 1 1152 3 view .LVU1059
1153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 3429              		.loc 1 1153 3 view .LVU1060
1154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 3430              		.loc 1 1154 3 view .LVU1061
1155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 3431              		.loc 1 1155 3 view .LVU1062
1156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 3432              		.loc 1 1156 3 view .LVU1063
1157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 3433              		.loc 1 1157 3 view .LVU1064
1158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 3434              		.loc 1 1158 3 view .LVU1065
1159:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1160:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
1165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
1167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 3435              		.loc 1 1168 3 view .LVU1066
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 3436              		.loc 1 1143 1 is_stmt 0 view .LVU1067
 3437 0000 70B5     		push	{r4, r5, r6, lr}
 3438              	.LCFI13:
 3439              		.cfi_def_cfa_offset 16
 3440              		.cfi_offset 4, -16
 3441              		.cfi_offset 5, -12
 3442              		.cfi_offset 6, -8
 3443              		.cfi_offset 14, -4
 3444              		.loc 1 1168 45 view .LVU1068
 3445 0002 8368     		ldr	r3, [r0, #8]
 3446 0004 0569     		ldr	r5, [r0, #16]
1169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3447              		.loc 1 1169 3 view .LVU1069
 3448 0006 0468     		ldr	r4, [r0]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3449              		.loc 1 1168 45 view .LVU1070
 3450 0008 2B43     		orrs	r3, r5
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3451              		.loc 1 1168 66 view .LVU1071
 3452 000a 4569     		ldr	r5, [r0, #20]
 3453              		.loc 1 1169 3 view .LVU1072
 3454 000c 2168     		ldr	r1, [r4]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3455              		.loc 1 1168 98 view .LVU1073
 3456 000e C269     		ldr	r2, [r0, #28]
 3457              	.LVL180:
 3458              		.loc 1 1169 3 is_stmt 1 view .LVU1074
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3459              		.loc 1 1168 66 is_stmt 0 view .LVU1075
 3460 0010 2B43     		orrs	r3, r5
 3461              		.loc 1 1169 3 view .LVU1076
 3462 0012 364D     		ldr	r5, .L364
 3463              	.LVL181:
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 3464              		.loc 1 1168 10 view .LVU1077
 3465 0014 1343     		orrs	r3, r2
 3466              		.loc 1 1169 3 view .LVU1078
 3467 0016 2940     		ands	r1, r5
 3468 0018 0B43     		orrs	r3, r1
 3469 001a 2360     		str	r3, [r4]
1170:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * to huart->Init.StopBits value */
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 3470              		.loc 1 1174 3 is_stmt 1 view .LVU1079
 3471 001c 6368     		ldr	r3, [r4, #4]
 3472 001e 3449     		ldr	r1, .L364+4
1175:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure
1178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
1180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
1181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 3473              		.loc 1 1182 10 is_stmt 0 view .LVU1080
 3474 0020 056A     		ldr	r5, [r0, #32]
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3475              		.loc 1 1174 3 view .LVU1081
 3476 0022 0B40     		ands	r3, r1
 3477 0024 C168     		ldr	r1, [r0, #12]
 3478 0026 0B43     		orrs	r3, r1
 3479 0028 6360     		str	r3, [r4, #4]
 3480              		.loc 1 1182 3 is_stmt 1 view .LVU1082
 3481              	.LVL182:
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 3482              		.loc 1 1183 3 view .LVU1083
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 3483              		.loc 1 1182 10 is_stmt 0 view .LVU1084
 3484 002a 8369     		ldr	r3, [r0, #24]
 3485              		.loc 1 1183 3 view .LVU1085
 3486 002c A168     		ldr	r1, [r4, #8]
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 3487              		.loc 1 1182 10 view .LVU1086
 3488 002e 2B43     		orrs	r3, r5
 3489              		.loc 1 1183 3 view .LVU1087
 3490 0030 304D     		ldr	r5, .L364+8
 3491 0032 2940     		ands	r1, r5
 3492 0034 0B43     		orrs	r3, r1
 3493 0036 A360     		str	r3, [r4, #8]
1184:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 3494              		.loc 1 1186 3 is_stmt 1 view .LVU1088
 3495              		.loc 1 1186 3 view .LVU1089
 3496 0038 2F4B     		ldr	r3, .L364+12
 3497 003a 196B     		ldr	r1, [r3, #48]
 3498 003c 0323     		movs	r3, #3
 3499 003e 0B40     		ands	r3, r1
 3500 0040 013B     		subs	r3, r3, #1
 3501 0042 022B     		cmp	r3, #2
 3502 0044 10D9     		bls	.L339
 3503              	.LVL183:
 3504              		.loc 1 1186 3 view .LVU1090
1187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
1188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 3505              		.loc 1 1189 3 view .LVU1091
 3506              		.loc 1 1189 6 is_stmt 0 view .LVU1092
 3507 0046 8023     		movs	r3, #128
 3508 0048 1B02     		lsls	r3, r3, #8
 3509 004a 9A42     		cmp	r2, r3
 3510 004c 24D0     		beq	.L343
 3511              	.LVL184:
 3512              	.L349:
1190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
1198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
1201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1210:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
1214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 3513              		.loc 1 1226 9 is_stmt 1 view .LVU1093
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3514              		.loc 1 62 2 view .LVU1094
 3515              		.loc 1 1226 43 is_stmt 0 view .LVU1095
 3516 004e E123     		movs	r3, #225
 3517 0050 4168     		ldr	r1, [r0, #4]
 3518 0052 DB03     		lsls	r3, r3, #15
 3519 0054 4808     		lsrs	r0, r1, #1
 3520              	.LVL185:
 3521              	.L362:
1227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 3522              		.loc 1 1229 43 view .LVU1096
 3523 0056 9C46     		mov	ip, r3
 3524 0058 6044     		add	r0, r0, ip
 3525 005a FFF7FEFF 		bl	__aeabi_uidiv
 3526              	.LVL186:
 3527              		.loc 1 1229 43 view .LVU1097
 3528 005e 0004     		lsls	r0, r0, #16
 3529 0060 000C     		lsrs	r0, r0, #16
 3530              		.loc 1 1229 30 view .LVU1098
 3531 0062 E060     		str	r0, [r4, #12]
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3532              		.loc 1 1230 9 is_stmt 1 view .LVU1099
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3533              		.loc 1 1148 21 is_stmt 0 view .LVU1100
 3534 0064 0020     		movs	r0, #0
 3535              	.LVL187:
 3536              	.L348:
1231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1237:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return ret;
 3537              		.loc 1 1238 3 is_stmt 1 view .LVU1101
1239:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1240:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3538              		.loc 1 1240 1 is_stmt 0 view .LVU1102
 3539              		@ sp needed
 3540 0066 70BD     		pop	{r4, r5, r6, pc}
 3541              	.LVL188:
 3542              	.L339:
 3543              		.loc 1 1240 1 view .LVU1103
 3544 0068 2449     		ldr	r1, .L364+16
 3545 006a CB5C     		ldrb	r3, [r1, r3]
 3546              	.LVL189:
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 3547              		.loc 1 1186 3 is_stmt 1 view .LVU1104
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3548              		.loc 1 1189 3 view .LVU1105
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3549              		.loc 1 1189 6 is_stmt 0 view .LVU1106
 3550 006c 8021     		movs	r1, #128
 3551 006e 0902     		lsls	r1, r1, #8
 3552 0070 8A42     		cmp	r2, r1
 3553 0072 22D0     		beq	.L363
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3554              		.loc 1 1217 5 is_stmt 1 view .LVU1107
 3555 0074 042B     		cmp	r3, #4
 3556 0076 EAD0     		beq	.L349
 3557 0078 07D8     		bhi	.L350
 3558 007a 002B     		cmp	r3, #0
 3559 007c E7D0     		beq	.L349
 3560 007e 022B     		cmp	r3, #2
 3561 0080 2DD1     		bne	.L361
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3562              		.loc 1 1223 9 view .LVU1108
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3563              		.loc 1 1223 43 is_stmt 0 view .LVU1109
 3564 0082 4168     		ldr	r1, [r0, #4]
 3565 0084 1E4B     		ldr	r3, .L364+20
 3566              	.LVL190:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3567              		.loc 1 1223 43 view .LVU1110
 3568 0086 4808     		lsrs	r0, r1, #1
 3569              	.LVL191:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3570              		.loc 1 1223 43 view .LVU1111
 3571 0088 E5E7     		b	.L362
 3572              	.LVL192:
 3573              	.L350:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3574              		.loc 1 1217 5 view .LVU1112
 3575 008a 082B     		cmp	r3, #8
 3576 008c 27D1     		bne	.L361
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3577              		.loc 1 1229 9 is_stmt 1 view .LVU1113
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3578              		.loc 1 1229 43 is_stmt 0 view .LVU1114
 3579 008e 8023     		movs	r3, #128
 3580              	.LVL193:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3581              		.loc 1 1229 43 view .LVU1115
 3582 0090 4168     		ldr	r1, [r0, #4]
 3583 0092 1B02     		lsls	r3, r3, #8
 3584 0094 4808     		lsrs	r0, r1, #1
 3585              	.LVL194:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3586              		.loc 1 1229 43 view .LVU1116
 3587 0096 DEE7     		b	.L362
 3588              	.LVL195:
 3589              	.L343:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3590              		.loc 1 1200 9 is_stmt 1 view .LVU1117
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3591              		.loc 1 62 2 view .LVU1118
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3592              		.loc 1 1200 31 is_stmt 0 view .LVU1119
 3593 0098 E123     		movs	r3, #225
 3594 009a 4168     		ldr	r1, [r0, #4]
 3595 009c 1B04     		lsls	r3, r3, #16
 3596 009e 4808     		lsrs	r0, r1, #1
 3597              	.LVL196:
 3598              	.L359:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3599              		.loc 1 1203 31 view .LVU1120
 3600 00a0 9C46     		mov	ip, r3
 3601 00a2 6044     		add	r0, r0, ip
 3602 00a4 FFF7FEFF 		bl	__aeabi_uidiv
 3603              	.LVL197:
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3604              		.loc 1 1204 9 is_stmt 1 view .LVU1121
 3605 00a8 0F22     		movs	r2, #15
 3606 00aa 0307     		lsls	r3, r0, #28
 3607 00ac 5B0F     		lsrs	r3, r3, #29
 3608 00ae 9043     		bics	r0, r2
 3609              	.LVL198:
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3610              		.loc 1 1204 9 is_stmt 0 view .LVU1122
 3611 00b0 0343     		orrs	r3, r0
 3612 00b2 9BB2     		uxth	r3, r3
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3613              		.loc 1 1148 21 view .LVU1123
 3614 00b4 0020     		movs	r0, #0
 3615              	.LVL199:
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3616              		.loc 1 1211 5 is_stmt 1 view .LVU1124
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 3617              		.loc 1 1212 5 view .LVU1125
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3618              		.loc 1 1213 5 view .LVU1126
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3619              		.loc 1 1213 26 is_stmt 0 view .LVU1127
 3620 00b6 E360     		str	r3, [r4, #12]
 3621 00b8 D5E7     		b	.L348
 3622              	.LVL200:
 3623              	.L363:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3624              		.loc 1 1191 5 is_stmt 1 view .LVU1128
 3625 00ba 042B     		cmp	r3, #4
 3626 00bc ECD0     		beq	.L343
 3627 00be 07D8     		bhi	.L344
 3628 00c0 002B     		cmp	r3, #0
 3629 00c2 E9D0     		beq	.L343
 3630 00c4 022B     		cmp	r3, #2
 3631 00c6 0CD1     		bne	.L360
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3632              		.loc 1 1197 9 view .LVU1129
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3633              		.loc 1 1197 31 is_stmt 0 view .LVU1130
 3634 00c8 4168     		ldr	r1, [r0, #4]
 3635 00ca 0E4B     		ldr	r3, .L364+24
 3636              	.LVL201:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3637              		.loc 1 1197 31 view .LVU1131
 3638 00cc 4808     		lsrs	r0, r1, #1
 3639              	.LVL202:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3640              		.loc 1 1197 31 view .LVU1132
 3641 00ce E7E7     		b	.L359
 3642              	.LVL203:
 3643              	.L344:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3644              		.loc 1 1191 5 view .LVU1133
 3645 00d0 082B     		cmp	r3, #8
 3646 00d2 06D1     		bne	.L360
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3647              		.loc 1 1203 9 is_stmt 1 view .LVU1134
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3648              		.loc 1 1203 31 is_stmt 0 view .LVU1135
 3649 00d4 8023     		movs	r3, #128
 3650              	.LVL204:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3651              		.loc 1 1203 31 view .LVU1136
 3652 00d6 4168     		ldr	r1, [r0, #4]
 3653 00d8 5B02     		lsls	r3, r3, #9
 3654 00da 4808     		lsrs	r0, r1, #1
 3655              	.LVL205:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 3656              		.loc 1 1203 31 view .LVU1137
 3657 00dc E0E7     		b	.L359
 3658              	.LVL206:
 3659              	.L361:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3660              		.loc 1 1217 5 view .LVU1138
 3661 00de 0120     		movs	r0, #1
 3662              	.LVL207:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3663              		.loc 1 1217 5 view .LVU1139
 3664 00e0 C1E7     		b	.L348
 3665              	.LVL208:
 3666              	.L360:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3667              		.loc 1 1191 5 view .LVU1140
 3668 00e2 0023     		movs	r3, #0
 3669              	.LVL209:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3670              		.loc 1 1191 5 view .LVU1141
 3671 00e4 0120     		movs	r0, #1
 3672              	.LVL210:
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3673              		.loc 1 1211 5 is_stmt 1 view .LVU1142
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 3674              		.loc 1 1212 5 view .LVU1143
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3675              		.loc 1 1213 5 view .LVU1144
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3676              		.loc 1 1213 26 is_stmt 0 view .LVU1145
 3677 00e6 E360     		str	r3, [r4, #12]
 3678 00e8 BDE7     		b	.L348
 3679              	.L365:
 3680 00ea C046     		.align	2
 3681              	.L364:
 3682 00ec F369FFFF 		.word	-38413
 3683 00f0 FFCFFFFF 		.word	-12289
 3684 00f4 FFF4FFFF 		.word	-2817
 3685 00f8 00100240 		.word	1073876992
 3686 00fc 00000000 		.word	.LANCHOR2
 3687 0100 0024F400 		.word	16000000
 3688 0104 0048E801 		.word	32000000
 3689              		.cfi_endproc
 3690              	.LFE48:
 3692              		.section	.text.HAL_UART_Init,"ax",%progbits
 3693              		.align	1
 3694              		.p2align 2,,3
 3695              		.global	HAL_UART_Init
 3696              		.syntax unified
 3697              		.code	16
 3698              		.thumb_func
 3699              		.fpu softvfp
 3701              	HAL_UART_Init:
 3702              	.LVL211:
 3703              	.LFB49:
1241:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1242:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
1244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
1245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1248:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3704              		.loc 1 1249 1 is_stmt 1 view -0
 3705              		.cfi_startproc
 3706              		@ args = 0, pretend = 0, frame = 0
 3707              		@ frame_needed = 0, uses_anonymous_args = 0
1250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
1251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart == NULL)
 3708              		.loc 1 1251 3 view .LVU1147
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3709              		.loc 1 1249 1 is_stmt 0 view .LVU1148
 3710 0000 70B5     		push	{r4, r5, r6, lr}
 3711              	.LCFI14:
 3712              		.cfi_def_cfa_offset 16
 3713              		.cfi_offset 4, -16
 3714              		.cfi_offset 5, -12
 3715              		.cfi_offset 6, -8
 3716              		.cfi_offset 14, -4
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3717              		.loc 1 1249 1 view .LVU1149
 3718 0002 041E     		subs	r4, r0, #0
 3719              		.loc 1 1251 5 view .LVU1150
 3720 0004 2AD0     		beq	.L370
1252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
1254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1255:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 3721              		.loc 1 1256 3 is_stmt 1 view .LVU1151
1257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
1260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 3722              		.loc 1 1264 5 view .LVU1152
1265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1266:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 3723              		.loc 1 1267 3 view .LVU1153
 3724              		.loc 1 1267 11 is_stmt 0 view .LVU1154
 3725 0006 6923     		movs	r3, #105
 3726 0008 C35C     		ldrb	r3, [r0, r3]
 3727 000a DAB2     		uxtb	r2, r3
 3728              		.loc 1 1267 5 view .LVU1155
 3729 000c 002B     		cmp	r3, #0
 3730 000e 22D0     		beq	.L374
 3731              	.L369:
1268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1275:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3732              		.loc 1 1276 3 is_stmt 1 view .LVU1156
 3733              		.loc 1 1276 17 is_stmt 0 view .LVU1157
 3734 0010 2423     		movs	r3, #36
 3735 0012 6925     		movs	r5, #105
1277:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Disable the Peripheral */
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
 3736              		.loc 1 1279 3 view .LVU1158
 3737 0014 0126     		movs	r6, #1
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3738              		.loc 1 1276 17 view .LVU1159
 3739 0016 6355     		strb	r3, [r4, r5]
 3740              		.loc 1 1279 3 is_stmt 1 view .LVU1160
 3741 0018 2268     		ldr	r2, [r4]
1280:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 3742              		.loc 1 1282 7 is_stmt 0 view .LVU1161
 3743 001a 2000     		movs	r0, r4
 3744              	.LVL212:
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3745              		.loc 1 1279 3 view .LVU1162
 3746 001c 1368     		ldr	r3, [r2]
 3747 001e B343     		bics	r3, r6
 3748 0020 1360     		str	r3, [r2]
 3749              		.loc 1 1282 3 is_stmt 1 view .LVU1163
 3750              		.loc 1 1282 7 is_stmt 0 view .LVU1164
 3751 0022 FFF7FEFF 		bl	UART_SetConfig
 3752              	.LVL213:
 3753              		.loc 1 1282 6 view .LVU1165
 3754 0026 0128     		cmp	r0, #1
 3755 0028 18D0     		beq	.L370
1283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
1285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 3756              		.loc 1 1287 3 is_stmt 1 view .LVU1166
1288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3757              		.loc 1 1290 3 view .LVU1167
1291:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
1294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
1295:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR2_LINEN)
1296:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1297:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 3758              		.loc 1 1298 3 view .LVU1168
 3759 002a 2368     		ldr	r3, [r4]
 3760 002c 0C49     		ldr	r1, .L375
 3761 002e 5A68     		ldr	r2, [r3, #4]
1299:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1300:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_SCEN)
1301:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1303:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1305:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1306:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1307:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
1309:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
1311:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1312:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1313:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Enable the Peripheral */
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1316:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return (UART_CheckIdleState(huart));
 3762              		.loc 1 1318 11 is_stmt 0 view .LVU1169
 3763 0030 0020     		movs	r0, #0
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 3764              		.loc 1 1298 3 view .LVU1170
 3765 0032 0A40     		ands	r2, r1
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 3766              		.loc 1 1310 3 view .LVU1171
 3767 0034 0821     		movs	r1, #8
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 3768              		.loc 1 1298 3 view .LVU1172
 3769 0036 5A60     		str	r2, [r3, #4]
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 3770              		.loc 1 1310 3 is_stmt 1 view .LVU1173
 3771 0038 9A68     		ldr	r2, [r3, #8]
 3772 003a 8A43     		bics	r2, r1
 3773 003c 9A60     		str	r2, [r3, #8]
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3774              		.loc 1 1315 3 view .LVU1174
 3775 003e 1A68     		ldr	r2, [r3]
 3776              	.LBB248:
 3777              	.LBB249:
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3778              		.loc 1 1134 18 is_stmt 0 view .LVU1175
 3779 0040 6231     		adds	r1, r1, #98
 3780              	.LBE249:
 3781              	.LBE248:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3782              		.loc 1 1315 3 view .LVU1176
 3783 0042 3243     		orrs	r2, r6
 3784 0044 1A60     		str	r2, [r3]
 3785              		.loc 1 1318 3 is_stmt 1 view .LVU1177
 3786              	.LVL214:
 3787              	.LBB251:
 3788              	.LBI248:
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3789              		.loc 1 1090 19 view .LVU1178
 3790              	.LBB250:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3791              		.loc 1 1097 3 view .LVU1179
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3792              		.loc 1 1133 18 is_stmt 0 view .LVU1180
 3793 0046 2022     		movs	r2, #32
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3794              		.loc 1 1097 20 view .LVU1181
 3795 0048 0023     		movs	r3, #0
 3796 004a E366     		str	r3, [r4, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3797              		.loc 1 1133 3 is_stmt 1 view .LVU1182
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3798              		.loc 1 1133 18 is_stmt 0 view .LVU1183
 3799 004c 6255     		strb	r2, [r4, r5]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3800              		.loc 1 1134 3 is_stmt 1 view .LVU1184
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3801              		.loc 1 1134 18 is_stmt 0 view .LVU1185
 3802 004e 6254     		strb	r2, [r4, r1]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3803              		.loc 1 1137 3 is_stmt 1 view .LVU1186
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3804              		.loc 1 1137 3 view .LVU1187
 3805 0050 4832     		adds	r2, r2, #72
 3806 0052 A354     		strb	r3, [r4, r2]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3807              		.loc 1 1137 3 view .LVU1188
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3808              		.loc 1 1139 3 view .LVU1189
 3809              	.LVL215:
 3810              	.L368:
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3811              		.loc 1 1139 3 is_stmt 0 view .LVU1190
 3812              	.LBE250:
 3813              	.LBE251:
1319:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3814              		.loc 1 1319 1 view .LVU1191
 3815              		@ sp needed
 3816              	.LVL216:
 3817              		.loc 1 1319 1 view .LVU1192
 3818 0054 70BD     		pop	{r4, r5, r6, pc}
 3819              	.LVL217:
 3820              	.L374:
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3821              		.loc 1 1270 5 is_stmt 1 view .LVU1193
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3822              		.loc 1 1270 17 is_stmt 0 view .LVU1194
 3823 0056 6833     		adds	r3, r3, #104
 3824 0058 C254     		strb	r2, [r0, r3]
 3825 005a D9E7     		b	.L369
 3826              	.LVL218:
 3827              	.L370:
1253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 3828              		.loc 1 1253 12 view .LVU1195
 3829 005c 0120     		movs	r0, #1
 3830 005e F9E7     		b	.L368
 3831              	.L376:
 3832              		.align	2
 3833              	.L375:
 3834 0060 FFF7FFFF 		.word	-2049
 3835              		.cfi_endproc
 3836              	.LFE49:
 3838              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3839              		.align	1
 3840              		.p2align 2,,3
 3841              		.global	HAL_UART_Receive
 3842              		.syntax unified
 3843              		.code	16
 3844              		.thumb_func
 3845              		.fpu softvfp
 3847              	HAL_UART_Receive:
 3848              	.LVL219:
 3849              	.LFB50:
1320:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1321:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1328:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1333:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3850              		.loc 1 1334 1 is_stmt 1 view -0
 3851              		.cfi_startproc
 3852              		@ args = 0, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
1335:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3854              		.loc 1 1335 3 view .LVU1197
1336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t uhMask;
 3855              		.loc 1 1336 3 view .LVU1198
1337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0;
 3856              		.loc 1 1337 3 view .LVU1199
1338:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 3857              		.loc 1 1340 3 view .LVU1200
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3858              		.loc 1 1334 1 is_stmt 0 view .LVU1201
 3859 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3860              	.LCFI15:
 3861              		.cfi_def_cfa_offset 20
 3862              		.cfi_offset 4, -20
 3863              		.cfi_offset 5, -16
 3864              		.cfi_offset 6, -12
 3865              		.cfi_offset 7, -8
 3866              		.cfi_offset 14, -4
 3867 0002 4F46     		mov	r7, r9
 3868 0004 D646     		mov	lr, r10
 3869 0006 4646     		mov	r6, r8
 3870 0008 C0B5     		push	{r6, r7, lr}
 3871              	.LCFI16:
 3872              		.cfi_def_cfa_offset 32
 3873              		.cfi_offset 8, -32
 3874              		.cfi_offset 9, -28
 3875              		.cfi_offset 10, -24
 3876 000a 1F00     		movs	r7, r3
 3877              		.loc 1 1340 11 view .LVU1202
 3878 000c 6A23     		movs	r3, #106
 3879              	.LVL220:
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3880              		.loc 1 1334 1 view .LVU1203
 3881 000e 0D00     		movs	r5, r1
 3882              		.loc 1 1340 11 view .LVU1204
 3883 0010 C15C     		ldrb	r1, [r0, r3]
 3884              	.LVL221:
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3885              		.loc 1 1334 1 view .LVU1205
 3886 0012 0400     		movs	r4, r0
 3887 0014 82B0     		sub	sp, sp, #8
 3888              	.LCFI17:
 3889              		.cfi_def_cfa_offset 40
 3890              		.loc 1 1340 5 view .LVU1206
 3891 0016 2029     		cmp	r1, #32
 3892 0018 00D0     		beq	.LCB3492
 3893 001a 6AE0     		b	.L399	@long jump
 3894              	.LCB3492:
1341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 3895              		.loc 1 1342 5 is_stmt 1 view .LVU1207
 3896              		.loc 1 1342 7 is_stmt 0 view .LVU1208
 3897 001c 002D     		cmp	r5, #0
 3898 001e 5DD0     		beq	.L395
 3899              		.loc 1 1342 25 discriminator 1 view .LVU1209
 3900 0020 002A     		cmp	r2, #0
 3901 0022 5BD0     		beq	.L395
1343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1346:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1348:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
1349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 3902              		.loc 1 1350 5 is_stmt 1 view .LVU1210
 3903              		.loc 1 1350 21 is_stmt 0 view .LVU1211
 3904 0024 8168     		ldr	r1, [r0, #8]
 3905              		.loc 1 1350 8 view .LVU1212
 3906 0026 8020     		movs	r0, #128
 3907              	.LVL222:
 3908              		.loc 1 1350 8 view .LVU1213
 3909 0028 4001     		lsls	r0, r0, #5
 3910 002a 8142     		cmp	r1, r0
 3911 002c 4DD0     		beq	.L407
1351:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1357:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3912              		.loc 1 1359 5 is_stmt 1 view .LVU1214
 3913              		.loc 1 1359 5 view .LVU1215
 3914 002e 6820     		movs	r0, #104
 3915 0030 265C     		ldrb	r6, [r4, r0]
 3916 0032 012E     		cmp	r6, #1
 3917 0034 5DD0     		beq	.L399
 3918              		.loc 1 1359 5 view .LVU1216
 3919 0036 0126     		movs	r6, #1
 3920 0038 2654     		strb	r6, [r4, r0]
 3921              		.loc 1 1359 5 view .LVU1217
1360:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3922              		.loc 1 1361 5 view .LVU1218
 3923              		.loc 1 1361 22 is_stmt 0 view .LVU1219
 3924 003a 0020     		movs	r0, #0
 3925 003c E066     		str	r0, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3926              		.loc 1 1362 5 is_stmt 1 view .LVU1220
 3927              		.loc 1 1362 20 is_stmt 0 view .LVU1221
 3928 003e 2230     		adds	r0, r0, #34
 3929 0040 E054     		strb	r0, [r4, r3]
1363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3930              		.loc 1 1365 5 is_stmt 1 view .LVU1222
 3931              	.LBB252:
 3932              	.LBI252:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3933              		.loc 1 48 10 view .LVU1223
 3934              	.LBB253:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 3935              		.loc 1 50 2 view .LVU1224
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3936              		.loc 1 51 2 view .LVU1225
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3937              		.loc 1 51 13 is_stmt 0 view .LVU1226
 3938 0042 4B4B     		ldr	r3, .L408
 3939 0044 1868     		ldr	r0, [r3]
 3940 0046 8046     		mov	r8, r0
 3941 0048 0130     		adds	r0, r0, #1
 3942 004a 1860     		str	r0, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3943              		.loc 1 51 16 is_stmt 1 view .LVU1227
 3944              	.LVL223:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3945              		.loc 1 51 16 is_stmt 0 view .LVU1228
 3946              	.LBE253:
 3947              	.LBE252:
1366:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferSize = Size;
 3948              		.loc 1 1367 5 is_stmt 1 view .LVU1229
 3949              		.loc 1 1367 23 is_stmt 0 view .LVU1230
 3950 004c 5823     		movs	r3, #88
 3951 004e E252     		strh	r2, [r4, r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3952              		.loc 1 1368 5 is_stmt 1 view .LVU1231
 3953              		.loc 1 1368 24 is_stmt 0 view .LVU1232
 3954 0050 0233     		adds	r3, r3, #2
 3955 0052 E252     		strh	r2, [r4, r3]
1369:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
 3956              		.loc 1 1371 5 is_stmt 1 view .LVU1233
 3957              		.loc 1 1371 5 view .LVU1234
 3958              		.loc 1 1371 5 view .LVU1235
 3959 0054 0029     		cmp	r1, #0
 3960 0056 50D0     		beq	.L388
 3961 0058 0233     		adds	r3, r3, #2
 3962 005a E35A     		ldrh	r3, [r4, r3]
 3963 005c 9946     		mov	r9, r3
 3964              	.LVL224:
 3965              	.L383:
 3966              		.loc 1 1371 5 discriminator 10 view .LVU1236
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 3967              		.loc 1 1372 5 discriminator 10 view .LVU1237
1373:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* as long as data have to be received */
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
 3968              		.loc 1 1375 5 discriminator 10 view .LVU1238
 3969              		.loc 1 1375 10 discriminator 10 view .LVU1239
 3970              		.loc 1 1375 16 is_stmt 0 discriminator 10 view .LVU1240
 3971 005e 5A23     		movs	r3, #90
 3972 0060 E35A     		ldrh	r3, [r4, r3]
 3973              		.loc 1 1375 10 discriminator 10 view .LVU1241
 3974 0062 002B     		cmp	r3, #0
 3975 0064 29D0     		beq	.L387
1376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->RxXferCount--;
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1379:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3976              		.loc 1 1382 10 view .LVU1242
 3977 0066 8023     		movs	r3, #128
 3978 0068 5B01     		lsls	r3, r3, #5
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3979              		.loc 1 1377 12 view .LVU1243
 3980 006a 5A26     		movs	r6, #90
 3981              		.loc 1 1382 10 view .LVU1244
 3982 006c 9A46     		mov	r10, r3
 3983 006e 08E0     		b	.L384
 3984              	.LVL225:
 3985              	.L385:
1383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
1387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 3986              		.loc 1 1390 9 is_stmt 1 view .LVU1245
 3987              		.loc 1 1390 20 is_stmt 0 view .LVU1246
 3988 0070 4A46     		mov	r2, r9
 3989              		.loc 1 1390 45 view .LVU1247
 3990 0072 2368     		ldr	r3, [r4]
 3991 0074 9B8C     		ldrh	r3, [r3, #36]
 3992              		.loc 1 1390 20 view .LVU1248
 3993 0076 1340     		ands	r3, r2
 3994              		.loc 1 1390 18 view .LVU1249
 3995 0078 2B70     		strb	r3, [r5]
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3996              		.loc 1 1375 16 view .LVU1250
 3997 007a A35B     		ldrh	r3, [r4, r6]
 3998              		.loc 1 1390 15 view .LVU1251
 3999 007c 0135     		adds	r5, r5, #1
 4000              	.LVL226:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4001              		.loc 1 1375 10 is_stmt 1 view .LVU1252
 4002 007e 002B     		cmp	r3, #0
 4003 0080 1BD0     		beq	.L387
 4004              	.L384:
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4005              		.loc 1 1377 7 view .LVU1253
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4006              		.loc 1 1377 12 is_stmt 0 view .LVU1254
 4007 0082 A25B     		ldrh	r2, [r4, r6]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4008              		.loc 1 1378 10 view .LVU1255
 4009 0084 4346     		mov	r3, r8
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 4010              		.loc 1 1377 25 view .LVU1256
 4011 0086 013A     		subs	r2, r2, #1
 4012 0088 92B2     		uxth	r2, r2
 4013 008a A253     		strh	r2, [r4, r6]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4014              		.loc 1 1378 7 is_stmt 1 view .LVU1257
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4015              		.loc 1 1378 10 is_stmt 0 view .LVU1258
 4016 008c 2021     		movs	r1, #32
 4017 008e 0022     		movs	r2, #0
 4018 0090 2000     		movs	r0, r4
 4019 0092 0097     		str	r7, [sp]
 4020 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4021              	.LVL227:
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4022              		.loc 1 1378 9 view .LVU1259
 4023 0098 0028     		cmp	r0, #0
 4024 009a 2CD1     		bne	.L396
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4025              		.loc 1 1382 7 is_stmt 1 view .LVU1260
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4026              		.loc 1 1382 10 is_stmt 0 view .LVU1261
 4027 009c A368     		ldr	r3, [r4, #8]
 4028 009e 5345     		cmp	r3, r10
 4029 00a0 E6D1     		bne	.L385
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4030              		.loc 1 1382 58 discriminator 1 view .LVU1262
 4031 00a2 2369     		ldr	r3, [r4, #16]
 4032 00a4 002B     		cmp	r3, #0
 4033 00a6 E3D1     		bne	.L385
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 4034              		.loc 1 1384 9 is_stmt 1 view .LVU1263
 4035              	.LVL228:
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 4036              		.loc 1 1385 9 view .LVU1264
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 4037              		.loc 1 1385 16 is_stmt 0 view .LVU1265
 4038 00a8 4A46     		mov	r2, r9
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 4039              		.loc 1 1385 42 view .LVU1266
 4040 00aa 2368     		ldr	r3, [r4]
 4041 00ac 9B8C     		ldrh	r3, [r3, #36]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 4042              		.loc 1 1385 16 view .LVU1267
 4043 00ae 1340     		ands	r3, r2
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 4044              		.loc 1 1385 14 view .LVU1268
 4045 00b0 2B80     		strh	r3, [r5]
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4046              		.loc 1 1386 9 is_stmt 1 view .LVU1269
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4047              		.loc 1 1375 16 is_stmt 0 view .LVU1270
 4048 00b2 A35B     		ldrh	r3, [r4, r6]
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4049              		.loc 1 1386 15 view .LVU1271
 4050 00b4 0235     		adds	r5, r5, #2
 4051              	.LVL229:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4052              		.loc 1 1375 10 is_stmt 1 view .LVU1272
 4053 00b6 002B     		cmp	r3, #0
 4054 00b8 E3D1     		bne	.L384
 4055              	.LVL230:
 4056              	.L387:
1391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1393:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
 4057              		.loc 1 1395 5 view .LVU1273
 4058              		.loc 1 1395 20 is_stmt 0 view .LVU1274
 4059 00ba 6A23     		movs	r3, #106
 4060 00bc 2022     		movs	r2, #32
 4061 00be E254     		strb	r2, [r4, r3]
1396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1397:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 4062              		.loc 1 1398 5 is_stmt 1 view .LVU1275
 4063              		.loc 1 1398 5 view .LVU1276
 4064 00c0 0022     		movs	r2, #0
 4065 00c2 023B     		subs	r3, r3, #2
1399:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
 4066              		.loc 1 1400 12 is_stmt 0 view .LVU1277
 4067 00c4 0020     		movs	r0, #0
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4068              		.loc 1 1398 5 view .LVU1278
 4069 00c6 E254     		strb	r2, [r4, r3]
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4070              		.loc 1 1398 5 is_stmt 1 view .LVU1279
 4071              		.loc 1 1400 5 view .LVU1280
 4072              		.loc 1 1400 12 is_stmt 0 view .LVU1281
 4073 00c8 09E0     		b	.L403
 4074              	.LVL231:
 4075              	.L407:
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4076              		.loc 1 1350 56 discriminator 1 view .LVU1282
 4077 00ca 2169     		ldr	r1, [r4, #16]
 4078 00cc 0029     		cmp	r1, #0
 4079 00ce 0CD1     		bne	.L380
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4080              		.loc 1 1352 7 is_stmt 1 view .LVU1283
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4081              		.loc 1 1352 28 is_stmt 0 view .LVU1284
 4082 00d0 0131     		adds	r1, r1, #1
 4083 00d2 0E00     		movs	r6, r1
 4084 00d4 2E40     		ands	r6, r5
 4085 00d6 B046     		mov	r8, r6
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4086              		.loc 1 1352 9 view .LVU1285
 4087 00d8 0D42     		tst	r5, r1
 4088 00da 32D0     		beq	.L402
 4089              	.L395:
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 4090              		.loc 1 1344 15 view .LVU1286
 4091 00dc 0120     		movs	r0, #1
 4092              	.LVL232:
 4093              	.L403:
1401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1403:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
1405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1406:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4094              		.loc 1 1406 1 view .LVU1287
 4095 00de 02B0     		add	sp, sp, #8
 4096              		@ sp needed
 4097              	.LVL233:
 4098              	.LVL234:
 4099              	.LVL235:
 4100              		.loc 1 1406 1 view .LVU1288
 4101 00e0 1CBC     		pop	{r2, r3, r4}
 4102 00e2 9046     		mov	r8, r2
 4103 00e4 9946     		mov	r9, r3
 4104 00e6 A246     		mov	r10, r4
 4105 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 4106              	.LVL236:
 4107              	.L380:
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4108              		.loc 1 1359 5 is_stmt 1 view .LVU1289
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4109              		.loc 1 1359 5 view .LVU1290
 4110 00ea 6821     		movs	r1, #104
 4111 00ec 605C     		ldrb	r0, [r4, r1]
 4112 00ee 0128     		cmp	r0, #1
 4113 00f0 0CD1     		bne	.L406
 4114              	.L399:
1404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 4115              		.loc 1 1404 12 is_stmt 0 view .LVU1291
 4116 00f2 0220     		movs	r0, #2
 4117 00f4 F3E7     		b	.L403
 4118              	.LVL237:
 4119              	.L396:
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4120              		.loc 1 1380 16 view .LVU1292
 4121 00f6 0320     		movs	r0, #3
 4122 00f8 F1E7     		b	.L403
 4123              	.LVL238:
 4124              	.L388:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4125              		.loc 1 1371 5 is_stmt 1 discriminator 5 view .LVU1293
 4126 00fa 2369     		ldr	r3, [r4, #16]
 4127 00fc 002B     		cmp	r3, #0
 4128 00fe 1AD1     		bne	.L382
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4129              		.loc 1 1371 5 discriminator 7 view .LVU1294
 4130 0100 FF22     		movs	r2, #255
 4131              	.LVL239:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4132              		.loc 1 1371 5 is_stmt 0 discriminator 7 view .LVU1295
 4133 0102 5C33     		adds	r3, r3, #92
 4134 0104 E252     		strh	r2, [r4, r3]
 4135 0106 A333     		adds	r3, r3, #163
 4136 0108 9946     		mov	r9, r3
 4137 010a A8E7     		b	.L383
 4138              	.LVL240:
 4139              	.L406:
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4140              		.loc 1 1359 5 is_stmt 1 view .LVU1296
 4141 010c 0120     		movs	r0, #1
 4142 010e 6054     		strb	r0, [r4, r1]
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4143              		.loc 1 1359 5 view .LVU1297
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4144              		.loc 1 1361 5 view .LVU1298
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4145              		.loc 1 1361 22 is_stmt 0 view .LVU1299
 4146 0110 0021     		movs	r1, #0
 4147 0112 E166     		str	r1, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4148              		.loc 1 1362 5 is_stmt 1 view .LVU1300
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4149              		.loc 1 1362 20 is_stmt 0 view .LVU1301
 4150 0114 2231     		adds	r1, r1, #34
 4151 0116 E154     		strb	r1, [r4, r3]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4152              		.loc 1 1365 5 is_stmt 1 view .LVU1302
 4153              	.LBB256:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 4154              		.loc 1 48 10 view .LVU1303
 4155              	.LBB254:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 4156              		.loc 1 50 2 view .LVU1304
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4157              		.loc 1 51 2 view .LVU1305
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4158              		.loc 1 51 13 is_stmt 0 view .LVU1306
 4159 0118 154B     		ldr	r3, .L408
 4160 011a 1968     		ldr	r1, [r3]
 4161 011c 8846     		mov	r8, r1
 4162 011e 0131     		adds	r1, r1, #1
 4163 0120 1960     		str	r1, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4164              		.loc 1 51 16 is_stmt 1 view .LVU1307
 4165              	.LVL241:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4166              		.loc 1 51 16 is_stmt 0 view .LVU1308
 4167              	.LBE254:
 4168              	.LBE256:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 4169              		.loc 1 1367 5 is_stmt 1 view .LVU1309
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 4170              		.loc 1 1367 23 is_stmt 0 view .LVU1310
 4171 0122 5823     		movs	r3, #88
 4172 0124 E252     		strh	r2, [r4, r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4173              		.loc 1 1368 5 is_stmt 1 view .LVU1311
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4174              		.loc 1 1368 24 is_stmt 0 view .LVU1312
 4175 0126 0233     		adds	r3, r3, #2
 4176 0128 E252     		strh	r2, [r4, r3]
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4177              		.loc 1 1371 5 is_stmt 1 view .LVU1313
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4178              		.loc 1 1371 5 view .LVU1314
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4179              		.loc 1 1371 5 view .LVU1315
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4180              		.loc 1 1371 5 view .LVU1316
 4181 012a FF22     		movs	r2, #255
 4182              	.LVL242:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4183              		.loc 1 1371 5 is_stmt 0 view .LVU1317
 4184 012c 0233     		adds	r3, r3, #2
 4185 012e E252     		strh	r2, [r4, r3]
 4186 0130 A333     		adds	r3, r3, #163
 4187 0132 9946     		mov	r9, r3
 4188 0134 93E7     		b	.L383
 4189              	.LVL243:
 4190              	.L382:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4191              		.loc 1 1371 5 is_stmt 1 discriminator 8 view .LVU1318
 4192 0136 5C23     		movs	r3, #92
 4193 0138 7F22     		movs	r2, #127
 4194              	.LVL244:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4195              		.loc 1 1371 5 is_stmt 0 discriminator 8 view .LVU1319
 4196 013a E252     		strh	r2, [r4, r3]
 4197 013c 2333     		adds	r3, r3, #35
 4198 013e 9946     		mov	r9, r3
 4199 0140 8DE7     		b	.L383
 4200              	.LVL245:
 4201              	.L402:
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4202              		.loc 1 1359 5 is_stmt 1 view .LVU1320
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4203              		.loc 1 1359 5 view .LVU1321
 4204 0142 6820     		movs	r0, #104
 4205 0144 265C     		ldrb	r6, [r4, r0]
 4206 0146 012E     		cmp	r6, #1
 4207 0148 D3D0     		beq	.L399
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4208              		.loc 1 1359 5 view .LVU1322
 4209 014a 2154     		strb	r1, [r4, r0]
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4210              		.loc 1 1359 5 view .LVU1323
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4211              		.loc 1 1361 5 view .LVU1324
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4212              		.loc 1 1361 22 is_stmt 0 view .LVU1325
 4213 014c 4146     		mov	r1, r8
 4214 014e E166     		str	r1, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4215              		.loc 1 1362 5 is_stmt 1 view .LVU1326
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4216              		.loc 1 1362 20 is_stmt 0 view .LVU1327
 4217 0150 2221     		movs	r1, #34
 4218 0152 E154     		strb	r1, [r4, r3]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4219              		.loc 1 1365 5 is_stmt 1 view .LVU1328
 4220              	.LBB257:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 4221              		.loc 1 48 10 view .LVU1329
 4222              	.LBB255:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 4223              		.loc 1 50 2 view .LVU1330
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4224              		.loc 1 51 2 view .LVU1331
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4225              		.loc 1 51 13 is_stmt 0 view .LVU1332
 4226 0154 064B     		ldr	r3, .L408
 4227 0156 1968     		ldr	r1, [r3]
 4228 0158 8846     		mov	r8, r1
 4229 015a 0131     		adds	r1, r1, #1
 4230 015c 1960     		str	r1, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4231              		.loc 1 51 16 is_stmt 1 view .LVU1333
 4232              	.LVL246:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4233              		.loc 1 51 16 is_stmt 0 view .LVU1334
 4234              	.LBE255:
 4235              	.LBE257:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 4236              		.loc 1 1367 5 is_stmt 1 view .LVU1335
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 4237              		.loc 1 1367 23 is_stmt 0 view .LVU1336
 4238 015e 5823     		movs	r3, #88
 4239 0160 E252     		strh	r2, [r4, r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4240              		.loc 1 1368 5 is_stmt 1 view .LVU1337
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 4241              		.loc 1 1368 24 is_stmt 0 view .LVU1338
 4242 0162 0233     		adds	r3, r3, #2
 4243 0164 E252     		strh	r2, [r4, r3]
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4244              		.loc 1 1371 5 is_stmt 1 view .LVU1339
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4245              		.loc 1 1371 5 view .LVU1340
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4246              		.loc 1 1371 5 view .LVU1341
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4247              		.loc 1 1371 5 view .LVU1342
 4248 0166 5C22     		movs	r2, #92
 4249              	.LVL247:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 4250              		.loc 1 1371 5 is_stmt 0 view .LVU1343
 4251 0168 024B     		ldr	r3, .L408+4
 4252 016a 9946     		mov	r9, r3
 4253 016c A352     		strh	r3, [r4, r2]
 4254 016e 76E7     		b	.L383
 4255              	.L409:
 4256              		.align	2
 4257              	.L408:
 4258 0170 00000000 		.word	.LANCHOR0
 4259 0174 FF010000 		.word	511
 4260              		.cfi_endproc
 4261              	.LFE50:
 4263              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4264              		.align	1
 4265              		.p2align 2,,3
 4266              		.global	HAL_UART_Transmit
 4267              		.syntax unified
 4268              		.code	16
 4269              		.thumb_func
 4270              		.fpu softvfp
 4272              	HAL_UART_Transmit:
 4273              	.LVL248:
 4274              	.LFB51:
1407:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1408:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 4275              		.loc 1 1421 1 is_stmt 1 view -0
 4276              		.cfi_startproc
 4277              		@ args = 0, pretend = 0, frame = 0
 4278              		@ frame_needed = 0, uses_anonymous_args = 0
1422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 4279              		.loc 1 1422 3 view .LVU1345
1423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 4280              		.loc 1 1423 3 view .LVU1346
1424:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 4281              		.loc 1 1426 3 view .LVU1347
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 4282              		.loc 1 1421 1 is_stmt 0 view .LVU1348
 4283 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4284              	.LCFI18:
 4285              		.cfi_def_cfa_offset 20
 4286              		.cfi_offset 4, -20
 4287              		.cfi_offset 5, -16
 4288              		.cfi_offset 6, -12
 4289              		.cfi_offset 7, -8
 4290              		.cfi_offset 14, -4
 4291 0002 4746     		mov	r7, r8
 4292 0004 CE46     		mov	lr, r9
 4293 0006 80B5     		push	{r7, lr}
 4294              	.LCFI19:
 4295              		.cfi_def_cfa_offset 28
 4296              		.cfi_offset 8, -28
 4297              		.cfi_offset 9, -24
 4298 0008 1F00     		movs	r7, r3
 4299              		.loc 1 1426 11 view .LVU1349
 4300 000a 6923     		movs	r3, #105
 4301              	.LVL249:
 4302              		.loc 1 1426 11 view .LVU1350
 4303 000c C35C     		ldrb	r3, [r0, r3]
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 4304              		.loc 1 1421 1 view .LVU1351
 4305 000e 0400     		movs	r4, r0
 4306 0010 0D00     		movs	r5, r1
 4307 0012 83B0     		sub	sp, sp, #12
 4308              	.LCFI20:
 4309              		.cfi_def_cfa_offset 40
 4310              		.loc 1 1426 5 view .LVU1352
 4311 0014 202B     		cmp	r3, #32
 4312 0016 61D1     		bne	.L423
1427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 4313              		.loc 1 1428 5 is_stmt 1 view .LVU1353
 4314              		.loc 1 1428 7 is_stmt 0 view .LVU1354
 4315 0018 0029     		cmp	r1, #0
 4316 001a 59D0     		beq	.L422
 4317              		.loc 1 1428 25 discriminator 1 view .LVU1355
 4318 001c 002A     		cmp	r2, #0
 4319 001e 57D0     		beq	.L422
1429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1432:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
1435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 4320              		.loc 1 1436 5 is_stmt 1 view .LVU1356
 4321              		.loc 1 1436 8 is_stmt 0 view .LVU1357
 4322 0020 8023     		movs	r3, #128
 4323 0022 8168     		ldr	r1, [r0, #8]
 4324              	.LVL250:
 4325              		.loc 1 1436 8 view .LVU1358
 4326 0024 5B01     		lsls	r3, r3, #5
 4327 0026 9942     		cmp	r1, r3
 4328 0028 4DD0     		beq	.L428
 4329              	.L412:
1437:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1443:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
 4330              		.loc 1 1445 5 is_stmt 1 view .LVU1359
 4331              		.loc 1 1445 5 view .LVU1360
 4332 002a 6823     		movs	r3, #104
 4333 002c E15C     		ldrb	r1, [r4, r3]
 4334 002e 0129     		cmp	r1, #1
 4335 0030 54D0     		beq	.L423
 4336              		.loc 1 1445 5 discriminator 2 view .LVU1361
 4337 0032 0121     		movs	r1, #1
 4338 0034 E154     		strb	r1, [r4, r3]
 4339              		.loc 1 1445 5 discriminator 2 view .LVU1362
1446:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4340              		.loc 1 1447 5 discriminator 2 view .LVU1363
 4341              		.loc 1 1447 22 is_stmt 0 discriminator 2 view .LVU1364
 4342 0036 0023     		movs	r3, #0
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4343              		.loc 1 1448 19 discriminator 2 view .LVU1365
 4344 0038 2031     		adds	r1, r1, #32
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4345              		.loc 1 1447 22 discriminator 2 view .LVU1366
 4346 003a E366     		str	r3, [r4, #108]
 4347              		.loc 1 1448 5 is_stmt 1 discriminator 2 view .LVU1367
 4348              		.loc 1 1448 19 is_stmt 0 discriminator 2 view .LVU1368
 4349 003c 6933     		adds	r3, r3, #105
 4350 003e E154     		strb	r1, [r4, r3]
1449:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 4351              		.loc 1 1451 5 is_stmt 1 discriminator 2 view .LVU1369
 4352              	.LBB258:
 4353              	.LBI258:
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 4354              		.loc 1 48 10 discriminator 2 view .LVU1370
 4355              	.LBB259:
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
 4356              		.loc 1 50 2 discriminator 2 view .LVU1371
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4357              		.loc 1 51 2 discriminator 2 view .LVU1372
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4358              		.loc 1 51 13 is_stmt 0 discriminator 2 view .LVU1373
 4359 0040 284B     		ldr	r3, .L429
 4360 0042 1968     		ldr	r1, [r3]
 4361 0044 8846     		mov	r8, r1
 4362 0046 0131     		adds	r1, r1, #1
 4363 0048 1960     		str	r1, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4364              		.loc 1 51 16 is_stmt 1 discriminator 2 view .LVU1374
 4365              	.LVL251:
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4366              		.loc 1 51 16 is_stmt 0 discriminator 2 view .LVU1375
 4367              	.LBE259:
 4368              	.LBE258:
1452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferSize = Size;
 4369              		.loc 1 1453 5 is_stmt 1 discriminator 2 view .LVU1376
 4370              		.loc 1 1453 23 is_stmt 0 discriminator 2 view .LVU1377
 4371 004a 5023     		movs	r3, #80
 4372 004c E252     		strh	r2, [r4, r3]
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 4373              		.loc 1 1454 5 is_stmt 1 discriminator 2 view .LVU1378
 4374              		.loc 1 1454 24 is_stmt 0 discriminator 2 view .LVU1379
 4375 004e 0233     		adds	r3, r3, #2
 4376 0050 E252     		strh	r2, [r4, r3]
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 4377              		.loc 1 1455 5 is_stmt 1 discriminator 2 view .LVU1380
 4378              		.loc 1 1455 10 discriminator 2 view .LVU1381
 4379              		.loc 1 1455 16 is_stmt 0 discriminator 2 view .LVU1382
 4380 0052 E35A     		ldrh	r3, [r4, r3]
 4381              		.loc 1 1455 10 discriminator 2 view .LVU1383
 4382 0054 002B     		cmp	r3, #0
 4383 0056 27D0     		beq	.L413
1456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->TxXferCount--;
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 4384              		.loc 1 1462 10 view .LVU1384
 4385 0058 8023     		movs	r3, #128
 4386 005a 5B01     		lsls	r3, r3, #5
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4387              		.loc 1 1457 12 view .LVU1385
 4388 005c 5226     		movs	r6, #82
 4389              		.loc 1 1462 10 view .LVU1386
 4390 005e 9946     		mov	r9, r3
 4391 0060 06E0     		b	.L417
 4392              	.LVL252:
 4393              	.L415:
1463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
1467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
 4394              		.loc 1 1470 9 is_stmt 1 view .LVU1387
 4395              		.loc 1 1470 33 is_stmt 0 view .LVU1388
 4396 0062 2B78     		ldrb	r3, [r5]
 4397              		.loc 1 1470 30 view .LVU1389
 4398 0064 2268     		ldr	r2, [r4]
 4399              		.loc 1 1470 39 view .LVU1390
 4400 0066 0135     		adds	r5, r5, #1
 4401              	.LVL253:
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4402              		.loc 1 1455 10 is_stmt 1 view .LVU1391
 4403              		.loc 1 1470 30 is_stmt 0 view .LVU1392
 4404 0068 1385     		strh	r3, [r2, #40]
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4405              		.loc 1 1455 16 view .LVU1393
 4406 006a A35B     		ldrh	r3, [r4, r6]
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4407              		.loc 1 1455 10 view .LVU1394
 4408 006c 002B     		cmp	r3, #0
 4409 006e 1BD0     		beq	.L413
 4410              	.L417:
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4411              		.loc 1 1457 7 is_stmt 1 view .LVU1395
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4412              		.loc 1 1457 12 is_stmt 0 view .LVU1396
 4413 0070 A25B     		ldrh	r2, [r4, r6]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4414              		.loc 1 1458 10 view .LVU1397
 4415 0072 4346     		mov	r3, r8
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 4416              		.loc 1 1457 25 view .LVU1398
 4417 0074 013A     		subs	r2, r2, #1
 4418 0076 92B2     		uxth	r2, r2
 4419 0078 A253     		strh	r2, [r4, r6]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4420              		.loc 1 1458 7 is_stmt 1 view .LVU1399
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4421              		.loc 1 1458 10 is_stmt 0 view .LVU1400
 4422 007a 8021     		movs	r1, #128
 4423 007c 0022     		movs	r2, #0
 4424 007e 2000     		movs	r0, r4
 4425 0080 0097     		str	r7, [sp]
 4426 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4427              	.LVL254:
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4428              		.loc 1 1458 9 view .LVU1401
 4429 0086 0028     		cmp	r0, #0
 4430 0088 2AD1     		bne	.L418
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4431              		.loc 1 1462 7 is_stmt 1 view .LVU1402
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4432              		.loc 1 1462 10 is_stmt 0 view .LVU1403
 4433 008a A368     		ldr	r3, [r4, #8]
 4434 008c 4B45     		cmp	r3, r9
 4435 008e E8D1     		bne	.L415
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4436              		.loc 1 1462 58 discriminator 1 view .LVU1404
 4437 0090 2369     		ldr	r3, [r4, #16]
 4438 0092 002B     		cmp	r3, #0
 4439 0094 E5D1     		bne	.L415
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 4440              		.loc 1 1464 9 is_stmt 1 view .LVU1405
 4441              	.LVL255:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 4442              		.loc 1 1465 9 view .LVU1406
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 4443              		.loc 1 1465 38 is_stmt 0 view .LVU1407
 4444 0096 2B88     		ldrh	r3, [r5]
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 4445              		.loc 1 1465 30 view .LVU1408
 4446 0098 2268     		ldr	r2, [r4]
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 4447              		.loc 1 1465 38 view .LVU1409
 4448 009a DB05     		lsls	r3, r3, #23
 4449 009c DB0D     		lsrs	r3, r3, #23
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 4450              		.loc 1 1465 30 view .LVU1410
 4451 009e 1385     		strh	r3, [r2, #40]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4452              		.loc 1 1466 9 is_stmt 1 view .LVU1411
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4453              		.loc 1 1455 16 is_stmt 0 view .LVU1412
 4454 00a0 A35B     		ldrh	r3, [r4, r6]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4455              		.loc 1 1466 15 view .LVU1413
 4456 00a2 0235     		adds	r5, r5, #2
 4457              	.LVL256:
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4458              		.loc 1 1455 10 is_stmt 1 view .LVU1414
 4459 00a4 002B     		cmp	r3, #0
 4460 00a6 E3D1     		bne	.L417
 4461              	.LVL257:
 4462              	.L413:
1471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 4463              		.loc 1 1473 5 view .LVU1415
 4464              		.loc 1 1473 8 is_stmt 0 view .LVU1416
 4465 00a8 4346     		mov	r3, r8
 4466 00aa 0022     		movs	r2, #0
 4467 00ac 4021     		movs	r1, #64
 4468 00ae 2000     		movs	r0, r4
 4469 00b0 0097     		str	r7, [sp]
 4470 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4471              	.LVL258:
 4472              		.loc 1 1473 7 view .LVU1417
 4473 00b6 0028     		cmp	r0, #0
 4474 00b8 12D1     		bne	.L418
1474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_TIMEOUT;
1476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1477:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
 4475              		.loc 1 1479 5 is_stmt 1 view .LVU1418
 4476              		.loc 1 1479 19 is_stmt 0 view .LVU1419
 4477 00ba 6923     		movs	r3, #105
 4478 00bc 2022     		movs	r2, #32
 4479 00be E254     		strb	r2, [r4, r3]
1480:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 4480              		.loc 1 1482 5 is_stmt 1 view .LVU1420
 4481              		.loc 1 1482 5 view .LVU1421
 4482 00c0 013B     		subs	r3, r3, #1
 4483 00c2 E054     		strb	r0, [r4, r3]
 4484              		.loc 1 1482 5 view .LVU1422
1483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
 4485              		.loc 1 1484 5 view .LVU1423
 4486              		.loc 1 1484 12 is_stmt 0 view .LVU1424
 4487 00c4 05E0     		b	.L411
 4488              	.LVL259:
 4489              	.L428:
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 4490              		.loc 1 1436 56 discriminator 1 view .LVU1425
 4491 00c6 0369     		ldr	r3, [r0, #16]
 4492 00c8 002B     		cmp	r3, #0
 4493 00ca AED1     		bne	.L412
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4494              		.loc 1 1438 7 is_stmt 1 view .LVU1426
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 4495              		.loc 1 1438 9 is_stmt 0 view .LVU1427
 4496 00cc EB07     		lsls	r3, r5, #31
 4497 00ce ACD5     		bpl	.L412
 4498              	.L422:
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 4499              		.loc 1 1430 15 view .LVU1428
 4500 00d0 0120     		movs	r0, #1
 4501              	.LVL260:
 4502              	.L411:
1485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
1489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1490:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 4503              		.loc 1 1490 1 view .LVU1429
 4504 00d2 03B0     		add	sp, sp, #12
 4505              		@ sp needed
 4506              	.LVL261:
 4507              	.LVL262:
 4508              	.LVL263:
 4509              		.loc 1 1490 1 view .LVU1430
 4510 00d4 0CBC     		pop	{r2, r3}
 4511 00d6 9046     		mov	r8, r2
 4512 00d8 9946     		mov	r9, r3
 4513 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 4514              	.LVL264:
 4515              	.L423:
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 4516              		.loc 1 1488 12 view .LVU1431
 4517 00dc 0220     		movs	r0, #2
 4518              	.LVL265:
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 4519              		.loc 1 1488 12 view .LVU1432
 4520 00de F8E7     		b	.L411
 4521              	.LVL266:
 4522              	.L418:
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 4523              		.loc 1 1460 16 view .LVU1433
 4524 00e0 0320     		movs	r0, #3
 4525 00e2 F6E7     		b	.L411
 4526              	.L430:
 4527              		.align	2
 4528              	.L429:
 4529 00e4 00000000 		.word	.LANCHOR0
 4530              		.cfi_endproc
 4531              	.LFE51:
 4533              		.global	SystemCoreClock
 4534              		.section	.rodata
 4535              		.align	2
 4536              		.set	.LANCHOR2,. + 0
 4539              	CSWTCH.25:
 4540 0000 04       		.byte	4
 4541 0001 08       		.byte	8
 4542 0002 02       		.byte	2
 4543              		.data
 4544              		.align	2
 4545              		.set	.LANCHOR1,. + 0
 4548              	SystemCoreClock:
 4549 0000 00127A00 		.word	8000000
 4550              		.bss
 4551              		.align	2
 4552              		.set	.LANCHOR0,. + 0
 4555              	tick.6086:
 4556 0000 00000000 		.space	4
 4557              		.text
 4558              	.Letext0:
 4559              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4560              		.file 3 ".././hal/stm32f0/CMSIS/device/system_stm32f0xx.h"
 4561              		.file 4 ".././hal/stm32f0/CMSIS/device/stm32f030x6.h"
 4562              		.file 5 ".././hal/stm32f0/CMSIS/device/stm32f0xx.h"
 4563              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4564              		.file 7 "/usr/include/newlib/sys/_types.h"
 4565              		.file 8 "/usr/include/newlib/sys/reent.h"
 4566              		.file 9 "/usr/include/newlib/sys/lock.h"
 4567              		.file 10 ".././hal/stm32f0/stm32f0xx_hal_def.h"
 4568              		.file 11 ".././hal/stm32f0/stm32f0xx_hal_rcc.h"
 4569              		.file 12 ".././hal/stm32f0/stm32f0xx_hal_rcc_ex.h"
 4570              		.file 13 ".././hal/stm32f0/stm32f0xx_hal_gpio.h"
 4571              		.file 14 ".././hal/stm32f0/stm32f0xx_hal_dma.h"
 4572              		.file 15 ".././hal/stm32f0/stm32f0xx_hal_uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0_hal_lowlevel.c
     /tmp/ccqZrw4f.s:16     .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccqZrw4f.s:25     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccqZrw4f.s:49     .text.HAL_GetTick:000000000000000c $d
     /tmp/ccqZrw4f.s:54     .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccqZrw4f.s:62     .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccqZrw4f.s:80     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccqZrw4f.s:88     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccqZrw4f.s:102    .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccqZrw4f.s:110    .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccqZrw4f.s:124    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccqZrw4f.s:132    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccqZrw4f.s:1148   .text.HAL_RCC_OscConfig:000000000000032c $d
     /tmp/ccqZrw4f.s:1160   .text.HAL_RCC_OscConfig:000000000000034c $t
     /tmp/ccqZrw4f.s:1743   .text.HAL_RCC_OscConfig:0000000000000528 $d
     /tmp/ccqZrw4f.s:1754   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccqZrw4f.s:1762   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccqZrw4f.s:2186   .text.HAL_RCC_ClockConfig:0000000000000170 $d
     /tmp/ccqZrw4f.s:2196   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/ccqZrw4f.s:2204   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/ccqZrw4f.s:2573   .text.HAL_RCCEx_PeriphCLKConfig:000000000000013c $d
     /tmp/ccqZrw4f.s:2585   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccqZrw4f.s:2593   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccqZrw4f.s:3141   .text.HAL_GPIO_Init:00000000000001d4 $d
     /tmp/ccqZrw4f.s:3151   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccqZrw4f.s:3159   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccqZrw4f.s:3190   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccqZrw4f.s:3198   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccqZrw4f.s:3353   .text.UART_WaitOnFlagUntilTimeout:0000000000000088 $d
     /tmp/ccqZrw4f.s:3359   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccqZrw4f.s:3367   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccqZrw4f.s:3407   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccqZrw4f.s:3415   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccqZrw4f.s:3682   .text.UART_SetConfig:00000000000000ec $d
     /tmp/ccqZrw4f.s:3693   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccqZrw4f.s:3701   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccqZrw4f.s:3834   .text.HAL_UART_Init:0000000000000060 $d
     /tmp/ccqZrw4f.s:3839   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccqZrw4f.s:3847   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccqZrw4f.s:4258   .text.HAL_UART_Receive:0000000000000170 $d
     /tmp/ccqZrw4f.s:4264   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccqZrw4f.s:4272   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccqZrw4f.s:4529   .text.HAL_UART_Transmit:00000000000000e4 $d
     /tmp/ccqZrw4f.s:4548   .data:0000000000000000 SystemCoreClock
     /tmp/ccqZrw4f.s:4535   .rodata:0000000000000000 $d
     /tmp/ccqZrw4f.s:4539   .rodata:0000000000000000 CSWTCH.25
     /tmp/ccqZrw4f.s:4544   .data:0000000000000000 $d
     /tmp/ccqZrw4f.s:4551   .bss:0000000000000000 $d
     /tmp/ccqZrw4f.s:4555   .bss:0000000000000000 tick.6086

UNDEFINED SYMBOLS
__aeabi_uidiv
