   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"casino.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.verify,"ax",%progbits
  16              		.align	1
  17              		.global	verify
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	verify:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "casino.c"
   1:casino.c      **** #include "hal.h"
   2:casino.c      **** #include <stdint.h>
   3:casino.c      **** #include <stdlib.h>
   4:casino.c      **** #include "../simpleserial/simpleserial.h"
   5:casino.c      **** 
   6:casino.c      **** // Correct values but random permutation.
   7:casino.c      **** uint8_t arr[] = {10,20,30,40,50,60,70,80,90,100,110,120,130,140,150};
   8:casino.c      **** 
   9:casino.c      **** uint8_t verify(uint8_t* data, uint8_t dlen) {
  28              		.loc 1 9 45 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  10:casino.c      ****   uint8_t result = 1;
  32              		.loc 1 10 3 view .LVU1
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  33              		.loc 1 11 3 view .LVU2
  34              	.LBB2:
  35              		.loc 1 11 8 view .LVU3
  36              		.loc 1 11 19 view .LVU4
  37              	.LBE2:
   9:casino.c      ****   uint8_t result = 1;
  38              		.loc 1 9 45 is_stmt 0 view .LVU5
  39 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 0, -24
  43              		.cfi_offset 1, -20
  44              		.cfi_offset 2, -16
  45              		.cfi_offset 4, -12
  46              		.cfi_offset 5, -8
  47              		.cfi_offset 14, -4
   9:casino.c      ****   uint8_t result = 1;
  48              		.loc 1 9 45 view .LVU6
  49 0002 0123     		movs	r3, #1
  50              	.LBB3:
  51              		.loc 1 11 12 view .LVU7
  52 0004 0022     		movs	r2, #0
  12:casino.c      ****     result *= (arr[i] == data[i]);
  53              		.loc 1 12 19 view .LVU8
  54 0006 0A4D     		ldr	r5, .L4
  55              	.LVL1:
  56              	.L2:
  57              		.loc 1 12 5 is_stmt 1 discriminator 3 view .LVU9
  58              		.loc 1 12 23 is_stmt 0 discriminator 3 view .LVU10
  59 0008 845C     		ldrb	r4, [r0, r2]
  60 000a 515D     		ldrb	r1, [r2, r5]
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  61              		.loc 1 11 28 discriminator 3 view .LVU11
  62 000c 0132     		adds	r2, r2, #1
  63              	.LVL2:
  64              		.loc 1 12 23 discriminator 3 view .LVU12
  65 000e 091B     		subs	r1, r1, r4
  66 0010 4C42     		rsbs	r4, r1, #0
  67 0012 6141     		adcs	r1, r1, r4
  68              		.loc 1 12 12 discriminator 3 view .LVU13
  69 0014 4B43     		muls	r3, r1
  70 0016 DBB2     		uxtb	r3, r3
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  71              		.loc 1 11 27 is_stmt 1 discriminator 3 view .LVU14
  72              	.LVL3:
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  73              		.loc 1 11 19 discriminator 3 view .LVU15
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  74              		.loc 1 11 3 is_stmt 0 discriminator 3 view .LVU16
  75 0018 0F2A     		cmp	r2, #15
  76 001a F5D1     		bne	.L2
  77 001c 6A46     		mov	r2, sp
  78              	.LVL4:
  11:casino.c      ****   for (int i = 0; i < 15; i++) {
  79              		.loc 1 11 3 discriminator 3 view .LVU17
  80              	.LBE3:
  13:casino.c      ****   }
  14:casino.c      ****   simpleserial_put('r', 1, &result); // GOAL is to output 1
  81              		.loc 1 14 3 view .LVU18
  82 001e 0121     		movs	r1, #1
  83 0020 D371     		strb	r3, [r2, #7]
  84              		.loc 1 14 3 is_stmt 1 view .LVU19
  85 0022 7220     		movs	r0, #114
  86              	.LVL5:
  87              		.loc 1 14 3 is_stmt 0 view .LVU20
  88 0024 0732     		adds	r2, r2, #7
  89 0026 FFF7FEFF 		bl	simpleserial_put
  90              	.LVL6:
  15:casino.c      ****   return result;
  91              		.loc 1 15 3 is_stmt 1 view .LVU21
  92              		.loc 1 15 10 is_stmt 0 view .LVU22
  93 002a 6B46     		mov	r3, sp
  16:casino.c      **** }
  94              		.loc 1 16 1 view .LVU23
  95              		@ sp needed
  15:casino.c      ****   return result;
  96              		.loc 1 15 10 view .LVU24
  97 002c D879     		ldrb	r0, [r3, #7]
  98              		.loc 1 16 1 view .LVU25
  99 002e 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 100              	.L5:
 101              		.align	2
 102              	.L4:
 103 0030 00000000 		.word	.LANCHOR0
 104              		.cfi_endproc
 105              	.LFE0:
 107              		.section	.text.verify1,"ax",%progbits
 108              		.align	1
 109              		.global	verify1
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	verify1:
 116              	.LVL7:
 117              	.LFB1:
  17:casino.c      **** 
  18:casino.c      **** uint8_t verify1(uint8_t* data, uint8_t dlen,uint8_t val) {
 118              		.loc 1 18 58 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
  19:casino.c      ****   uint8_t is_present = 0x0;
 122              		.loc 1 19 3 view .LVU27
  20:casino.c      ****   for (int i = 0; i < dlen; i++) {
 123              		.loc 1 20 3 view .LVU28
 124              	.LBB4:
 125              		.loc 1 20 8 view .LVU29
 126              		.loc 1 20 12 is_stmt 0 view .LVU30
 127 0000 0023     		movs	r3, #0
 128              	.LBE4:
  18:casino.c      ****   uint8_t is_present = 0x0;
 129              		.loc 1 18 58 view .LVU31
 130 0002 70B5     		push	{r4, r5, r6, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 16
 133              		.cfi_offset 4, -16
 134              		.cfi_offset 5, -12
 135              		.cfi_offset 6, -8
 136              		.cfi_offset 14, -4
  19:casino.c      ****   uint8_t is_present = 0x0;
 137              		.loc 1 19 11 view .LVU32
 138 0004 1D00     		movs	r5, r3
 139              	.LVL8:
 140              	.L7:
 141              	.LBB5:
 142              		.loc 1 20 19 is_stmt 1 discriminator 1 view .LVU33
 143              		.loc 1 20 3 is_stmt 0 discriminator 1 view .LVU34
 144 0006 9942     		cmp	r1, r3
 145 0008 02DC     		bgt	.L8
 146              	.LBE5:
  21:casino.c      ****       is_present |= (data[i]==val);
  22:casino.c      ****   }
  23:casino.c      ****   return !is_present;
 147              		.loc 1 23 3 is_stmt 1 view .LVU35
 148              		.loc 1 23 10 is_stmt 0 view .LVU36
 149 000a 0120     		movs	r0, #1
 150              	.LVL9:
  24:casino.c      **** }
 151              		.loc 1 24 1 view .LVU37
 152              		@ sp needed
  23:casino.c      **** }
 153              		.loc 1 23 10 view .LVU38
 154 000c 6840     		eors	r0, r5
 155              	.LVL10:
 156              		.loc 1 24 1 view .LVU39
 157 000e 70BD     		pop	{r4, r5, r6, pc}
 158              	.LVL11:
 159              	.L8:
 160              	.LBB6:
  21:casino.c      ****       is_present |= (data[i]==val);
 161              		.loc 1 21 7 is_stmt 1 discriminator 3 view .LVU40
  21:casino.c      ****       is_present |= (data[i]==val);
 162              		.loc 1 21 29 is_stmt 0 discriminator 3 view .LVU41
 163 0010 C45C     		ldrb	r4, [r0, r3]
  20:casino.c      ****       is_present |= (data[i]==val);
 164              		.loc 1 20 30 discriminator 3 view .LVU42
 165 0012 0133     		adds	r3, r3, #1
 166              	.LVL12:
  21:casino.c      ****   }
 167              		.loc 1 21 29 discriminator 3 view .LVU43
 168 0014 A41A     		subs	r4, r4, r2
 169 0016 6642     		rsbs	r6, r4, #0
 170 0018 7441     		adcs	r4, r4, r6
  21:casino.c      ****   }
 171              		.loc 1 21 18 discriminator 3 view .LVU44
 172 001a 2543     		orrs	r5, r4
 173              	.LVL13:
  20:casino.c      ****       is_present |= (data[i]==val);
 174              		.loc 1 20 29 is_stmt 1 discriminator 3 view .LVU45
  20:casino.c      ****       is_present |= (data[i]==val);
 175              		.loc 1 20 29 is_stmt 0 discriminator 3 view .LVU46
 176 001c F3E7     		b	.L7
 177              	.LBE6:
 178              		.cfi_endproc
 179              	.LFE1:
 181              		.global	__aeabi_idivmod
 182              		.section	.text.permute,"ax",%progbits
 183              		.align	1
 184              		.global	permute
 185              		.syntax unified
 186              		.code	16
 187              		.thumb_func
 188              		.fpu softvfp
 190              	permute:
 191              	.LVL14:
 192              	.LFB2:
  25:casino.c      **** 
  26:casino.c      **** uint8_t permute(uint8_t* array,int n){
 193              		.loc 1 26 38 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 512
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  27:casino.c      ****     srand(HAL_GetTick());
 197              		.loc 1 27 5 view .LVU48
  26:casino.c      ****     srand(HAL_GetTick());
 198              		.loc 1 26 38 is_stmt 0 view .LVU49
 199 0000 F3B5     		push	{r0, r1, r4, r5, r6, r7, lr}
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 28
 202              		.cfi_offset 0, -28
 203              		.cfi_offset 1, -24
 204              		.cfi_offset 4, -20
 205              		.cfi_offset 5, -16
 206              		.cfi_offset 6, -12
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 FFB0     		sub	sp, sp, #508
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 536
  26:casino.c      ****     srand(HAL_GetTick());
 212              		.loc 1 26 38 view .LVU50
 213 0004 0C00     		movs	r4, r1
 214 0006 0700     		movs	r7, r0
 215              		.loc 1 27 11 view .LVU51
 216 0008 FFF7FEFF 		bl	HAL_GetTick
 217              	.LVL15:
 218              		.loc 1 27 5 view .LVU52
 219 000c FFF7FEFF 		bl	srand
 220              	.LVL16:
  28:casino.c      ****     uint8_t perm[256];
 221              		.loc 1 28 5 is_stmt 1 view .LVU53
  29:casino.c      ****     for (int i = 0; i<n ; i++ )
 222              		.loc 1 29 5 view .LVU54
 223              	.LBB7:
 224              		.loc 1 29 10 view .LVU55
 225              		.loc 1 29 14 is_stmt 0 view .LVU56
 226 0010 0023     		movs	r3, #0
 227              	.LVL17:
 228              	.L10:
 229              		.loc 1 29 21 is_stmt 1 discriminator 1 view .LVU57
 230              		.loc 1 29 5 is_stmt 0 discriminator 1 view .LVU58
 231 0012 A342     		cmp	r3, r4
 232 0014 0DDB     		blt	.L11
 233              	.LBE7:
  30:casino.c      ****         perm[i] = n;
  31:casino.c      ****         
  32:casino.c      ****     int k = 0;
 234              		.loc 1 32 9 view .LVU59
 235 0016 0026     		movs	r6, #0
 236              	.LVL18:
 237              	.L12:
  33:casino.c      ****     while(k<n){
 238              		.loc 1 33 10 is_stmt 1 view .LVU60
 239 0018 A642     		cmp	r6, r4
 240 001a 0EDB     		blt	.L13
 241              	.LBB8:
  34:casino.c      ****         int m = rand();
  35:casino.c      ****         uint8_t j = m%n;
  36:casino.c      ****         uint8_t isok = verify1(perm,n,j);
  37:casino.c      ****         perm[k] = perm[k]*(1-isok) + j*isok;
  38:casino.c      ****         k = k + isok;
  39:casino.c      ****     }
  40:casino.c      ****     uint8_t temp[256];
  41:casino.c      ****     for(int i=0;i<n;i++){
 242              		.loc 1 41 13 is_stmt 0 view .LVU61
 243 001c 0023     		movs	r3, #0
  42:casino.c      ****         temp[i] = array[i];
 244              		.loc 1 42 17 view .LVU62
 245 001e 40AA     		add	r2, sp, #256
 246              	.L14:
 247              	.LVL19:
  41:casino.c      ****         temp[i] = array[i];
 248              		.loc 1 41 17 is_stmt 1 discriminator 1 view .LVU63
  41:casino.c      ****         temp[i] = array[i];
 249              		.loc 1 41 5 is_stmt 0 discriminator 1 view .LVU64
 250 0020 A342     		cmp	r3, r4
 251 0022 20DB     		blt	.L15
 252              	.LBE8:
 253              	.LBB9:
  43:casino.c      ****     }
  44:casino.c      ****     for(int i=0;i<n;i++){
 254              		.loc 1 44 13 view .LVU65
 255 0024 0023     		movs	r3, #0
 256              	.LVL20:
  45:casino.c      ****         array[i]=temp[perm[i]];
 257              		.loc 1 45 22 view .LVU66
 258 0026 40AA     		add	r2, sp, #256
 259              	.L16:
 260              	.LVL21:
  44:casino.c      ****         array[i]=temp[perm[i]];
 261              		.loc 1 44 17 is_stmt 1 discriminator 1 view .LVU67
  44:casino.c      ****         array[i]=temp[perm[i]];
 262              		.loc 1 44 5 is_stmt 0 discriminator 1 view .LVU68
 263 0028 A342     		cmp	r3, r4
 264 002a 20DB     		blt	.L17
 265              	.LBE9:
  46:casino.c      ****     }
  47:casino.c      ****     return 0;
 266              		.loc 1 47 5 is_stmt 1 view .LVU69
  48:casino.c      **** }
 267              		.loc 1 48 1 is_stmt 0 view .LVU70
 268 002c 0020     		movs	r0, #0
 269 002e 7FB0     		add	sp, sp, #508
 270              		@ sp needed
 271              	.LVL22:
 272              	.LVL23:
 273              	.LVL24:
 274              		.loc 1 48 1 view .LVU71
 275 0030 F6BD     		pop	{r1, r2, r4, r5, r6, r7, pc}
 276              	.LVL25:
 277              	.L11:
 278              	.LBB10:
  30:casino.c      ****         
 279              		.loc 1 30 9 is_stmt 1 discriminator 3 view .LVU72
  30:casino.c      ****         
 280              		.loc 1 30 17 is_stmt 0 discriminator 3 view .LVU73
 281 0032 6A46     		mov	r2, sp
 282 0034 9C54     		strb	r4, [r3, r2]
  29:casino.c      ****         perm[i] = n;
 283              		.loc 1 29 27 is_stmt 1 discriminator 3 view .LVU74
  29:casino.c      ****         perm[i] = n;
 284              		.loc 1 29 28 is_stmt 0 discriminator 3 view .LVU75
 285 0036 0133     		adds	r3, r3, #1
 286              	.LVL26:
  29:casino.c      ****         perm[i] = n;
 287              		.loc 1 29 28 discriminator 3 view .LVU76
 288 0038 EBE7     		b	.L10
 289              	.LVL27:
 290              	.L13:
  29:casino.c      ****         perm[i] = n;
 291              		.loc 1 29 28 discriminator 3 view .LVU77
 292              	.LBE10:
 293              	.LBB11:
  34:casino.c      ****         uint8_t j = m%n;
 294              		.loc 1 34 9 is_stmt 1 view .LVU78
  34:casino.c      ****         uint8_t j = m%n;
 295              		.loc 1 34 17 is_stmt 0 view .LVU79
 296 003a FFF7FEFF 		bl	rand
 297              	.LVL28:
  35:casino.c      ****         uint8_t isok = verify1(perm,n,j);
 298              		.loc 1 35 9 is_stmt 1 view .LVU80
  35:casino.c      ****         uint8_t isok = verify1(perm,n,j);
 299              		.loc 1 35 22 is_stmt 0 view .LVU81
 300 003e 2100     		movs	r1, r4
 301 0040 FFF7FEFF 		bl	__aeabi_idivmod
 302              	.LVL29:
  35:casino.c      ****         uint8_t isok = verify1(perm,n,j);
 303              		.loc 1 35 17 view .LVU82
 304 0044 CDB2     		uxtb	r5, r1
 305              	.LVL30:
  36:casino.c      ****         perm[k] = perm[k]*(1-isok) + j*isok;
 306              		.loc 1 36 9 is_stmt 1 view .LVU83
  36:casino.c      ****         perm[k] = perm[k]*(1-isok) + j*isok;
 307              		.loc 1 36 24 is_stmt 0 view .LVU84
 308 0046 2A00     		movs	r2, r5
 309 0048 E1B2     		uxtb	r1, r4
 310 004a 6846     		mov	r0, sp
 311 004c FFF7FEFF 		bl	verify1
 312              	.LVL31:
  37:casino.c      ****         k = k + isok;
 313              		.loc 1 37 9 is_stmt 1 view .LVU85
  37:casino.c      ****         k = k + isok;
 314              		.loc 1 37 29 is_stmt 0 view .LVU86
 315 0050 0123     		movs	r3, #1
 316 0052 191A     		subs	r1, r3, r0
  37:casino.c      ****         k = k + isok;
 317              		.loc 1 37 36 view .LVU87
 318 0054 6B46     		mov	r3, sp
 319 0056 9B5D     		ldrb	r3, [r3, r6]
  37:casino.c      ****         k = k + isok;
 320              		.loc 1 37 39 view .LVU88
 321 0058 4543     		muls	r5, r0
 322              	.LVL32:
  37:casino.c      ****         k = k + isok;
 323              		.loc 1 37 36 view .LVU89
 324 005a 4B43     		muls	r3, r1
 325 005c 5D19     		adds	r5, r3, r5
  37:casino.c      ****         k = k + isok;
 326              		.loc 1 37 17 view .LVU90
 327 005e 6B46     		mov	r3, sp
 328 0060 9D55     		strb	r5, [r3, r6]
  38:casino.c      ****     }
 329              		.loc 1 38 9 is_stmt 1 view .LVU91
  38:casino.c      ****     }
 330              		.loc 1 38 11 is_stmt 0 view .LVU92
 331 0062 3618     		adds	r6, r6, r0
 332              	.LVL33:
  38:casino.c      ****     }
 333              		.loc 1 38 11 view .LVU93
 334 0064 D8E7     		b	.L12
 335              	.LVL34:
 336              	.L15:
  38:casino.c      ****     }
 337              		.loc 1 38 11 view .LVU94
 338              	.LBE11:
 339              	.LBB12:
  42:casino.c      ****     }
 340              		.loc 1 42 9 is_stmt 1 discriminator 3 view .LVU95
  42:casino.c      ****     }
 341              		.loc 1 42 17 is_stmt 0 discriminator 3 view .LVU96
 342 0066 F95C     		ldrb	r1, [r7, r3]
 343 0068 9954     		strb	r1, [r3, r2]
  41:casino.c      ****         temp[i] = array[i];
 344              		.loc 1 41 21 is_stmt 1 discriminator 3 view .LVU97
  41:casino.c      ****         temp[i] = array[i];
 345              		.loc 1 41 22 is_stmt 0 discriminator 3 view .LVU98
 346 006a 0133     		adds	r3, r3, #1
 347              	.LVL35:
  41:casino.c      ****         temp[i] = array[i];
 348              		.loc 1 41 22 discriminator 3 view .LVU99
 349 006c D8E7     		b	.L14
 350              	.LVL36:
 351              	.L17:
  41:casino.c      ****         temp[i] = array[i];
 352              		.loc 1 41 22 discriminator 3 view .LVU100
 353              	.LBE12:
 354              	.LBB13:
  45:casino.c      ****     }
 355              		.loc 1 45 9 is_stmt 1 discriminator 3 view .LVU101
  45:casino.c      ****     }
 356              		.loc 1 45 27 is_stmt 0 discriminator 3 view .LVU102
 357 006e 6946     		mov	r1, sp
 358 0070 595C     		ldrb	r1, [r3, r1]
  45:casino.c      ****     }
 359              		.loc 1 45 17 discriminator 3 view .LVU103
 360 0072 515C     		ldrb	r1, [r2, r1]
 361 0074 F954     		strb	r1, [r7, r3]
  44:casino.c      ****         array[i]=temp[perm[i]];
 362              		.loc 1 44 21 is_stmt 1 discriminator 3 view .LVU104
  44:casino.c      ****         array[i]=temp[perm[i]];
 363              		.loc 1 44 22 is_stmt 0 discriminator 3 view .LVU105
 364 0076 0133     		adds	r3, r3, #1
 365              	.LVL37:
  44:casino.c      ****         array[i]=temp[perm[i]];
 366              		.loc 1 44 22 discriminator 3 view .LVU106
 367 0078 D6E7     		b	.L16
 368              	.LBE13:
 369              		.cfi_endproc
 370              	.LFE2:
 372              		.section	.text.draw,"ax",%progbits
 373              		.align	1
 374              		.global	draw
 375              		.syntax unified
 376              		.code	16
 377              		.thumb_func
 378              		.fpu softvfp
 380              	draw:
 381              	.LVL38:
 382              	.LFB3:
  49:casino.c      **** 
  50:casino.c      **** void draw(uint8_t* arr, int n) {
 383              		.loc 1 50 32 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 264
 386              		@ frame_needed = 0, uses_anonymous_args = 0
  51:casino.c      ****   volatile int x = 1234;
 387              		.loc 1 51 3 view .LVU108
  50:casino.c      ****   volatile int x = 1234;
 388              		.loc 1 50 32 is_stmt 0 view .LVU109
 389 0000 70B5     		push	{r4, r5, r6, lr}
 390              	.LCFI4:
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 4, -16
 393              		.cfi_offset 5, -12
 394              		.cfi_offset 6, -8
 395              		.cfi_offset 14, -4
 396              		.loc 1 51 16 view .LVU110
 397 0002 154B     		ldr	r3, .L25
  50:casino.c      ****   volatile int x = 1234;
 398              		.loc 1 50 32 view .LVU111
 399 0004 C2B0     		sub	sp, sp, #264
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 280
 402              		.loc 1 51 16 view .LVU112
 403 0006 0093     		str	r3, [sp]
  52:casino.c      ****   // countermeasure
  53:casino.c      ****   // store a random permutation in arr_i
  54:casino.c      ****   // use that to index into arr
  55:casino.c      ****   uint8_t arr_i[256];
 404              		.loc 1 55 3 is_stmt 1 view .LVU113
  56:casino.c      ****   for(int i=0;i<n;i++){
 405              		.loc 1 56 3 view .LVU114
 406              	.LBB14:
 407              		.loc 1 56 7 view .LVU115
 408              	.LVL39:
 409              		.loc 1 56 7 is_stmt 0 view .LVU116
 410              	.LBE14:
  50:casino.c      ****   volatile int x = 1234;
 411              		.loc 1 50 32 view .LVU117
 412 0008 0500     		movs	r5, r0
 413 000a 0C00     		movs	r4, r1
 414              	.LBB15:
 415              		.loc 1 56 11 view .LVU118
 416 000c 0023     		movs	r3, #0
 417              	.LVL40:
 418              	.L19:
 419              		.loc 1 56 15 is_stmt 1 discriminator 1 view .LVU119
 420              		.loc 1 56 3 is_stmt 0 discriminator 1 view .LVU120
 421 000e A342     		cmp	r3, r4
 422 0010 09DB     		blt	.L20
 423              	.LBE15:
  57:casino.c      ****     arr_i[i] = i;
  58:casino.c      ****   }
  59:casino.c      ****   permute(arr_i,n);
 424              		.loc 1 59 3 is_stmt 1 view .LVU121
 425 0012 2100     		movs	r1, r4
 426 0014 02A8     		add	r0, sp, #8
 427              	.LVL41:
 428              		.loc 1 59 3 is_stmt 0 view .LVU122
 429 0016 FFF7FEFF 		bl	permute
 430              	.LVL42:
  60:casino.c      ****   for (int i = 0; i < n; i++) {
 431              		.loc 1 60 3 is_stmt 1 view .LVU123
 432              	.LBB16:
 433              		.loc 1 60 8 view .LVU124
 434              		.loc 1 60 12 is_stmt 0 view .LVU125
 435 001a 0023     		movs	r3, #0
 436              	.LBB17:
 437              	.LBB18:
  61:casino.c      ****     int i_ = arr_i[i];
  62:casino.c      ****     for (volatile int j = 0; j < arr[i_]; j++) {
 438              		.loc 1 62 23 view .LVU126
 439 001c 1900     		movs	r1, r3
 440              	.LVL43:
 441              	.L21:
 442              		.loc 1 62 23 view .LVU127
 443              	.LBE18:
 444              	.LBE17:
  60:casino.c      ****   for (int i = 0; i < n; i++) {
 445              		.loc 1 60 19 is_stmt 1 discriminator 1 view .LVU128
  60:casino.c      ****   for (int i = 0; i < n; i++) {
 446              		.loc 1 60 3 is_stmt 0 discriminator 1 view .LVU129
 447 001e A342     		cmp	r3, r4
 448 0020 07DB     		blt	.L24
 449              	.LBE16:
  63:casino.c      ****       x = x * j;
  64:casino.c      ****     }
  65:casino.c      ****   }
  66:casino.c      **** }
 450              		.loc 1 66 1 view .LVU130
 451 0022 42B0     		add	sp, sp, #264
 452              		@ sp needed
 453              	.LVL44:
 454              	.LVL45:
 455              		.loc 1 66 1 view .LVU131
 456 0024 70BD     		pop	{r4, r5, r6, pc}
 457              	.LVL46:
 458              	.L20:
 459              	.LBB23:
  57:casino.c      ****   }
 460              		.loc 1 57 5 is_stmt 1 discriminator 3 view .LVU132
  57:casino.c      ****   }
 461              		.loc 1 57 14 is_stmt 0 discriminator 3 view .LVU133
 462 0026 6A46     		mov	r2, sp
 463 0028 0821     		movs	r1, #8
 464 002a 5218     		adds	r2, r2, r1
 465 002c D354     		strb	r3, [r2, r3]
  56:casino.c      ****     arr_i[i] = i;
 466              		.loc 1 56 19 is_stmt 1 discriminator 3 view .LVU134
  56:casino.c      ****     arr_i[i] = i;
 467              		.loc 1 56 20 is_stmt 0 discriminator 3 view .LVU135
 468 002e 0133     		adds	r3, r3, #1
 469              	.LVL47:
  56:casino.c      ****     arr_i[i] = i;
 470              		.loc 1 56 20 discriminator 3 view .LVU136
 471 0030 EDE7     		b	.L19
 472              	.LVL48:
 473              	.L24:
  56:casino.c      ****     arr_i[i] = i;
 474              		.loc 1 56 20 discriminator 3 view .LVU137
 475              	.LBE23:
 476              	.LBB24:
 477              	.LBB21:
  61:casino.c      ****     for (volatile int j = 0; j < arr[i_]; j++) {
 478              		.loc 1 61 5 is_stmt 1 view .LVU138
  61:casino.c      ****     for (volatile int j = 0; j < arr[i_]; j++) {
 479              		.loc 1 61 19 is_stmt 0 view .LVU139
 480 0032 0820     		movs	r0, #8
 481 0034 6A46     		mov	r2, sp
 482 0036 1218     		adds	r2, r2, r0
 483 0038 D25C     		ldrb	r2, [r2, r3]
 484              	.LVL49:
  62:casino.c      ****       x = x * j;
 485              		.loc 1 62 5 is_stmt 1 view .LVU140
 486              	.LBB19:
  62:casino.c      ****       x = x * j;
 487              		.loc 1 62 10 view .LVU141
  62:casino.c      ****       x = x * j;
 488              		.loc 1 62 23 is_stmt 0 view .LVU142
 489 003a 0191     		str	r1, [sp, #4]
  62:casino.c      ****       x = x * j;
 490              		.loc 1 62 37 view .LVU143
 491 003c A85C     		ldrb	r0, [r5, r2]
 492              	.LVL50:
 493              	.L22:
  62:casino.c      ****       x = x * j;
 494              		.loc 1 62 30 is_stmt 1 discriminator 1 view .LVU144
  62:casino.c      ****       x = x * j;
 495              		.loc 1 62 32 is_stmt 0 discriminator 1 view .LVU145
 496 003e 019A     		ldr	r2, [sp, #4]
  62:casino.c      ****       x = x * j;
 497              		.loc 1 62 5 discriminator 1 view .LVU146
 498 0040 9042     		cmp	r0, r2
 499 0042 01DC     		bgt	.L23
 500              	.LBE19:
 501              	.LBE21:
  60:casino.c      ****     int i_ = arr_i[i];
 502              		.loc 1 60 26 is_stmt 1 discriminator 2 view .LVU147
  60:casino.c      ****     int i_ = arr_i[i];
 503              		.loc 1 60 27 is_stmt 0 discriminator 2 view .LVU148
 504 0044 0133     		adds	r3, r3, #1
 505              	.LVL51:
  60:casino.c      ****     int i_ = arr_i[i];
 506              		.loc 1 60 27 discriminator 2 view .LVU149
 507 0046 EAE7     		b	.L21
 508              	.LVL52:
 509              	.L23:
 510              	.LBB22:
 511              	.LBB20:
  63:casino.c      ****     }
 512              		.loc 1 63 7 is_stmt 1 discriminator 3 view .LVU150
  63:casino.c      ****     }
 513              		.loc 1 63 13 is_stmt 0 discriminator 3 view .LVU151
 514 0048 009E     		ldr	r6, [sp]
 515 004a 019A     		ldr	r2, [sp, #4]
 516 004c 7243     		muls	r2, r6
  63:casino.c      ****     }
 517              		.loc 1 63 9 discriminator 3 view .LVU152
 518 004e 0092     		str	r2, [sp]
  62:casino.c      ****       x = x * j;
 519              		.loc 1 62 43 is_stmt 1 discriminator 3 view .LVU153
  62:casino.c      ****       x = x * j;
 520              		.loc 1 62 44 is_stmt 0 discriminator 3 view .LVU154
 521 0050 019A     		ldr	r2, [sp, #4]
 522 0052 0132     		adds	r2, r2, #1
 523 0054 0192     		str	r2, [sp, #4]
 524 0056 F2E7     		b	.L22
 525              	.L26:
 526              		.align	2
 527              	.L25:
 528 0058 D2040000 		.word	1234
 529              	.LBE20:
 530              	.LBE22:
 531              	.LBE24:
 532              		.cfi_endproc
 533              	.LFE3:
 535              		.section	.text.casino,"ax",%progbits
 536              		.align	1
 537              		.global	casino
 538              		.syntax unified
 539              		.code	16
 540              		.thumb_func
 541              		.fpu softvfp
 543              	casino:
 544              	.LVL53:
 545              	.LFB4:
  67:casino.c      **** 
  68:casino.c      **** // void draw(uint8_t* arr, int n) {
  69:casino.c      **** //   volatile int x = 1234;
  70:casino.c      **** //   for (int i = 0; i < n; i++) {
  71:casino.c      **** //     for (volatile int j = 0; j < arr[i]; j++) {
  72:casino.c      **** //       x = x * j;
  73:casino.c      **** //     }
  74:casino.c      **** //   }
  75:casino.c      **** // }
  76:casino.c      **** 
  77:casino.c      **** uint8_t casino(uint8_t* data, uint8_t dlen) {
 546              		.loc 1 77 45 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
  78:casino.c      ****   trigger_high();
 550              		.loc 1 78 3 view .LVU156
  77:casino.c      ****   trigger_high();
 551              		.loc 1 77 45 is_stmt 0 view .LVU157
 552 0000 10B5     		push	{r4, lr}
 553              	.LCFI6:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 4, -8
 556              		.cfi_offset 14, -4
 557              		.loc 1 78 3 view .LVU158
 558 0002 FFF7FEFF 		bl	trigger_high
 559              	.LVL54:
  79:casino.c      ****   int n = sizeof(arr)/sizeof(arr[0]);
 560              		.loc 1 79 3 is_stmt 1 view .LVU159
  80:casino.c      ****   draw(arr, n);
 561              		.loc 1 80 3 view .LVU160
 562 0006 074C     		ldr	r4, .L28
 563 0008 0F21     		movs	r1, #15
 564 000a 2000     		movs	r0, r4
 565 000c FFF7FEFF 		bl	draw
 566              	.LVL55:
  81:casino.c      ****   simpleserial_put('r', n, arr);
 567              		.loc 1 81 3 view .LVU161
 568 0010 2200     		movs	r2, r4
 569 0012 0F21     		movs	r1, #15
 570 0014 7220     		movs	r0, #114
 571 0016 FFF7FEFF 		bl	simpleserial_put
 572              	.LVL56:
  82:casino.c      ****   trigger_low();
 573              		.loc 1 82 3 view .LVU162
  83:casino.c      ****   return 0;
  84:casino.c      **** }
 574              		.loc 1 84 1 is_stmt 0 view .LVU163
 575              		@ sp needed
  82:casino.c      ****   trigger_low();
 576              		.loc 1 82 3 view .LVU164
 577 001a FFF7FEFF 		bl	trigger_low
 578              	.LVL57:
  83:casino.c      ****   return 0;
 579              		.loc 1 83 3 is_stmt 1 view .LVU165
 580              		.loc 1 84 1 is_stmt 0 view .LVU166
 581 001e 0020     		movs	r0, #0
 582 0020 10BD     		pop	{r4, pc}
 583              	.L29:
 584 0022 C046     		.align	2
 585              	.L28:
 586 0024 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE4:
 590              		.section	.text.startup.main,"ax",%progbits
 591              		.align	1
 592              		.global	main
 593              		.syntax unified
 594              		.code	16
 595              		.thumb_func
 596              		.fpu softvfp
 598              	main:
 599              	.LFB5:
  85:casino.c      **** 
  86:casino.c      **** int main(void) {
 600              		.loc 1 86 16 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ Volatile: function does not return.
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
  87:casino.c      **** 
  88:casino.c      ****   // WARNING: Do not call verify and casino from the same python process
  89:casino.c      ****   // Just call one at a time
  90:casino.c      **** 
  91:casino.c      ****   platform_init();
 605              		.loc 1 91 3 view .LVU168
  86:casino.c      **** 
 606              		.loc 1 86 16 is_stmt 0 view .LVU169
 607 0000 10B5     		push	{r4, lr}
 608              	.LCFI7:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 4, -8
 611              		.cfi_offset 14, -4
 612              		.loc 1 91 3 view .LVU170
 613 0002 FFF7FEFF 		bl	platform_init
 614              	.LVL58:
  92:casino.c      ****   init_uart();
 615              		.loc 1 92 3 is_stmt 1 view .LVU171
 616 0006 FFF7FEFF 		bl	init_uart
 617              	.LVL59:
  93:casino.c      ****   trigger_setup();
 618              		.loc 1 93 3 view .LVU172
 619 000a FFF7FEFF 		bl	trigger_setup
 620              	.LVL60:
  94:casino.c      ****   simpleserial_init();
 621              		.loc 1 94 3 view .LVU173
 622 000e FFF7FEFF 		bl	simpleserial_init
 623              	.LVL61:
  95:casino.c      ****   simpleserial_addcmd('a', 16, verify);
 624              		.loc 1 95 3 view .LVU174
 625 0012 1021     		movs	r1, #16
 626 0014 054A     		ldr	r2, .L32
 627 0016 6120     		movs	r0, #97
 628 0018 FFF7FEFF 		bl	simpleserial_addcmd
 629              	.LVL62:
  96:casino.c      ****   simpleserial_addcmd('s', 0, casino);
 630              		.loc 1 96 3 view .LVU175
 631 001c 0021     		movs	r1, #0
 632 001e 7320     		movs	r0, #115
 633 0020 034A     		ldr	r2, .L32+4
 634 0022 FFF7FEFF 		bl	simpleserial_addcmd
 635              	.LVL63:
 636              	.L31:
  97:casino.c      ****   while(1) {
 637              		.loc 1 97 3 discriminator 1 view .LVU176
  98:casino.c      **** 		simpleserial_get();
 638              		.loc 1 98 3 discriminator 1 view .LVU177
 639 0026 FFF7FEFF 		bl	simpleserial_get
 640              	.LVL64:
  97:casino.c      ****   while(1) {
 641              		.loc 1 97 8 discriminator 1 view .LVU178
 642 002a FCE7     		b	.L31
 643              	.L33:
 644              		.align	2
 645              	.L32:
 646 002c 00000000 		.word	verify
 647 0030 00000000 		.word	casino
 648              		.cfi_endproc
 649              	.LFE5:
 651              		.global	arr
 652              		.data
 653              		.set	.LANCHOR0,. + 0
 656              	arr:
 657 0000 0A141E28 		.ascii	"\012\024\036(2<FPZdnx\202\214\226"
 657      323C4650 
 657      5A646E78 
 657      828C96
 658              		.text
 659              	.Letext0:
 660              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 661              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 662              		.file 4 "/usr/include/newlib/sys/_types.h"
 663              		.file 5 "/usr/include/newlib/sys/reent.h"
 664              		.file 6 "/usr/include/newlib/sys/lock.h"
 665              		.file 7 "/usr/include/newlib/stdlib.h"
 666              		.file 8 ".././hal/hal.h"
 667              		.file 9 ".././hal/stm32f0/stm32f0_hal.h"
 668              		.file 10 "../simpleserial/simpleserial.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 casino.c
     /tmp/cctfN306.s:16     .text.verify:0000000000000000 $t
     /tmp/cctfN306.s:24     .text.verify:0000000000000000 verify
     /tmp/cctfN306.s:103    .text.verify:0000000000000030 $d
     /tmp/cctfN306.s:108    .text.verify1:0000000000000000 $t
     /tmp/cctfN306.s:115    .text.verify1:0000000000000000 verify1
     /tmp/cctfN306.s:183    .text.permute:0000000000000000 $t
     /tmp/cctfN306.s:190    .text.permute:0000000000000000 permute
     /tmp/cctfN306.s:373    .text.draw:0000000000000000 $t
     /tmp/cctfN306.s:380    .text.draw:0000000000000000 draw
     /tmp/cctfN306.s:528    .text.draw:0000000000000058 $d
     /tmp/cctfN306.s:536    .text.casino:0000000000000000 $t
     /tmp/cctfN306.s:543    .text.casino:0000000000000000 casino
     /tmp/cctfN306.s:586    .text.casino:0000000000000024 $d
     /tmp/cctfN306.s:591    .text.startup.main:0000000000000000 $t
     /tmp/cctfN306.s:598    .text.startup.main:0000000000000000 main
     /tmp/cctfN306.s:646    .text.startup.main:000000000000002c $d
     /tmp/cctfN306.s:656    .data:0000000000000000 arr

UNDEFINED SYMBOLS
simpleserial_put
__aeabi_idivmod
HAL_GetTick
srand
rand
trigger_high
trigger_low
platform_init
init_uart
trigger_setup
simpleserial_init
simpleserial_addcmd
simpleserial_get
